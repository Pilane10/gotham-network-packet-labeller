{
  "features": [
    {
      "field": "frame.time",
      "protocol_dependency": "frame",
      "description": "Arrival Time"
    },
    {
      "field": "frame.time_utc",
      "protocol_dependency": "frame",
      "description": "UTC Arrival Time"
    },
    {
      "field": "frame.time_epoch",
      "protocol_dependency": "frame",
      "description": "Epoch Arrival Time"
    },
    {
      "field": "frame.offset_shift",
      "protocol_dependency": "frame",
      "description": "Time shift for this packet"
    },
    {
      "field": "frame.time_delta",
      "protocol_dependency": "frame",
      "description": "Time delta from previous captured frame"
    },
    {
      "field": "frame.time_delta_displayed",
      "protocol_dependency": "frame",
      "description": "Time delta from previous displayed frame"
    },
    {
      "field": "frame.time_relative",
      "protocol_dependency": "frame",
      "description": "Time since reference or first frame"
    },
    {
      "field": "frame.time_relative_capture_start",
      "protocol_dependency": "frame",
      "description": "Time since start of capturing"
    },
    {
      "field": "frame.ref_time",
      "protocol_dependency": "frame",
      "description": "This is a Time Reference frame"
    },
    {
      "field": "frame.number",
      "protocol_dependency": "frame",
      "description": "Frame Number"
    },
    {
      "field": "frame.len",
      "protocol_dependency": "frame",
      "description": "Frame length on the wire"
    },
    {
      "field": "frame.cap_len",
      "protocol_dependency": "frame",
      "description": "Frame length stored into the capture file"
    },
    {
      "field": "frame.md5_hash",
      "protocol_dependency": "frame",
      "description": "Frame MD5 Hash"
    },
    {
      "field": "frame.p2p_dir",
      "protocol_dependency": "frame",
      "description": "Point-to-Point Direction"
    },
    {
      "field": "frame.link_nr",
      "protocol_dependency": "frame",
      "description": "Link Number"
    },
    {
      "field": "frame.file_off",
      "protocol_dependency": "frame",
      "description": "File Offset"
    },
    {
      "field": "frame.marked",
      "protocol_dependency": "frame",
      "description": "Frame is marked"
    },
    {
      "field": "frame.ignored",
      "protocol_dependency": "frame",
      "description": "Frame is ignored"
    },
    {
      "field": "frame.protocols",
      "protocol_dependency": "frame",
      "description": "Protocols in frame"
    },
    {
      "field": "frame.coloring_rule.name",
      "protocol_dependency": "frame",
      "description": "Coloring Rule Name"
    },
    {
      "field": "frame.coloring_rule.string",
      "protocol_dependency": "frame",
      "description": "Coloring Rule String"
    },
    {
      "field": "frame.section_number",
      "protocol_dependency": "frame",
      "description": "Section number"
    },
    {
      "field": "frame.interface_id",
      "protocol_dependency": "frame",
      "description": "Interface id"
    },
    {
      "field": "frame.interface_name",
      "protocol_dependency": "frame",
      "description": "Interface name"
    },
    {
      "field": "frame.interface_description",
      "protocol_dependency": "frame",
      "description": "Interface description"
    },
    {
      "field": "frame.interface_queue",
      "protocol_dependency": "frame",
      "description": "Interface queue"
    },
    {
      "field": "frame.packet_flags",
      "protocol_dependency": "frame",
      "description": "Packet flags"
    },
    {
      "field": "frame.packet_flags_direction",
      "protocol_dependency": "frame",
      "description": "Direction"
    },
    {
      "field": "frame.packet_flags_reception_type",
      "protocol_dependency": "frame",
      "description": "Reception type"
    },
    {
      "field": "frame.packet_flags_fcs_length",
      "protocol_dependency": "frame",
      "description": "FCS length"
    },
    {
      "field": "frame.packet_flags_reserved",
      "protocol_dependency": "frame",
      "description": "Reserved"
    },
    {
      "field": "frame.packet_flags_crc_error",
      "protocol_dependency": "frame",
      "description": "CRC error"
    },
    {
      "field": "frame.packet_flags_packet_too_error",
      "protocol_dependency": "frame",
      "description": "Packet too long error"
    },
    {
      "field": "frame.packet_flags_packet_too_short_error",
      "protocol_dependency": "frame",
      "description": "Packet too short error"
    },
    {
      "field": "frame.packet_flags_wrong_inter_frame_gap_error",
      "protocol_dependency": "frame",
      "description": "Wrong interframe gap error"
    },
    {
      "field": "frame.packet_flags_unaligned_frame_error",
      "protocol_dependency": "frame",
      "description": "Unaligned frame error"
    },
    {
      "field": "frame.packet_flags_start_frame_delimiter_error",
      "protocol_dependency": "frame",
      "description": "Start frame delimiter error"
    },
    {
      "field": "frame.packet_flags_preamble_error",
      "protocol_dependency": "frame",
      "description": "Preamble error"
    },
    {
      "field": "frame.packet_flags_symbol_error",
      "protocol_dependency": "frame",
      "description": "Symbol error"
    },
    {
      "field": "frame.comment",
      "protocol_dependency": "frame",
      "description": "Comment"
    },
    {
      "field": "frame.packet_id",
      "protocol_dependency": "frame",
      "description": "Packet id"
    },
    {
      "field": "frame.hash",
      "protocol_dependency": "frame",
      "description": "Hash Algorithm"
    },
    {
      "field": "frame.hash.value",
      "protocol_dependency": "frame",
      "description": "Hash Value"
    },
    {
      "field": "frame.verdict",
      "protocol_dependency": "frame",
      "description": "Verdict"
    },
    {
      "field": "frame.verdict.hw",
      "protocol_dependency": "frame",
      "description": "Hardware"
    },
    {
      "field": "frame.verdict.ebpf_tc",
      "protocol_dependency": "frame",
      "description": "eBPF TC"
    },
    {
      "field": "frame.verdict.ebpf_xdp",
      "protocol_dependency": "frame",
      "description": "eBPF XDP"
    },
    {
      "field": "frame.verdict.unknown",
      "protocol_dependency": "frame",
      "description": "Unknown"
    },
    {
      "field": "frame.drop_count",
      "protocol_dependency": "frame",
      "description": "Drop Count"
    },
    {
      "field": "frame.cb_pen",
      "protocol_dependency": "frame",
      "description": "Private Enterprise Number"
    },
    {
      "field": "frame.cb_copy",
      "protocol_dependency": "frame",
      "description": "Copying"
    },
    {
      "field": "frame.bblog",
      "protocol_dependency": "frame",
      "description": "Black Box Log"
    },
    {
      "field": "frame.bblog.ticks",
      "protocol_dependency": "frame",
      "description": "Ticks"
    },
    {
      "field": "frame.bblog.serial_nr",
      "protocol_dependency": "frame",
      "description": "Serial Number"
    },
    {
      "field": "frame.bblog.event_id",
      "protocol_dependency": "frame",
      "description": "Event Identifier"
    },
    {
      "field": "frame.bblog.event_flags",
      "protocol_dependency": "frame",
      "description": "Event Flags"
    },
    {
      "field": "frame.bblog.event_flags_rxbuf",
      "protocol_dependency": "frame",
      "description": "Receive buffer information"
    },
    {
      "field": "frame.bblog.event_flags_txbuf",
      "protocol_dependency": "frame",
      "description": "Send buffer information"
    },
    {
      "field": "frame.bblog.event_flags_hdr",
      "protocol_dependency": "frame",
      "description": "TCP header"
    },
    {
      "field": "frame.bblog.event_flags_verbose",
      "protocol_dependency": "frame",
      "description": "Additional information"
    },
    {
      "field": "frame.bblog.event_flags_stack",
      "protocol_dependency": "frame",
      "description": "Stack specific information"
    },
    {
      "field": "frame.bblog.errno",
      "protocol_dependency": "frame",
      "description": "Error Number"
    },
    {
      "field": "frame.bblog.rxb_acc",
      "protocol_dependency": "frame",
      "description": "Receive Buffer ACC"
    },
    {
      "field": "frame.bblog.rxb_ccc",
      "protocol_dependency": "frame",
      "description": "Receive Buffer CCC"
    },
    {
      "field": "frame.bblog.rxb_spare",
      "protocol_dependency": "frame",
      "description": "Receive Buffer Spare"
    },
    {
      "field": "frame.bblog.txb_acc",
      "protocol_dependency": "frame",
      "description": "Send Buffer ACC"
    },
    {
      "field": "frame.bblog.txb_ccc",
      "protocol_dependency": "frame",
      "description": "Send Buffer CCC"
    },
    {
      "field": "frame.bblog.txb_spare",
      "protocol_dependency": "frame",
      "description": "Send Buffer Spare"
    },
    {
      "field": "frame.bblog.state",
      "protocol_dependency": "frame",
      "description": "TCP State"
    },
    {
      "field": "frame.bblog.starttime",
      "protocol_dependency": "frame",
      "description": "Starttime"
    },
    {
      "field": "frame.bblog.iss",
      "protocol_dependency": "frame",
      "description": "Initial Sending Sequence Number (ISS)"
    },
    {
      "field": "frame.bblog.t_flags",
      "protocol_dependency": "frame",
      "description": "TCB Flags"
    },
    {
      "field": "frame.bblog.t_flags_ack_now",
      "protocol_dependency": "frame",
      "description": "Ack now"
    },
    {
      "field": "frame.bblog.t_flags_delayed_ack",
      "protocol_dependency": "frame",
      "description": "Delayed ack"
    },
    {
      "field": "frame.bblog.t_flags_no_delay",
      "protocol_dependency": "frame",
      "description": "No delay"
    },
    {
      "field": "frame.bblog.t_flags_no_opt",
      "protocol_dependency": "frame",
      "description": "No options"
    },
    {
      "field": "frame.bblog.t_flags_sent_fin",
      "protocol_dependency": "frame",
      "description": "Sent FIN"
    },
    {
      "field": "frame.bblog.t_flags_request_window_scale",
      "protocol_dependency": "frame",
      "description": "Have or will request Window Scaling"
    },
    {
      "field": "frame.bblog.t_flags_received_window_scale",
      "protocol_dependency": "frame",
      "description": "Peer has requested Window Scaling"
    },
    {
      "field": "frame.bblog.t_flags_request_timestamp",
      "protocol_dependency": "frame",
      "description": "Have or will request Timestamps"
    },
    {
      "field": "frame.bblog.t_flags_received_timestamp",
      "protocol_dependency": "frame",
      "description": "Peer has requested Timestamp"
    },
    {
      "field": "frame.bblog.t_flags_sack_permitted",
      "protocol_dependency": "frame",
      "description": "SACK permitted"
    },
    {
      "field": "frame.bblog.t_flags_need_syn",
      "protocol_dependency": "frame",
      "description": "Need SYN"
    },
    {
      "field": "frame.bblog.t_flags_need_fin",
      "protocol_dependency": "frame",
      "description": "Need FIN"
    },
    {
      "field": "frame.bblog.t_flags_no_push",
      "protocol_dependency": "frame",
      "description": "No push"
    },
    {
      "field": "frame.bblog.t_flags_prev_valid",
      "protocol_dependency": "frame",
      "description": "Saved values for bad retransmission valid"
    },
    {
      "field": "frame.bblog.t_flags_wake_socket_receive",
      "protocol_dependency": "frame",
      "description": "Wakeup receive socket"
    },
    {
      "field": "frame.bblog.t_flags_goodput_in_progress",
      "protocol_dependency": "frame",
      "description": "Goodput measurement in progress"
    },
    {
      "field": "frame.bblog.t_flags_more_to_come",
      "protocol_dependency": "frame",
      "description": "More to come"
    },
    {
      "field": "frame.bblog.t_flags_listen_queue_overflow",
      "protocol_dependency": "frame",
      "description": "Listen queue overflow"
    },
    {
      "field": "frame.bblog.t_flags_last_idle",
      "protocol_dependency": "frame",
      "description": "Connection was previously idle"
    },
    {
      "field": "frame.bblog.t_flags_zero_recv_window_sent",
      "protocol_dependency": "frame",
      "description": "Sent a RCV.WND = 0 in response"
    },
    {
      "field": "frame.bblog.t_flags_be_in_fast_recovery",
      "protocol_dependency": "frame",
      "description": "Currently in fast recovery"
    },
    {
      "field": "frame.bblog.t_flags_was_in_fast_recovery",
      "protocol_dependency": "frame",
      "description": "Was in fast recovery"
    },
    {
      "field": "frame.bblog.t_flags_signature",
      "protocol_dependency": "frame",
      "description": "MD5 signature required"
    },
    {
      "field": "frame.bblog.t_flags_force_data",
      "protocol_dependency": "frame",
      "description": "Force data"
    },
    {
      "field": "frame.bblog.t_flags_tso",
      "protocol_dependency": "frame",
      "description": "TSO"
    },
    {
      "field": "frame.bblog.t_flags_toe",
      "protocol_dependency": "frame",
      "description": "TOE"
    },
    {
      "field": "frame.bblog.t_flags_unused_0",
      "protocol_dependency": "frame",
      "description": "Unused 1"
    },
    {
      "field": "frame.bblog.t_flags_unused_1",
      "protocol_dependency": "frame",
      "description": "Unused 2"
    },
    {
      "field": "frame.bblog.t_flags_lost_rtx_detection",
      "protocol_dependency": "frame",
      "description": "Lost retransmission detection"
    },
    {
      "field": "frame.bblog.t_flags_be_in_cong_recovery",
      "protocol_dependency": "frame",
      "description": "Currently in congestion avoidance"
    },
    {
      "field": "frame.bblog.t_flags_was_in_cong_recovery",
      "protocol_dependency": "frame",
      "description": "Was in congestion avoidance"
    },
    {
      "field": "frame.bblog.t_flags_tfo",
      "protocol_dependency": "frame",
      "description": "TFO"
    },
    {
      "field": "frame.bblog.snd_una",
      "protocol_dependency": "frame",
      "description": "Oldest Unacknowledged Sequence Number (SND.UNA)"
    },
    {
      "field": "frame.bblog.snd_max",
      "protocol_dependency": "frame",
      "description": "Newest Sequence Number Sent (SND.MAX)"
    },
    {
      "field": "frame.bblog.snd_cwnd",
      "protocol_dependency": "frame",
      "description": "Congestion Window"
    },
    {
      "field": "frame.bblog.snd_nxt",
      "protocol_dependency": "frame",
      "description": "Next Sequence Number (SND.NXT)"
    },
    {
      "field": "frame.bblog.snd_recover",
      "protocol_dependency": "frame",
      "description": "Recovery Sequence Number (SND.RECOVER)"
    },
    {
      "field": "frame.bblog.snd_wnd",
      "protocol_dependency": "frame",
      "description": "Send Window (SND.WND)"
    },
    {
      "field": "frame.bblog.snd_ssthresh",
      "protocol_dependency": "frame",
      "description": "Slowstart Threshold (SSTHREASH)"
    },
    {
      "field": "frame.bblog.srtt",
      "protocol_dependency": "frame",
      "description": "Smoothed Round Trip Time (SRTT)"
    },
    {
      "field": "frame.bblog.rttvar",
      "protocol_dependency": "frame",
      "description": "Round Trip Timer Variance (RTTVAR)"
    },
    {
      "field": "frame.bblog.rcv_up",
      "protocol_dependency": "frame",
      "description": "Receive Urgent Pointer (RCV.UP)"
    },
    {
      "field": "frame.bblog.rcv_adv",
      "protocol_dependency": "frame",
      "description": "Receive Advanced (RCV.ADV)"
    },
    {
      "field": "frame.bblog.t_flags2",
      "protocol_dependency": "frame",
      "description": "TCB Flags2"
    },
    {
      "field": "frame.bblog.t_flags2_plpmtu_blackhole",
      "protocol_dependency": "frame",
      "description": "PMTU blackhole detection"
    },
    {
      "field": "frame.bblog.t_flags2_plpmtu_pmtud",
      "protocol_dependency": "frame",
      "description": "Path MTU discovery"
    },
    {
      "field": "frame.bblog.t_flags2_plpmtu_maxsegsnt",
      "protocol_dependency": "frame",
      "description": "Last segment sent was a full segment"
    },
    {
      "field": "frame.bblog.t_flags2_log_auto",
      "protocol_dependency": "frame",
      "description": "Connection auto-logging"
    },
    {
      "field": "frame.bblog.t_flags2_drop_after_data",
      "protocol_dependency": "frame",
      "description": "Drop connection after all data has been acknowledged"
    },
    {
      "field": "frame.bblog.t_flags2_ecn_permit",
      "protocol_dependency": "frame",
      "description": "ECN"
    },
    {
      "field": "frame.bblog.t_flags2_ecn_snd_cwr",
      "protocol_dependency": "frame",
      "description": "ECN CWR queued"
    },
    {
      "field": "frame.bblog.t_flags2_ecn_snd_ece",
      "protocol_dependency": "frame",
      "description": "ECN ECE queued"
    },
    {
      "field": "frame.bblog.t_flags2_ace_permit",
      "protocol_dependency": "frame",
      "description": "Accurate ECN mode"
    },
    {
      "field": "frame.bblog.t_flags2_first_bytes_complete",
      "protocol_dependency": "frame",
      "description": "First bytes in/out"
    },
    {
      "field": "frame.bblog.rcv_nxt",
      "protocol_dependency": "frame",
      "description": "Receive Next (RCV.NXT)"
    },
    {
      "field": "frame.bblog.rcv_wnd",
      "protocol_dependency": "frame",
      "description": "Receive Window (RCV.WND)"
    },
    {
      "field": "frame.bblog.dupacks",
      "protocol_dependency": "frame",
      "description": "Duplicate Acknowledgements"
    },
    {
      "field": "frame.bblog.seg_qlen",
      "protocol_dependency": "frame",
      "description": "Segment Queue Length"
    },
    {
      "field": "frame.bblog.snd_num_holes",
      "protocol_dependency": "frame",
      "description": "Number of Holes"
    },
    {
      "field": "frame.bblog.flex_1",
      "protocol_dependency": "frame",
      "description": "Flex 1"
    },
    {
      "field": "frame.bblog.flex_2",
      "protocol_dependency": "frame",
      "description": "Flex 2"
    },
    {
      "field": "frame.bblog.first_byte_in",
      "protocol_dependency": "frame",
      "description": "Time of First Byte In"
    },
    {
      "field": "frame.bblog.first_byte_out",
      "protocol_dependency": "frame",
      "description": "Time of First Byte Out"
    },
    {
      "field": "frame.bblog.snd_shift",
      "protocol_dependency": "frame",
      "description": "Snd.Wind.Shift"
    },
    {
      "field": "frame.bblog.rcv_shift",
      "protocol_dependency": "frame",
      "description": "Rcv.Wind.Shift"
    },
    {
      "field": "frame.bblog.pad_1",
      "protocol_dependency": "frame",
      "description": "Padding"
    },
    {
      "field": "frame.bblog.pad_2",
      "protocol_dependency": "frame",
      "description": "Padding"
    },
    {
      "field": "frame.bblog.pad_3",
      "protocol_dependency": "frame",
      "description": "Padding"
    },
    {
      "field": "frame.bblog.payload_length",
      "protocol_dependency": "frame",
      "description": "TCP Payload Length"
    },
    {
      "field": "frame.pcaplog.data_type",
      "protocol_dependency": "frame",
      "description": "Date Type"
    },
    {
      "field": "frame.pcaplog.data_length",
      "protocol_dependency": "frame",
      "description": "Data Length"
    },
    {
      "field": "frame.pcaplog.data",
      "protocol_dependency": "frame",
      "description": "Data"
    },
    {
      "field": "frame.encap_type",
      "protocol_dependency": "frame",
      "description": "Encapsulation type"
    },
    {
      "field": "frame.comment.expert",
      "protocol_dependency": "frame",
      "description": "Formatted comment"
    },
    {
      "field": "frame.time_invalid",
      "protocol_dependency": "frame",
      "description": "Arrival Time: Fractional second out of range (0-1000000000)"
    },
    {
      "field": "frame.incomplete",
      "protocol_dependency": "frame",
      "description": "Incomplete dissector"
    },
    {
      "field": "frame.len_lt_caplen",
      "protocol_dependency": "frame",
      "description": "Frame length is less than captured length"
    },
    {
      "field": "eth.dst",
      "protocol_dependency": "eth",
      "description": "Destination"
    },
    {
      "field": "eth.dst_resolved",
      "protocol_dependency": "eth",
      "description": "Destination (resolved)"
    },
    {
      "field": "eth.dst.oui",
      "protocol_dependency": "eth",
      "description": "Destination OUI"
    },
    {
      "field": "eth.dst.oui_resolved",
      "protocol_dependency": "eth",
      "description": "Destination OUI (resolved)"
    },
    {
      "field": "eth.src",
      "protocol_dependency": "eth",
      "description": "Source"
    },
    {
      "field": "eth.src_resolved",
      "protocol_dependency": "eth",
      "description": "Source (resolved)"
    },
    {
      "field": "eth.src.oui",
      "protocol_dependency": "eth",
      "description": "Source OUI"
    },
    {
      "field": "eth.src.oui_resolved",
      "protocol_dependency": "eth",
      "description": "Source OUI (resolved)"
    },
    {
      "field": "eth.len",
      "protocol_dependency": "eth",
      "description": "Length"
    },
    {
      "field": "eth.type",
      "protocol_dependency": "eth",
      "description": "Type"
    },
    {
      "field": "eth.invalid_lentype",
      "protocol_dependency": "eth",
      "description": "Invalid length/type"
    },
    {
      "field": "eth.addr",
      "protocol_dependency": "eth",
      "description": "Address"
    },
    {
      "field": "eth.addr_resolved",
      "protocol_dependency": "eth",
      "description": "Address (resolved)"
    },
    {
      "field": "eth.addr.oui",
      "protocol_dependency": "eth",
      "description": "Address OUI"
    },
    {
      "field": "eth.addr.oui_resolved",
      "protocol_dependency": "eth",
      "description": "Address OUI (resolved)"
    },
    {
      "field": "eth.padding",
      "protocol_dependency": "eth",
      "description": "Padding"
    },
    {
      "field": "eth.trailer",
      "protocol_dependency": "eth",
      "description": "Trailer"
    },
    {
      "field": "eth.fcs",
      "protocol_dependency": "eth",
      "description": "Frame check sequence"
    },
    {
      "field": "eth.fcs.status",
      "protocol_dependency": "eth",
      "description": "FCS Status"
    },
    {
      "field": "eth.dst.lg",
      "protocol_dependency": "eth",
      "description": "LG bit"
    },
    {
      "field": "eth.dst.ig",
      "protocol_dependency": "eth",
      "description": "IG bit"
    },
    {
      "field": "eth.src.lg",
      "protocol_dependency": "eth",
      "description": "LG bit"
    },
    {
      "field": "eth.src.ig",
      "protocol_dependency": "eth",
      "description": "IG bit"
    },
    {
      "field": "eth.lg",
      "protocol_dependency": "eth",
      "description": "LG bit"
    },
    {
      "field": "eth.ig",
      "protocol_dependency": "eth",
      "description": "IG bit"
    },
    {
      "field": "eth.invalid_lentype.expert",
      "protocol_dependency": "eth",
      "description": "Invalid length/type"
    },
    {
      "field": "eth.src_not_group",
      "protocol_dependency": "eth",
      "description": "Source MAC must not be a group address: IEEE 802.3-2002, Section 3.2.3(b)"
    },
    {
      "field": "eth.fcs_bad",
      "protocol_dependency": "eth",
      "description": "Bad checksum"
    },
    {
      "field": "eth.len.past_end",
      "protocol_dependency": "eth",
      "description": "Length field value goes past the end of the payload"
    },
    {
      "field": "eth.padding_bad",
      "protocol_dependency": "eth",
      "description": "Padding identification may be inaccurate and impact trailer dissector"
    },
    {
      "field": "arp.hw.type",
      "protocol_dependency": "arp",
      "description": "Hardware type"
    },
    {
      "field": "arp.proto.type",
      "protocol_dependency": "arp",
      "description": "Protocol type"
    },
    {
      "field": "arp.hw.size",
      "protocol_dependency": "arp",
      "description": "Hardware size"
    },
    {
      "field": "arp.src.htype",
      "protocol_dependency": "arp",
      "description": "Sender ATM number type"
    },
    {
      "field": "arp.src.hlen",
      "protocol_dependency": "arp",
      "description": "Sender ATM number length"
    },
    {
      "field": "arp.src.stype",
      "protocol_dependency": "arp",
      "description": "Sender ATM subaddress type"
    },
    {
      "field": "arp.src.slen",
      "protocol_dependency": "arp",
      "description": "Sender ATM subaddress length"
    },
    {
      "field": "arp.proto.size",
      "protocol_dependency": "arp",
      "description": "Protocol size"
    },
    {
      "field": "arp.opcode",
      "protocol_dependency": "arp",
      "description": "Opcode"
    },
    {
      "field": "arp.isgratuitous",
      "protocol_dependency": "arp",
      "description": "Is gratuitous"
    },
    {
      "field": "arp.isprobe",
      "protocol_dependency": "arp",
      "description": "Is probe"
    },
    {
      "field": "arp.isannouncement",
      "protocol_dependency": "arp",
      "description": "Is announcement"
    },
    {
      "field": "arp.src.pln",
      "protocol_dependency": "arp",
      "description": "Sender protocol size"
    },
    {
      "field": "arp.dst.htype",
      "protocol_dependency": "arp",
      "description": "Target ATM number type"
    },
    {
      "field": "arp.dst.hlen",
      "protocol_dependency": "arp",
      "description": "Target ATM number length"
    },
    {
      "field": "arp.dst.stype",
      "protocol_dependency": "arp",
      "description": "Target ATM subaddress type"
    },
    {
      "field": "arp.dst.slen",
      "protocol_dependency": "arp",
      "description": "Target ATM subaddress length"
    },
    {
      "field": "arp.dst.pln",
      "protocol_dependency": "arp",
      "description": "Target protocol size"
    },
    {
      "field": "arp.src.hw",
      "protocol_dependency": "arp",
      "description": "Sender hardware address"
    },
    {
      "field": "arp.src.hw_mac",
      "protocol_dependency": "arp",
      "description": "Sender MAC address"
    },
    {
      "field": "arp.src.hw_ax25",
      "protocol_dependency": "arp",
      "description": "Sender AX.25 address"
    },
    {
      "field": "arp.src.atm_num_e164",
      "protocol_dependency": "arp",
      "description": "Sender ATM number (E.164)"
    },
    {
      "field": "arp.src.atm_num_nsap",
      "protocol_dependency": "arp",
      "description": "Sender ATM number (NSAP)"
    },
    {
      "field": "arp.src.atm_subaddr",
      "protocol_dependency": "arp",
      "description": "Sender ATM subaddress"
    },
    {
      "field": "arp.src.proto",
      "protocol_dependency": "arp",
      "description": "Sender protocol address"
    },
    {
      "field": "arp.src.proto_ipv4",
      "protocol_dependency": "arp",
      "description": "Sender IP address"
    },
    {
      "field": "arp.dst.hw",
      "protocol_dependency": "arp",
      "description": "Target hardware address"
    },
    {
      "field": "arp.dst.hw_mac",
      "protocol_dependency": "arp",
      "description": "Target MAC address"
    },
    {
      "field": "arp.dst.hw_ax25",
      "protocol_dependency": "arp",
      "description": "Target AX.25 address"
    },
    {
      "field": "arp.dst.atm_num_e164",
      "protocol_dependency": "arp",
      "description": "Target ATM number (E.164)"
    },
    {
      "field": "arp.dst.atm_num_nsap",
      "protocol_dependency": "arp",
      "description": "Target ATM number (NSAP)"
    },
    {
      "field": "arp.dst.atm_subaddr",
      "protocol_dependency": "arp",
      "description": "Target ATM subaddress"
    },
    {
      "field": "arp.dst.proto",
      "protocol_dependency": "arp",
      "description": "Target protocol address"
    },
    {
      "field": "arp.dst.proto_ipv4",
      "protocol_dependency": "arp",
      "description": "Target IP address"
    },
    {
      "field": "arp.dst.drarp_error_status",
      "protocol_dependency": "arp",
      "description": "DRARP error status"
    },
    {
      "field": "arp.duplicate-address-frame",
      "protocol_dependency": "arp",
      "description": "Frame showing earlier use of IP address"
    },
    {
      "field": "arp.seconds-since-duplicate-address-frame",
      "protocol_dependency": "arp",
      "description": "Seconds since earlier frame seen"
    },
    {
      "field": "arp.src.atm_data_country_code",
      "protocol_dependency": "arp",
      "description": "Data Country Code"
    },
    {
      "field": "arp.src.atm_data_country_code_group",
      "protocol_dependency": "arp",
      "description": "Data Country Code (group)"
    },
    {
      "field": "arp.src.atm_high_order_dsp",
      "protocol_dependency": "arp",
      "description": "High Order DSP"
    },
    {
      "field": "arp.src.atm_end_system_identifier",
      "protocol_dependency": "arp",
      "description": "End System Identifier"
    },
    {
      "field": "arp.src.atm_selector",
      "protocol_dependency": "arp",
      "description": "Selector"
    },
    {
      "field": "arp.src.atm_international_code_designator",
      "protocol_dependency": "arp",
      "description": "International Code Designator"
    },
    {
      "field": "arp.src.atm_international_code_designator_group",
      "protocol_dependency": "arp",
      "description": "International Code Designator (group)"
    },
    {
      "field": "arp.src.atm_e.164_isdn",
      "protocol_dependency": "arp",
      "description": "E.164 ISDN"
    },
    {
      "field": "arp.src.atm_e.164_isdn_group",
      "protocol_dependency": "arp",
      "description": "E.164 ISDN"
    },
    {
      "field": "arp.src.atm_rest_of_address",
      "protocol_dependency": "arp",
      "description": "Rest of address"
    },
    {
      "field": "arp.src.atm_afi",
      "protocol_dependency": "arp",
      "description": "AFI"
    },
    {
      "field": "arp.duplicate-address-detected",
      "protocol_dependency": "arp",
      "description": "Duplicate IP address configured"
    },
    {
      "field": "arp.packet-storm-detected",
      "protocol_dependency": "arp",
      "description": "ARP packet storm detected"
    },
    {
      "field": "arp.src.atm_afi.unknown",
      "protocol_dependency": "arp",
      "description": "Unknown AFI"
    },
    {
      "field": "icmp.type",
      "protocol_dependency": "icmp",
      "description": "Type"
    },
    {
      "field": "icmp.code",
      "protocol_dependency": "icmp",
      "description": "Code"
    },
    {
      "field": "icmp.checksum",
      "protocol_dependency": "icmp",
      "description": "Checksum"
    },
    {
      "field": "icmp.checksum.status",
      "protocol_dependency": "icmp",
      "description": "Checksum Status"
    },
    {
      "field": "icmp.unused",
      "protocol_dependency": "icmp",
      "description": "Unused"
    },
    {
      "field": "icmp.reserved",
      "protocol_dependency": "icmp",
      "description": "Reserved"
    },
    {
      "field": "icmp.ident",
      "protocol_dependency": "icmp",
      "description": "Identifier (BE)"
    },
    {
      "field": "icmp.ident_le",
      "protocol_dependency": "icmp",
      "description": "Identifier (LE)"
    },
    {
      "field": "icmp.seq",
      "protocol_dependency": "icmp",
      "description": "Sequence Number (BE)"
    },
    {
      "field": "icmp.seq_le",
      "protocol_dependency": "icmp",
      "description": "Sequence Number (LE)"
    },
    {
      "field": "icmp.mtu",
      "protocol_dependency": "icmp",
      "description": "MTU of next hop"
    },
    {
      "field": "icmp.num_addrs",
      "protocol_dependency": "icmp",
      "description": "Number of addresses"
    },
    {
      "field": "icmp.addr_entry_size",
      "protocol_dependency": "icmp",
      "description": "Address entry size"
    },
    {
      "field": "icmp.lifetime",
      "protocol_dependency": "icmp",
      "description": "Lifetime"
    },
    {
      "field": "icmp.pointer",
      "protocol_dependency": "icmp",
      "description": "Pointer"
    },
    {
      "field": "icmp.router_address",
      "protocol_dependency": "icmp",
      "description": "Router address"
    },
    {
      "field": "icmp.pref_level",
      "protocol_dependency": "icmp",
      "description": "Preference level"
    },
    {
      "field": "icmp.originate_timestamp",
      "protocol_dependency": "icmp",
      "description": "Originate Timestamp"
    },
    {
      "field": "icmp.receive_timestamp",
      "protocol_dependency": "icmp",
      "description": "Receive Timestamp"
    },
    {
      "field": "icmp.transmit_timestamp",
      "protocol_dependency": "icmp",
      "description": "Transmit Timestamp"
    },
    {
      "field": "icmp.address_mask",
      "protocol_dependency": "icmp",
      "description": "Address Mask"
    },
    {
      "field": "icmp.redir_gw",
      "protocol_dependency": "icmp",
      "description": "Gateway Address"
    },
    {
      "field": "icmp.mip.type",
      "protocol_dependency": "icmp",
      "description": "Extension Type"
    },
    {
      "field": "icmp.mip.length",
      "protocol_dependency": "icmp",
      "description": "Length"
    },
    {
      "field": "icmp.mip.prefixlength",
      "protocol_dependency": "icmp",
      "description": "Prefix Length"
    },
    {
      "field": "icmp.mip.seq",
      "protocol_dependency": "icmp",
      "description": "Sequence Number"
    },
    {
      "field": "icmp.mip.life",
      "protocol_dependency": "icmp",
      "description": "Registration Lifetime"
    },
    {
      "field": "icmp.mip.flags",
      "protocol_dependency": "icmp",
      "description": "Flags"
    },
    {
      "field": "icmp.mip.r",
      "protocol_dependency": "icmp",
      "description": "Registration Required"
    },
    {
      "field": "icmp.mip.b",
      "protocol_dependency": "icmp",
      "description": "Busy"
    },
    {
      "field": "icmp.mip.h",
      "protocol_dependency": "icmp",
      "description": "Home Agent"
    },
    {
      "field": "icmp.mip.f",
      "protocol_dependency": "icmp",
      "description": "Foreign Agent"
    },
    {
      "field": "icmp.mip.m",
      "protocol_dependency": "icmp",
      "description": "Minimal Encapsulation"
    },
    {
      "field": "icmp.mip.g",
      "protocol_dependency": "icmp",
      "description": "GRE"
    },
    {
      "field": "icmp.mip.v",
      "protocol_dependency": "icmp",
      "description": "VJ Comp"
    },
    {
      "field": "icmp.mip.rt",
      "protocol_dependency": "icmp",
      "description": "Reverse tunneling"
    },
    {
      "field": "icmp.mip.u",
      "protocol_dependency": "icmp",
      "description": "UDP tunneling"
    },
    {
      "field": "icmp.mip.x",
      "protocol_dependency": "icmp",
      "description": "Revocation support"
    },
    {
      "field": "icmp.mip.reserved",
      "protocol_dependency": "icmp",
      "description": "Reserved"
    },
    {
      "field": "icmp.mip.coa",
      "protocol_dependency": "icmp",
      "description": "Care-Of-Address"
    },
    {
      "field": "icmp.mip.challenge",
      "protocol_dependency": "icmp",
      "description": "Challenge"
    },
    {
      "field": "icmp.mip.content",
      "protocol_dependency": "icmp",
      "description": "Content"
    },
    {
      "field": "icmp.ext",
      "protocol_dependency": "icmp",
      "description": "ICMP Extensions"
    },
    {
      "field": "icmp.ext.version",
      "protocol_dependency": "icmp",
      "description": "Version"
    },
    {
      "field": "icmp.ext.res",
      "protocol_dependency": "icmp",
      "description": "Reserved"
    },
    {
      "field": "icmp.ext.checksum",
      "protocol_dependency": "icmp",
      "description": "Checksum"
    },
    {
      "field": "icmp.ext.checksum.status",
      "protocol_dependency": "icmp",
      "description": "Checksum Status"
    },
    {
      "field": "icmp.ext.length",
      "protocol_dependency": "icmp",
      "description": "Length"
    },
    {
      "field": "icmp.ext.class",
      "protocol_dependency": "icmp",
      "description": "Class"
    },
    {
      "field": "icmp.ext.ctype",
      "protocol_dependency": "icmp",
      "description": "C-Type"
    },
    {
      "field": "icmp.ext.data",
      "protocol_dependency": "icmp",
      "description": "Data"
    },
    {
      "field": "icmp.mpls.label",
      "protocol_dependency": "icmp",
      "description": "Label"
    },
    {
      "field": "icmp.mpls.exp",
      "protocol_dependency": "icmp",
      "description": "Experimental"
    },
    {
      "field": "icmp.mpls.s",
      "protocol_dependency": "icmp",
      "description": "Stack bit"
    },
    {
      "field": "icmp.mpls.ttl",
      "protocol_dependency": "icmp",
      "description": "Time to live"
    },
    {
      "field": "icmp.mpls.data",
      "protocol_dependency": "icmp",
      "description": "Data"
    },
    {
      "field": "icmp.resp_in",
      "protocol_dependency": "icmp",
      "description": "Response frame"
    },
    {
      "field": "icmp.no_resp",
      "protocol_dependency": "icmp",
      "description": "No response seen"
    },
    {
      "field": "icmp.resp_to",
      "protocol_dependency": "icmp",
      "description": "Request frame"
    },
    {
      "field": "icmp.resptime",
      "protocol_dependency": "icmp",
      "description": "Response time"
    },
    {
      "field": "icmp.data_time",
      "protocol_dependency": "icmp",
      "description": "Timestamp from icmp data"
    },
    {
      "field": "icmp.data_time_relative",
      "protocol_dependency": "icmp",
      "description": "Timestamp from icmp data (relative)"
    },
    {
      "field": "icmp.length",
      "protocol_dependency": "icmp",
      "description": "Length"
    },
    {
      "field": "icmp.length.original_datagram",
      "protocol_dependency": "icmp",
      "description": "Length of original datagram"
    },
    {
      "field": "icmp.int_info.role",
      "protocol_dependency": "icmp",
      "description": "Interface Role"
    },
    {
      "field": "icmp.int_info.reserved",
      "protocol_dependency": "icmp",
      "description": "Reserved"
    },
    {
      "field": "icmp.int_info.ifindex",
      "protocol_dependency": "icmp",
      "description": "ifIndex"
    },
    {
      "field": "icmp.int_info.ipaddr",
      "protocol_dependency": "icmp",
      "description": "IP Address"
    },
    {
      "field": "icmp.int_info.name_present",
      "protocol_dependency": "icmp",
      "description": "Interface Name"
    },
    {
      "field": "icmp.int_info.mtu_present",
      "protocol_dependency": "icmp",
      "description": "MTU"
    },
    {
      "field": "icmp.int_info.index",
      "protocol_dependency": "icmp",
      "description": "Interface Index"
    },
    {
      "field": "icmp.int_info.afi",
      "protocol_dependency": "icmp",
      "description": "Address Family Identifier"
    },
    {
      "field": "icmp.int_info.ipv4",
      "protocol_dependency": "icmp",
      "description": "Source"
    },
    {
      "field": "icmp.int_info.ipv6",
      "protocol_dependency": "icmp",
      "description": "Source"
    },
    {
      "field": "icmp.int_info.ipunknown",
      "protocol_dependency": "icmp",
      "description": "Source"
    },
    {
      "field": "icmp.int_info.name_length",
      "protocol_dependency": "icmp",
      "description": "Name Length"
    },
    {
      "field": "icmp.int_info.name",
      "protocol_dependency": "icmp",
      "description": "Name"
    },
    {
      "field": "icmp.int_info.mtu",
      "protocol_dependency": "icmp",
      "description": "Maximum Transmission Unit"
    },
    {
      "field": "icmp.ext.echo.seq",
      "protocol_dependency": "icmp",
      "description": "Sequence Number"
    },
    {
      "field": "icmp.ext.echo.req.res",
      "protocol_dependency": "icmp",
      "description": "Reserved"
    },
    {
      "field": "icmp.ext.echo.req.local",
      "protocol_dependency": "icmp",
      "description": "Local bit"
    },
    {
      "field": "icmp.ext.echo.rsp.state",
      "protocol_dependency": "icmp",
      "description": "State"
    },
    {
      "field": "icmp.ext.echo.rsp.res",
      "protocol_dependency": "icmp",
      "description": "Reserved"
    },
    {
      "field": "icmp.ext.echo.rsp.active",
      "protocol_dependency": "icmp",
      "description": "Active bit"
    },
    {
      "field": "icmp.ext.echo.rsp.ipv4",
      "protocol_dependency": "icmp",
      "description": "IPv4 bit"
    },
    {
      "field": "icmp.ext.echo.rsp.ipv6",
      "protocol_dependency": "icmp",
      "description": "IPv6 bit"
    },
    {
      "field": "icmp.int_ident.name",
      "protocol_dependency": "icmp",
      "description": "Name"
    },
    {
      "field": "icmp.int_ident.index",
      "protocol_dependency": "icmp",
      "description": "Interface Index"
    },
    {
      "field": "icmp.int_ident.afi",
      "protocol_dependency": "icmp",
      "description": "Address Family Identifier"
    },
    {
      "field": "icmp.int_ident.addr_length",
      "protocol_dependency": "icmp",
      "description": "Address Length"
    },
    {
      "field": "icmp.int_ident.reserved",
      "protocol_dependency": "icmp",
      "description": "Reserved"
    },
    {
      "field": "icmp.int_ident.ipv4",
      "protocol_dependency": "icmp",
      "description": "Address"
    },
    {
      "field": "icmp.int_ident.ipv6",
      "protocol_dependency": "icmp",
      "description": "Address"
    },
    {
      "field": "icmp.int_ident.address",
      "protocol_dependency": "icmp",
      "description": "Address"
    },
    {
      "field": "icmp.resp_not_found",
      "protocol_dependency": "icmp",
      "description": "Response not found"
    },
    {
      "field": "icmp.checksum_bad",
      "protocol_dependency": "icmp",
      "description": "Bad checksum"
    },
    {
      "field": "icmp.ext.checksum_bad",
      "protocol_dependency": "icmp",
      "description": "Bad checksum"
    },
    {
      "field": "icmpv6.type",
      "protocol_dependency": "icmpv6",
      "description": "Type"
    },
    {
      "field": "icmpv6.code",
      "protocol_dependency": "icmpv6",
      "description": "Code"
    },
    {
      "field": "icmpv6.checksum",
      "protocol_dependency": "icmpv6",
      "description": "Checksum"
    },
    {
      "field": "icmpv6.checksum.status",
      "protocol_dependency": "icmpv6",
      "description": "Checksum Status"
    },
    {
      "field": "icmpv6.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.data",
      "protocol_dependency": "icmpv6",
      "description": "Data"
    },
    {
      "field": "icmpv6.unknown_data",
      "protocol_dependency": "icmpv6",
      "description": "Unknown Data"
    },
    {
      "field": "icmpv6.mtu",
      "protocol_dependency": "icmpv6",
      "description": "MTU"
    },
    {
      "field": "icmpv6.pointer",
      "protocol_dependency": "icmpv6",
      "description": "Pointer"
    },
    {
      "field": "icmpv6.echo.identifier",
      "protocol_dependency": "icmpv6",
      "description": "Identifier"
    },
    {
      "field": "icmpv6.echo.sequence_number",
      "protocol_dependency": "icmpv6",
      "description": "Sequence"
    },
    {
      "field": "icmpv6.nonce",
      "protocol_dependency": "icmpv6",
      "description": "Nonce"
    },
    {
      "field": "icmpv6.data_time",
      "protocol_dependency": "icmpv6",
      "description": "Timestamp from Echo data"
    },
    {
      "field": "icmpv6.data_time_relative",
      "protocol_dependency": "icmpv6",
      "description": "Timestamp from Echo data (relative)"
    },
    {
      "field": "icmpv6.nd.ra.cur_hop_limit",
      "protocol_dependency": "icmpv6",
      "description": "Cur hop limit"
    },
    {
      "field": "icmpv6.nd.ra.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.nd.ra.flag.m",
      "protocol_dependency": "icmpv6",
      "description": "Managed address configuration"
    },
    {
      "field": "icmpv6.nd.ra.flag.o",
      "protocol_dependency": "icmpv6",
      "description": "Other configuration"
    },
    {
      "field": "icmpv6.nd.ra.flag.h",
      "protocol_dependency": "icmpv6",
      "description": "Home Agent"
    },
    {
      "field": "icmpv6.nd.ra.flag.prf",
      "protocol_dependency": "icmpv6",
      "description": "Prf (Default Router Preference)"
    },
    {
      "field": "icmpv6.nd.ra.flag.p",
      "protocol_dependency": "icmpv6",
      "description": "ND Proxy"
    },
    {
      "field": "icmpv6.nd.ra.flag.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.nd.ra.router_lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Router lifetime (s)"
    },
    {
      "field": "icmpv6.nd.ra.reachable_time",
      "protocol_dependency": "icmpv6",
      "description": "Reachable time (ms)"
    },
    {
      "field": "icmpv6.nd.ra.retrans_timer",
      "protocol_dependency": "icmpv6",
      "description": "Retrans timer (ms)"
    },
    {
      "field": "icmpv6.nd.ns.target_address",
      "protocol_dependency": "icmpv6",
      "description": "Target Address"
    },
    {
      "field": "icmpv6.nd.na.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.nd.na.flag.r",
      "protocol_dependency": "icmpv6",
      "description": "Router"
    },
    {
      "field": "icmpv6.nd.na.flag.s",
      "protocol_dependency": "icmpv6",
      "description": "Solicited"
    },
    {
      "field": "icmpv6.nd.na.flag.o",
      "protocol_dependency": "icmpv6",
      "description": "Override"
    },
    {
      "field": "icmpv6.nd.na.flag.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.nd.na.target_address",
      "protocol_dependency": "icmpv6",
      "description": "Target Address"
    },
    {
      "field": "icmpv6.nd.rd.target_address",
      "protocol_dependency": "icmpv6",
      "description": "Target Address"
    },
    {
      "field": "icmpv6.rd.na.destination_address",
      "protocol_dependency": "icmpv6",
      "description": "Destination Address"
    },
    {
      "field": "icmpv6.opt",
      "protocol_dependency": "icmpv6",
      "description": "ICMPv6 Option"
    },
    {
      "field": "icmpv6.opt.type",
      "protocol_dependency": "icmpv6",
      "description": "Type"
    },
    {
      "field": "icmpv6.opt.length",
      "protocol_dependency": "icmpv6",
      "description": "Length"
    },
    {
      "field": "icmpv6.opt.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.opt.padding",
      "protocol_dependency": "icmpv6",
      "description": "Padding"
    },
    {
      "field": "icmpv6.opt.linkaddr",
      "protocol_dependency": "icmpv6",
      "description": "Link-layer address"
    },
    {
      "field": "icmpv6.opt.src_linkaddr",
      "protocol_dependency": "icmpv6",
      "description": "Source Link-layer address"
    },
    {
      "field": "icmpv6.opt.target_linkaddr",
      "protocol_dependency": "icmpv6",
      "description": "Target Link-layer address"
    },
    {
      "field": "icmpv6.opt.linkaddr_eui64",
      "protocol_dependency": "icmpv6",
      "description": "Link-layer address"
    },
    {
      "field": "icmpv6.opt.src_linkaddr_eui64",
      "protocol_dependency": "icmpv6",
      "description": "Source Link-layer address"
    },
    {
      "field": "icmpv6.opt.target_linkaddr_eui64",
      "protocol_dependency": "icmpv6",
      "description": "Target Link-layer address"
    },
    {
      "field": "icmpv6.opt.prefix.length",
      "protocol_dependency": "icmpv6",
      "description": "Prefix Length"
    },
    {
      "field": "icmpv6.opt.prefix.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flag"
    },
    {
      "field": "icmpv6.opt.prefix.flag.l",
      "protocol_dependency": "icmpv6",
      "description": "On-link flag(L)"
    },
    {
      "field": "icmpv6.opt.prefix.flag.a",
      "protocol_dependency": "icmpv6",
      "description": "Autonomous address-configuration flag(A)"
    },
    {
      "field": "icmpv6.opt.prefix.flag.r",
      "protocol_dependency": "icmpv6",
      "description": "Router address flag(R)"
    },
    {
      "field": "icmpv6.opt.prefix.flag.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.opt.prefix.valid_lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Valid Lifetime"
    },
    {
      "field": "icmpv6.opt.prefix.preferred_lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Preferred Lifetime"
    },
    {
      "field": "icmpv6.opt.prefix",
      "protocol_dependency": "icmpv6",
      "description": "Prefix"
    },
    {
      "field": "icmpv6.opt.cga.pad_length",
      "protocol_dependency": "icmpv6",
      "description": "Pad Length"
    },
    {
      "field": "icmpv6.opt.cga",
      "protocol_dependency": "icmpv6",
      "description": "CGA"
    },
    {
      "field": "icmpv6.opt.cga.modifier",
      "protocol_dependency": "icmpv6",
      "description": "Modifier"
    },
    {
      "field": "icmpv6.opt.cga.subnet_prefix",
      "protocol_dependency": "icmpv6",
      "description": "Subnet Prefix"
    },
    {
      "field": "icmpv6.opt.cga.count",
      "protocol_dependency": "icmpv6",
      "description": "Count"
    },
    {
      "field": "icmpv6.opt.cga.subject_public_key_info",
      "protocol_dependency": "icmpv6",
      "description": "Subject Public Key Info"
    },
    {
      "field": "icmpv6.opt.cga.ext_type",
      "protocol_dependency": "icmpv6",
      "description": "Ext Type"
    },
    {
      "field": "icmpv6.opt.cga.ext_length",
      "protocol_dependency": "icmpv6",
      "description": "Ext Length"
    },
    {
      "field": "icmpv6.opt.cga.ext_data",
      "protocol_dependency": "icmpv6",
      "description": "Ext Data"
    },
    {
      "field": "icmpv6.opt.rsa.key_hash",
      "protocol_dependency": "icmpv6",
      "description": "Key Hash"
    },
    {
      "field": "icmpv6.opt.digital_signature_padding",
      "protocol_dependency": "icmpv6",
      "description": "Digital Signature and Padding"
    },
    {
      "field": "icmpv6.opt.ps.key_hash",
      "protocol_dependency": "icmpv6",
      "description": "Key Hash"
    },
    {
      "field": "icmpv6.opt.timestamp",
      "protocol_dependency": "icmpv6",
      "description": "Timestamp"
    },
    {
      "field": "icmpv6.opt.nonce",
      "protocol_dependency": "icmpv6",
      "description": "Nonce"
    },
    {
      "field": "icmpv6.opt.certificate_padding",
      "protocol_dependency": "icmpv6",
      "description": "Certificate and Padding"
    },
    {
      "field": "icmpv6.opt.ipa.option_code",
      "protocol_dependency": "icmpv6",
      "description": "Option-code"
    },
    {
      "field": "icmpv6.opt.ipa.prefix_len",
      "protocol_dependency": "icmpv6",
      "description": "Prefix Length"
    },
    {
      "field": "icmpv6.opt.ipa.ipv6_address",
      "protocol_dependency": "icmpv6",
      "description": "IPv6 Address"
    },
    {
      "field": "icmpv6.opt.nrpi.option_code",
      "protocol_dependency": "icmpv6",
      "description": "Option-code"
    },
    {
      "field": "icmpv6.opt.nrpi.prefix_len",
      "protocol_dependency": "icmpv6",
      "description": "Prefix Length"
    },
    {
      "field": "icmpv6.opt.nrpi.prefix",
      "protocol_dependency": "icmpv6",
      "description": "Prefix"
    },
    {
      "field": "icmpv6.opt.lla.option_code",
      "protocol_dependency": "icmpv6",
      "description": "Option-code"
    },
    {
      "field": "icmpv6.opt.lla.bytes",
      "protocol_dependency": "icmpv6",
      "description": "Link-Layer Address"
    },
    {
      "field": "icmpv6.opt.naack.option_code",
      "protocol_dependency": "icmpv6",
      "description": "Option-Code"
    },
    {
      "field": "icmpv6.opt.naack.status",
      "protocol_dependency": "icmpv6",
      "description": "Status"
    },
    {
      "field": "icmpv6.opt.naack.supplied_ncoa",
      "protocol_dependency": "icmpv6",
      "description": "Supplied NCoA"
    },
    {
      "field": "icmpv6.opt.map.distance",
      "protocol_dependency": "icmpv6",
      "description": "Distance"
    },
    {
      "field": "icmpv6.opt.map.preference",
      "protocol_dependency": "icmpv6",
      "description": "Preference"
    },
    {
      "field": "icmpv6.opt.map.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flag"
    },
    {
      "field": "icmpv6.opt.map.flag.r",
      "protocol_dependency": "icmpv6",
      "description": "RCoA Flag"
    },
    {
      "field": "icmpv6.opt.map.flag.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.opt.map.valid_lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Valid Lifetime"
    },
    {
      "field": "icmpv6.opt.map.global_address",
      "protocol_dependency": "icmpv6",
      "description": "Global Address"
    },
    {
      "field": "icmpv6.opt.route_info.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flag"
    },
    {
      "field": "icmpv6.opt.route_info.flag.route_preference",
      "protocol_dependency": "icmpv6",
      "description": "Route Preference"
    },
    {
      "field": "icmpv6.opt.route_info.flag.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.opt.route_lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Route Lifetime"
    },
    {
      "field": "icmpv6.opt.name_type",
      "protocol_dependency": "icmpv6",
      "description": "Name Type"
    },
    {
      "field": "icmpv6.opt.name_x501",
      "protocol_dependency": "icmpv6",
      "description": "DER Encoded X.501 Name"
    },
    {
      "field": "icmpv6.opt.name_type.fqdn",
      "protocol_dependency": "icmpv6",
      "description": "FQDN"
    },
    {
      "field": "icmpv6.send.identifier",
      "protocol_dependency": "icmpv6",
      "description": "Identifier"
    },
    {
      "field": "icmpv6.send.all_components",
      "protocol_dependency": "icmpv6",
      "description": "All Components"
    },
    {
      "field": "icmpv6.send.component",
      "protocol_dependency": "icmpv6",
      "description": "Component"
    },
    {
      "field": "icmpv6.x509_Name",
      "protocol_dependency": "icmpv6",
      "description": "Name"
    },
    {
      "field": "icmpv6.x509_Certificate",
      "protocol_dependency": "icmpv6",
      "description": "Certificate"
    },
    {
      "field": "icmpv6.opt.redirected_packet",
      "protocol_dependency": "icmpv6",
      "description": "Redirected Packet"
    },
    {
      "field": "icmpv6.opt.mtu",
      "protocol_dependency": "icmpv6",
      "description": "MTU"
    },
    {
      "field": "icmpv6.opt.nbma.shortcut_limit",
      "protocol_dependency": "icmpv6",
      "description": "Shortcut Limit"
    },
    {
      "field": "icmpv6.opt.advertisement_interval",
      "protocol_dependency": "icmpv6",
      "description": "Advertisement Interval"
    },
    {
      "field": "icmpv6.opt.home_agent_preference",
      "protocol_dependency": "icmpv6",
      "description": "Home Agent Preference"
    },
    {
      "field": "icmpv6.opt.home_agent_lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Home Agent Preference"
    },
    {
      "field": "icmpv6.opt.ipv6_address",
      "protocol_dependency": "icmpv6",
      "description": "IPv6 Address"
    },
    {
      "field": "icmpv6.opt.rdnss.lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Lifetime"
    },
    {
      "field": "icmpv6.opt.rdnss",
      "protocol_dependency": "icmpv6",
      "description": "Recursive DNS Servers"
    },
    {
      "field": "icmpv6.opt.efo",
      "protocol_dependency": "icmpv6",
      "description": "Flags Expansion Option"
    },
    {
      "field": "icmpv6.opt.efo.m",
      "protocol_dependency": "icmpv6",
      "description": "Managed address configuration"
    },
    {
      "field": "icmpv6.opt.efo.o",
      "protocol_dependency": "icmpv6",
      "description": "Other configuration"
    },
    {
      "field": "icmpv6.opt.efo.h",
      "protocol_dependency": "icmpv6",
      "description": "Home Agent"
    },
    {
      "field": "icmpv6.opt.efo.prf",
      "protocol_dependency": "icmpv6",
      "description": "Prf (Default Router Preference)"
    },
    {
      "field": "icmpv6.opt.efo.p",
      "protocol_dependency": "icmpv6",
      "description": "Proxy"
    },
    {
      "field": "icmpv6.opt.efo.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.opt.hkr.pad_length",
      "protocol_dependency": "icmpv6",
      "description": "Pad Length"
    },
    {
      "field": "icmpv6.opt.hkr.at",
      "protocol_dependency": "icmpv6",
      "description": "AT"
    },
    {
      "field": "icmpv6.opt.hkr.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.opt.hkr.encryption_public_key",
      "protocol_dependency": "icmpv6",
      "description": "Handover Key Encryption Public Key"
    },
    {
      "field": "icmpv6.opt.hkr.padding",
      "protocol_dependency": "icmpv6",
      "description": "Padding"
    },
    {
      "field": "icmpv6.opt.hkr.lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Padding"
    },
    {
      "field": "icmpv6.opt.hkr.encrypted_handover_key",
      "protocol_dependency": "icmpv6",
      "description": "Encrypted Handover Key"
    },
    {
      "field": "icmpv6.opt.hai.option_code",
      "protocol_dependency": "icmpv6",
      "description": "Option-Code"
    },
    {
      "field": "icmpv6.opt.hai.length",
      "protocol_dependency": "icmpv6",
      "description": "HAI-Length"
    },
    {
      "field": "icmpv6.opt.hai.value",
      "protocol_dependency": "icmpv6",
      "description": "HAI-Value"
    },
    {
      "field": "icmpv6.opt.mn.option_code",
      "protocol_dependency": "icmpv6",
      "description": "Option-Code"
    },
    {
      "field": "icmpv6.opt.mn.length",
      "protocol_dependency": "icmpv6",
      "description": "MN-Length"
    },
    {
      "field": "icmpv6.opt.mn.value",
      "protocol_dependency": "icmpv6",
      "description": "MN-Value"
    },
    {
      "field": "icmpv6.opt.dnssl.lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Lifetime"
    },
    {
      "field": "icmpv6.opt.dnssl",
      "protocol_dependency": "icmpv6",
      "description": "Domain Names"
    },
    {
      "field": "icmpv6.opt.aro.status",
      "protocol_dependency": "icmpv6",
      "description": "Status"
    },
    {
      "field": "icmpv6.opt.earo.opaque",
      "protocol_dependency": "icmpv6",
      "description": "Opaque"
    },
    {
      "field": "icmpv6.opt.earo.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.opt.earo.flag.i",
      "protocol_dependency": "icmpv6",
      "description": "I"
    },
    {
      "field": "icmpv6.opt.earo.flag.r",
      "protocol_dependency": "icmpv6",
      "description": "R"
    },
    {
      "field": "icmpv6.opt.earo.flag.t",
      "protocol_dependency": "icmpv6",
      "description": "T"
    },
    {
      "field": "icmpv6.opt.earo.tid",
      "protocol_dependency": "icmpv6",
      "description": "TID (Transaction ID)"
    },
    {
      "field": "icmpv6.opt.aro.registration_lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Registration  Lifetime"
    },
    {
      "field": "icmpv6.opt.aro.eui64",
      "protocol_dependency": "icmpv6",
      "description": "EUI-64"
    },
    {
      "field": "icmpv6.opt.6co.context_length",
      "protocol_dependency": "icmpv6",
      "description": "Context Length"
    },
    {
      "field": "icmpv6.opt.6co.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flag"
    },
    {
      "field": "icmpv6.opt.6co.flag.c",
      "protocol_dependency": "icmpv6",
      "description": "Compression Flag"
    },
    {
      "field": "icmpv6.opt.6co.flag.cid",
      "protocol_dependency": "icmpv6",
      "description": "CID"
    },
    {
      "field": "icmpv6.opt.6co.flag.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.opt.6co.valid_lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Lifetime"
    },
    {
      "field": "icmpv6.opt.6co.context_prefix",
      "protocol_dependency": "icmpv6",
      "description": "Context Prefix"
    },
    {
      "field": "icmpv6.opt.abro.version_low",
      "protocol_dependency": "icmpv6",
      "description": "Version Low"
    },
    {
      "field": "icmpv6.opt.abro.version_high",
      "protocol_dependency": "icmpv6",
      "description": "Version"
    },
    {
      "field": "icmpv6.opt.abro.valid_lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Valid Lifetime"
    },
    {
      "field": "icmpv6.opt.abro.6lbr_address",
      "protocol_dependency": "icmpv6",
      "description": "6LBR Address"
    },
    {
      "field": "icmpv6.opt.6cio.unassigned1",
      "protocol_dependency": "icmpv6",
      "description": "Unassigned"
    },
    {
      "field": "icmpv6.opt.6cio.flag_g",
      "protocol_dependency": "icmpv6",
      "description": "G"
    },
    {
      "field": "icmpv6.opt.6cio.unassigned2",
      "protocol_dependency": "icmpv6",
      "description": "Unassigned"
    },
    {
      "field": "icmpv6.opt.captive_portal",
      "protocol_dependency": "icmpv6",
      "description": "Captive Portal"
    },
    {
      "field": "icmpv6.opt.pref64.scaled_lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Scaled Lifetime"
    },
    {
      "field": "icmpv6.opt.pref64.plc",
      "protocol_dependency": "icmpv6",
      "description": "PLC (Prefix Length Code)"
    },
    {
      "field": "icmpv6.opt.pref64.prefix",
      "protocol_dependency": "icmpv6",
      "description": "Prefix"
    },
    {
      "field": "icmpv6.mld.maximum_response_delay",
      "protocol_dependency": "icmpv6",
      "description": "Maximum Response Delay [ms]"
    },
    {
      "field": "icmpv6.mld.multicast_address",
      "protocol_dependency": "icmpv6",
      "description": "Multicast Address"
    },
    {
      "field": "icmpv6.rr.sequence_number",
      "protocol_dependency": "icmpv6",
      "description": "Sequence Number"
    },
    {
      "field": "icmpv6.rr.segment_number",
      "protocol_dependency": "icmpv6",
      "description": "Segment Number"
    },
    {
      "field": "icmpv6.rr.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.rr.flag.t",
      "protocol_dependency": "icmpv6",
      "description": "Test Command"
    },
    {
      "field": "icmpv6.rr.flag.r",
      "protocol_dependency": "icmpv6",
      "description": "Result requested"
    },
    {
      "field": "icmpv6.rr.flag.a",
      "protocol_dependency": "icmpv6",
      "description": "All Interfaces"
    },
    {
      "field": "icmpv6.rr.flag.s",
      "protocol_dependency": "icmpv6",
      "description": "Site-specific"
    },
    {
      "field": "icmpv6.rr.flag.p",
      "protocol_dependency": "icmpv6",
      "description": "Processed previously"
    },
    {
      "field": "icmpv6.rr.flag.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rr.maxdelay",
      "protocol_dependency": "icmpv6",
      "description": "Max Delay"
    },
    {
      "field": "icmpv6.rr.pco.mp",
      "protocol_dependency": "icmpv6",
      "description": "Match-Prefix Part"
    },
    {
      "field": "icmpv6.rr.pco.mp.opcode",
      "protocol_dependency": "icmpv6",
      "description": "OpCode"
    },
    {
      "field": "icmpv6.rr.pco.mp.oplength",
      "protocol_dependency": "icmpv6",
      "description": "OpLength"
    },
    {
      "field": "icmpv6.rr.pco.mp.ordinal",
      "protocol_dependency": "icmpv6",
      "description": "Ordinal"
    },
    {
      "field": "icmpv6.rr.pco.mp.matchlen",
      "protocol_dependency": "icmpv6",
      "description": "MatchLen"
    },
    {
      "field": "icmpv6.rr.pco.mp.minlen",
      "protocol_dependency": "icmpv6",
      "description": "MinLen"
    },
    {
      "field": "icmpv6.rr.pco.mp.maxlen",
      "protocol_dependency": "icmpv6",
      "description": "MaxLen"
    },
    {
      "field": "icmpv6.rr.pco.mp.matchprefix",
      "protocol_dependency": "icmpv6",
      "description": "MatchPrefix"
    },
    {
      "field": "icmpv6.rr.pco.up",
      "protocol_dependency": "icmpv6",
      "description": "Use-Prefix Part"
    },
    {
      "field": "icmpv6.rr.pco.up.uselen",
      "protocol_dependency": "icmpv6",
      "description": "UseLen"
    },
    {
      "field": "icmpv6.rr.pco.up.keeplen",
      "protocol_dependency": "icmpv6",
      "description": "KeepLen"
    },
    {
      "field": "icmpv6.rr.pco.up.flagmask",
      "protocol_dependency": "icmpv6",
      "description": "FlagMask"
    },
    {
      "field": "icmpv6.rr.pco.up.flagmask.l",
      "protocol_dependency": "icmpv6",
      "description": "On-link flag(L)"
    },
    {
      "field": "icmpv6.rr.pco.up.flagmask.a",
      "protocol_dependency": "icmpv6",
      "description": "Autonomous address-configuration flag(A)"
    },
    {
      "field": "icmpv6.rr.pco.up.flagmask.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rr.pco.up.raflags",
      "protocol_dependency": "icmpv6",
      "description": "RAFlags"
    },
    {
      "field": "icmpv6.rr.pco.up.validlifetime",
      "protocol_dependency": "icmpv6",
      "description": "Valid Lifetime"
    },
    {
      "field": "icmpv6.rr.pco.up.preferredlifetime",
      "protocol_dependency": "icmpv6",
      "description": "Preferred Lifetime"
    },
    {
      "field": "icmpv6.rr.pco.up.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.rr.pco.up.flag.v",
      "protocol_dependency": "icmpv6",
      "description": "Decrement valid lifetime"
    },
    {
      "field": "icmpv6.rr.pco.up.flag.p",
      "protocol_dependency": "icmpv6",
      "description": "Decrement preferred lifetime"
    },
    {
      "field": "icmpv6.rr.pco.up.flag.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rr.pco.up.useprefix",
      "protocol_dependency": "icmpv6",
      "description": "UsePrefix"
    },
    {
      "field": "icmpv6.rr.rm",
      "protocol_dependency": "icmpv6",
      "description": "Result Message"
    },
    {
      "field": "icmpv6.rr.rm.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.rr.rm.flag.b",
      "protocol_dependency": "icmpv6",
      "description": "Bounds"
    },
    {
      "field": "icmpv6.rr.rm.flag.f",
      "protocol_dependency": "icmpv6",
      "description": "Forbidden"
    },
    {
      "field": "icmpv6.rr.rm.flag.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rr.rm.ordinal",
      "protocol_dependency": "icmpv6",
      "description": "Ordinal"
    },
    {
      "field": "icmpv6.rr.rm.matchedlen",
      "protocol_dependency": "icmpv6",
      "description": "MatchedLen"
    },
    {
      "field": "icmpv6.rr.rm.interfaceindex",
      "protocol_dependency": "icmpv6",
      "description": "InterfaceIndex"
    },
    {
      "field": "icmpv6.rr.rm.matchedprefix",
      "protocol_dependency": "icmpv6",
      "description": "MatchedPrefix"
    },
    {
      "field": "icmpv6.mip6.identifier",
      "protocol_dependency": "icmpv6",
      "description": "Identifier"
    },
    {
      "field": "icmpv6.mip6.home_agent_address",
      "protocol_dependency": "icmpv6",
      "description": "Home Agent Address"
    },
    {
      "field": "icmpv6.mip6.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.mip6.flag.m",
      "protocol_dependency": "icmpv6",
      "description": "Managed address configuration"
    },
    {
      "field": "icmpv6.mip6.flag.o",
      "protocol_dependency": "icmpv6",
      "description": "Other configuration"
    },
    {
      "field": "icmpv6.mip6.flag.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.mld.maximum_response_code",
      "protocol_dependency": "icmpv6",
      "description": "Maximum Response Code"
    },
    {
      "field": "icmpv6.mld.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.mld.flag.s",
      "protocol_dependency": "icmpv6",
      "description": "Suppress Router-Side Processing"
    },
    {
      "field": "icmpv6.mld.flag.qrv",
      "protocol_dependency": "icmpv6",
      "description": "QRV (Querier's Robustness Variable)"
    },
    {
      "field": "icmpv6.mld.flag.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.mld.qqi",
      "protocol_dependency": "icmpv6",
      "description": "QQIC (Querier's Query Interval Code)"
    },
    {
      "field": "icmpv6.mld.nb_sources",
      "protocol_dependency": "icmpv6",
      "description": "Number of Sources"
    },
    {
      "field": "icmpv6.mld.source_address",
      "protocol_dependency": "icmpv6",
      "description": "Source Address"
    },
    {
      "field": "icmpv6.mldr.nb_mcast_records",
      "protocol_dependency": "icmpv6",
      "description": "Number of Multicast Address Records"
    },
    {
      "field": "icmpv6.mldr.mar",
      "protocol_dependency": "icmpv6",
      "description": "Multicast Address Record"
    },
    {
      "field": "icmpv6.mldr.mar.record_type",
      "protocol_dependency": "icmpv6",
      "description": "Record Type"
    },
    {
      "field": "icmpv6.mldr.mar.aux_data_len",
      "protocol_dependency": "icmpv6",
      "description": "Aux Data Len"
    },
    {
      "field": "icmpv6.mldr.mar.nb_sources",
      "protocol_dependency": "icmpv6",
      "description": "Number of Sources"
    },
    {
      "field": "icmpv6.mldr.mar.multicast_address",
      "protocol_dependency": "icmpv6",
      "description": "Multicast Address"
    },
    {
      "field": "icmpv6.mldr.mar.source_address",
      "protocol_dependency": "icmpv6",
      "description": "Source Address"
    },
    {
      "field": "icmpv6.mldr.mar.auxiliary_data",
      "protocol_dependency": "icmpv6",
      "description": "Auxiliary Data"
    },
    {
      "field": "icmpv6.fmip6.subtype",
      "protocol_dependency": "icmpv6",
      "description": "Subtype"
    },
    {
      "field": "icmpv6.fmip6.hi.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flag"
    },
    {
      "field": "icmpv6.fmip6.hi.flag.s",
      "protocol_dependency": "icmpv6",
      "description": "Assigned address configuration"
    },
    {
      "field": "icmpv6.fmip6.hi.flag.a",
      "protocol_dependency": "icmpv6",
      "description": "Buffer"
    },
    {
      "field": "icmpv6.fmip6.hi.flag.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.fmip6.identifier",
      "protocol_dependency": "icmpv6",
      "description": "Identifier"
    },
    {
      "field": "icmpv6.mcast_ra.query_interval",
      "protocol_dependency": "icmpv6",
      "description": "Query Interval"
    },
    {
      "field": "icmpv6.mcast_ra.robustness_variable",
      "protocol_dependency": "icmpv6",
      "description": "Robustness Variable"
    },
    {
      "field": "icmpv6.ni.qtype",
      "protocol_dependency": "icmpv6",
      "description": "Qtype"
    },
    {
      "field": "icmpv6.ni.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.ni.flag.g",
      "protocol_dependency": "icmpv6",
      "description": "Global-scope addresses"
    },
    {
      "field": "icmpv6.ni.flag.s",
      "protocol_dependency": "icmpv6",
      "description": "Site-local addresses"
    },
    {
      "field": "icmpv6.ni.flag.l",
      "protocol_dependency": "icmpv6",
      "description": "Link-local addresses"
    },
    {
      "field": "icmpv6.ni.flag.c",
      "protocol_dependency": "icmpv6",
      "description": "Compression"
    },
    {
      "field": "icmpv6.ni.flag.a",
      "protocol_dependency": "icmpv6",
      "description": "Unicast Addresses"
    },
    {
      "field": "icmpv6.ni.flag.t",
      "protocol_dependency": "icmpv6",
      "description": "Truncated"
    },
    {
      "field": "icmpv6.ni.flag.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.ni.nonce",
      "protocol_dependency": "icmpv6",
      "description": "Nonce"
    },
    {
      "field": "icmpv6.ni.query.subject_ipv6",
      "protocol_dependency": "icmpv6",
      "description": "IPv6 subject address"
    },
    {
      "field": "icmpv6.ni.query.subject_fqdn",
      "protocol_dependency": "icmpv6",
      "description": "FQDN subject"
    },
    {
      "field": "icmpv6.ni.query.subject_ipv4",
      "protocol_dependency": "icmpv6",
      "description": "IPv4 subject address"
    },
    {
      "field": "icmpv6.ni.reply.node_ttl",
      "protocol_dependency": "icmpv6",
      "description": "TTL"
    },
    {
      "field": "icmpv6.ni.reply.node_name",
      "protocol_dependency": "icmpv6",
      "description": "Name Node"
    },
    {
      "field": "icmpv6.ni.reply.node_address",
      "protocol_dependency": "icmpv6",
      "description": "IPv6 Node address"
    },
    {
      "field": "icmpv6.ni.reply.ipv4_address",
      "protocol_dependency": "icmpv6",
      "description": "IPv4 Node address"
    },
    {
      "field": "icmpv6.length",
      "protocol_dependency": "icmpv6",
      "description": "Length of original datagram"
    },
    {
      "field": "icmpv6.rpl.dis.flags",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.rpl.dio.instance",
      "protocol_dependency": "icmpv6",
      "description": "RPLInstanceID"
    },
    {
      "field": "icmpv6.rpl.dio.version",
      "protocol_dependency": "icmpv6",
      "description": "Version"
    },
    {
      "field": "icmpv6.rpl.dio.rank",
      "protocol_dependency": "icmpv6",
      "description": "Rank"
    },
    {
      "field": "icmpv6.rpl.dio.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.rpl.dio.flag.g",
      "protocol_dependency": "icmpv6",
      "description": "Grounded (G)"
    },
    {
      "field": "icmpv6.rpl.dio.flag.0",
      "protocol_dependency": "icmpv6",
      "description": "Zero"
    },
    {
      "field": "icmpv6.rpl.dio.flag.mop",
      "protocol_dependency": "icmpv6",
      "description": "Mode of Operation (MOP)"
    },
    {
      "field": "icmpv6.rpl.dio.flag.preference",
      "protocol_dependency": "icmpv6",
      "description": "DODAG Preference"
    },
    {
      "field": "icmpv6.rpl.dio.dtsn",
      "protocol_dependency": "icmpv6",
      "description": "Destination Advertisement Trigger Sequence Number (DTSN)"
    },
    {
      "field": "icmpv6.rpl.dio.dagid",
      "protocol_dependency": "icmpv6",
      "description": "DODAGID"
    },
    {
      "field": "icmpv6.rpl.dao.instance",
      "protocol_dependency": "icmpv6",
      "description": "RPLInstanceID"
    },
    {
      "field": "icmpv6.rpl.dao.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.rpl.dao.flag.k",
      "protocol_dependency": "icmpv6",
      "description": "DAO-ACK Request (K)"
    },
    {
      "field": "icmpv6.rpl.dao.flag.d",
      "protocol_dependency": "icmpv6",
      "description": "DODAGID Present (D)"
    },
    {
      "field": "icmpv6.rpl.dao.flag.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.dao.sequence",
      "protocol_dependency": "icmpv6",
      "description": "DAO Sequence"
    },
    {
      "field": "icmpv6.rpl.dao.dodagid",
      "protocol_dependency": "icmpv6",
      "description": "DODAGID"
    },
    {
      "field": "icmpv6.rpl.daoack.instance",
      "protocol_dependency": "icmpv6",
      "description": "RPLInstanceID"
    },
    {
      "field": "icmpv6.rpl.daoack.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flag"
    },
    {
      "field": "icmpv6.rpl.daoack.flag.d",
      "protocol_dependency": "icmpv6",
      "description": "DODAGID Present (D)"
    },
    {
      "field": "icmpv6.rpl.daoack.flag.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.daoack.sequence",
      "protocol_dependency": "icmpv6",
      "description": "DAO-ACK Sequence"
    },
    {
      "field": "icmpv6.rpl.daoack.status",
      "protocol_dependency": "icmpv6",
      "description": "Status"
    },
    {
      "field": "icmpv6.rpl.daoack.dodagid",
      "protocol_dependency": "icmpv6",
      "description": "DODAGID"
    },
    {
      "field": "icmpv6.rpl.cc.instance",
      "protocol_dependency": "icmpv6",
      "description": "RPLInstanceID"
    },
    {
      "field": "icmpv6.rpl.cc.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flag"
    },
    {
      "field": "icmpv6.rpl.cc.flag.r",
      "protocol_dependency": "icmpv6",
      "description": "Response (R)"
    },
    {
      "field": "icmpv6.rpl.cc.flag.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.cc.nonce",
      "protocol_dependency": "icmpv6",
      "description": "CC Nonce"
    },
    {
      "field": "icmpv6.rpl.cc.dodagid",
      "protocol_dependency": "icmpv6",
      "description": "DODAGID"
    },
    {
      "field": "icmpv6.rpl.cc.destination_counter",
      "protocol_dependency": "icmpv6",
      "description": "Destination Counter"
    },
    {
      "field": "icmpv6.rpl.secure.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.rpl.secure.flag.t",
      "protocol_dependency": "icmpv6",
      "description": "Counter is Time (T)"
    },
    {
      "field": "icmpv6.rpl.secure.flag.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.secure.algorithm",
      "protocol_dependency": "icmpv6",
      "description": "Algorithm"
    },
    {
      "field": "icmpv6.rpl.secure.kim",
      "protocol_dependency": "icmpv6",
      "description": "Key Identifier Mode (KIM)"
    },
    {
      "field": "icmpv6.rpl.secure.lvl",
      "protocol_dependency": "icmpv6",
      "description": "Security Level (LVL)"
    },
    {
      "field": "icmpv6.rpl.secure.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.secure.counter",
      "protocol_dependency": "icmpv6",
      "description": "Counter"
    },
    {
      "field": "icmpv6.rpl.secure.key.source",
      "protocol_dependency": "icmpv6",
      "description": "Key Source"
    },
    {
      "field": "icmpv6.rpl.secure.key.index",
      "protocol_dependency": "icmpv6",
      "description": "Key Source"
    },
    {
      "field": "icmpv6.rpl.opt.type",
      "protocol_dependency": "icmpv6",
      "description": "Type"
    },
    {
      "field": "icmpv6.rpl.opt.length",
      "protocol_dependency": "icmpv6",
      "description": "Length"
    },
    {
      "field": "icmpv6.rpl.opt.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.opt.padn",
      "protocol_dependency": "icmpv6",
      "description": "Paddn"
    },
    {
      "field": "icmpv6.rpl.opt.metric.type",
      "protocol_dependency": "icmpv6",
      "description": "Routing Metric/Constraint Type"
    },
    {
      "field": "icmpv6.rpl.opt.metric.flags",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.rpl.opt.metric.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved Flags"
    },
    {
      "field": "icmpv6.rpl.opt.metric.flag.p",
      "protocol_dependency": "icmpv6",
      "description": "Flag P"
    },
    {
      "field": "icmpv6.rpl.opt.metric.flag.c",
      "protocol_dependency": "icmpv6",
      "description": "Flag C"
    },
    {
      "field": "icmpv6.rpl.opt.metric.flag.o",
      "protocol_dependency": "icmpv6",
      "description": "Flag O"
    },
    {
      "field": "icmpv6.rpl.opt.metric.flag.r",
      "protocol_dependency": "icmpv6",
      "description": "Flag R"
    },
    {
      "field": "icmpv6.rpl.opt.metric.flag.a",
      "protocol_dependency": "icmpv6",
      "description": "A Field"
    },
    {
      "field": "icmpv6.rpl.opt.metric.prec",
      "protocol_dependency": "icmpv6",
      "description": "Precedence field"
    },
    {
      "field": "icmpv6.rpl.opt.metric.length",
      "protocol_dependency": "icmpv6",
      "description": "Metric Length"
    },
    {
      "field": "icmpv6.rpl.opt.metric.nsa.object",
      "protocol_dependency": "icmpv6",
      "description": "Node State and Attribute Object"
    },
    {
      "field": "icmpv6.rpl.opt.metric.nsa.object.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved field"
    },
    {
      "field": "icmpv6.rpl.opt.metric.nsa.object.flags",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.rpl.opt.metric.nsa.object.flag.a",
      "protocol_dependency": "icmpv6",
      "description": "Flag A"
    },
    {
      "field": "icmpv6.rpl.opt.metric.nsa.object.flag.o",
      "protocol_dependency": "icmpv6",
      "description": "Flag O"
    },
    {
      "field": "icmpv6.rpl.opt.metric.nsa.object.opttlv.object",
      "protocol_dependency": "icmpv6",
      "description": "Node State and Attribute Optional TLV"
    },
    {
      "field": "icmpv6.rpl.opt.metric.nsa.object.opttlv.object.type",
      "protocol_dependency": "icmpv6",
      "description": "Node State and Attribute Optional TLV Type"
    },
    {
      "field": "icmpv6.rpl.opt.metric.nsa.object.opttlv.object.length",
      "protocol_dependency": "icmpv6",
      "description": "Node State and Attribute Optional TLV Length"
    },
    {
      "field": "icmpv6.rpl.opt.metric.nsa.object.opttlv.object.data",
      "protocol_dependency": "icmpv6",
      "description": "Raw Data"
    },
    {
      "field": "icmpv6.rpl.opt.metric.ne.object",
      "protocol_dependency": "icmpv6",
      "description": "Node Energy Object"
    },
    {
      "field": "icmpv6.rpl.opt.metric.ne.object.flags",
      "protocol_dependency": "icmpv6",
      "description": "Flags field"
    },
    {
      "field": "icmpv6.rpl.opt.metric.ne.object.flag.i",
      "protocol_dependency": "icmpv6",
      "description": "Flag I"
    },
    {
      "field": "icmpv6.rpl.opt.metric.ne.object.type",
      "protocol_dependency": "icmpv6",
      "description": "Type"
    },
    {
      "field": "icmpv6.rpl.opt.metric.ne.object.flag.e",
      "protocol_dependency": "icmpv6",
      "description": "Flag E"
    },
    {
      "field": "icmpv6.rpl.opt.metric.ne.object.energy",
      "protocol_dependency": "icmpv6",
      "description": "Energy"
    },
    {
      "field": "icmpv6.rpl.opt.metric.hp.object",
      "protocol_dependency": "icmpv6",
      "description": "Hop Count Object"
    },
    {
      "field": "icmpv6.rpl.opt.metric.hp.object.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved field"
    },
    {
      "field": "icmpv6.rpl.opt.metric.hp.object.flags",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.rpl.opt.metric.hp.object.hp",
      "protocol_dependency": "icmpv6",
      "description": "Hop Count"
    },
    {
      "field": "icmpv6.rpl.opt.metric.lt.object.lt",
      "protocol_dependency": "icmpv6",
      "description": "Link Throughput"
    },
    {
      "field": "icmpv6.rpl.opt.metric.ll.object.ll",
      "protocol_dependency": "icmpv6",
      "description": "Link Latency"
    },
    {
      "field": "icmpv6.rpl.opt.metric.lql.object",
      "protocol_dependency": "icmpv6",
      "description": "Link Quality Level Object"
    },
    {
      "field": "icmpv6.rpl.opt.metric.lql.object.res",
      "protocol_dependency": "icmpv6",
      "description": "Reserved field"
    },
    {
      "field": "icmpv6.rpl.opt.metric.lql.object.val",
      "protocol_dependency": "icmpv6",
      "description": "Val(ue)"
    },
    {
      "field": "icmpv6.rpl.opt.metric.lql.object.counter",
      "protocol_dependency": "icmpv6",
      "description": "Counter"
    },
    {
      "field": "icmpv6.rpl.opt.metric.etx.object.etx",
      "protocol_dependency": "icmpv6",
      "description": "ETX"
    },
    {
      "field": "icmpv6.rpl.opt.metric.lc.object",
      "protocol_dependency": "icmpv6",
      "description": "Link Color Object"
    },
    {
      "field": "icmpv6.rpl.opt.metric.lc.object.res",
      "protocol_dependency": "icmpv6",
      "description": "Reserved field"
    },
    {
      "field": "icmpv6.rpl.opt.metric.lc.object.lc",
      "protocol_dependency": "icmpv6",
      "description": "Link Color"
    },
    {
      "field": "icmpv6.rpl.opt.metric.lc.object.counter",
      "protocol_dependency": "icmpv6",
      "description": "Counter"
    },
    {
      "field": "icmpv6.rpl.opt.metric.lc.object.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.opt.metric.lc.object.flag.i",
      "protocol_dependency": "icmpv6",
      "description": "Flag I"
    },
    {
      "field": "icmpv6.rpl.opt.route.prefix_length",
      "protocol_dependency": "icmpv6",
      "description": "Prefix Length"
    },
    {
      "field": "icmpv6.rpl.opt.route.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flag"
    },
    {
      "field": "icmpv6.rpl.opt.route.pref",
      "protocol_dependency": "icmpv6",
      "description": "Preference"
    },
    {
      "field": "icmpv6.rpl.opt.route.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.opt.route.lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Route Lifetime"
    },
    {
      "field": "icmpv6.rpl.opt.route.prefix",
      "protocol_dependency": "icmpv6",
      "description": "Prefix"
    },
    {
      "field": "icmpv6.rpl.opt.config.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flag"
    },
    {
      "field": "icmpv6.rpl.opt.config.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.opt.config.auth",
      "protocol_dependency": "icmpv6",
      "description": "Authentication Enabled"
    },
    {
      "field": "icmpv6.rpl.opt.config.pcs",
      "protocol_dependency": "icmpv6",
      "description": "Path Control Size"
    },
    {
      "field": "icmpv6.rpl.opt.config.interval_double",
      "protocol_dependency": "icmpv6",
      "description": "DIOIntervalDoublings"
    },
    {
      "field": "icmpv6.rpl.opt.config.interval_min",
      "protocol_dependency": "icmpv6",
      "description": "DIOIntervalMin"
    },
    {
      "field": "icmpv6.rpl.opt.config.redundancy",
      "protocol_dependency": "icmpv6",
      "description": "DIORedundancyConstant"
    },
    {
      "field": "icmpv6.rpl.opt.config.max_rank_inc",
      "protocol_dependency": "icmpv6",
      "description": "MaxRankInc"
    },
    {
      "field": "icmpv6.rpl.opt.config.min_hop_rank_inc",
      "protocol_dependency": "icmpv6",
      "description": "MinHopRankInc"
    },
    {
      "field": "icmpv6.rpl.opt.config.ocp",
      "protocol_dependency": "icmpv6",
      "description": "OCP (Objective Code Point)"
    },
    {
      "field": "icmpv6.rpl.opt.config.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.opt.config.def_lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Default Lifetime"
    },
    {
      "field": "icmpv6.rpl.opt.config.lifetime_unit",
      "protocol_dependency": "icmpv6",
      "description": "Lifetime Unit"
    },
    {
      "field": "icmpv6.rpl.opt.target.flag",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.opt.target.prefix_length",
      "protocol_dependency": "icmpv6",
      "description": "Target Length"
    },
    {
      "field": "icmpv6.rpl.opt.target.prefix",
      "protocol_dependency": "icmpv6",
      "description": "Target"
    },
    {
      "field": "icmpv6.rpl.opt.transit.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.rpl.opt.transit.flag.e",
      "protocol_dependency": "icmpv6",
      "description": "External"
    },
    {
      "field": "icmpv6.rpl.opt.transit.flag.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.opt.transit.pathctl",
      "protocol_dependency": "icmpv6",
      "description": "Path Control"
    },
    {
      "field": "icmpv6.rpl.opt.transit.pathctl.pc1",
      "protocol_dependency": "icmpv6",
      "description": "PC1"
    },
    {
      "field": "icmpv6.rpl.opt.transit.pathctl.pc2",
      "protocol_dependency": "icmpv6",
      "description": "PC2"
    },
    {
      "field": "icmpv6.rpl.opt.transit.pathctl.pc3",
      "protocol_dependency": "icmpv6",
      "description": "PC3"
    },
    {
      "field": "icmpv6.rpl.opt.transit.pathctl.pc4",
      "protocol_dependency": "icmpv6",
      "description": "PC4"
    },
    {
      "field": "icmpv6.rpl.opt.transit.pathseq",
      "protocol_dependency": "icmpv6",
      "description": "Path Sequence"
    },
    {
      "field": "icmpv6.rpl.opt.transit.pathlifetime",
      "protocol_dependency": "icmpv6",
      "description": "Path Lifetime"
    },
    {
      "field": "icmpv6.rpl.opt.transit.parent",
      "protocol_dependency": "icmpv6",
      "description": "Parent Address"
    },
    {
      "field": "icmpv6.rpl.opt.solicited.instance",
      "protocol_dependency": "icmpv6",
      "description": "Instance"
    },
    {
      "field": "icmpv6.rpl.opt.solicited.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flag"
    },
    {
      "field": "icmpv6.rpl.opt.solicited.flag.v",
      "protocol_dependency": "icmpv6",
      "description": "Version predicate"
    },
    {
      "field": "icmpv6.rpl.opt.solicited.flag.i",
      "protocol_dependency": "icmpv6",
      "description": "InstanceID predicate"
    },
    {
      "field": "icmpv6.rpl.opt.solicited.flag.d",
      "protocol_dependency": "icmpv6",
      "description": "DODAGID predicate"
    },
    {
      "field": "icmpv6.rpl.opt.solicited.flag.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.opt.solicited.dodagid",
      "protocol_dependency": "icmpv6",
      "description": "DODAGID"
    },
    {
      "field": "icmpv6.rpl.opt.solicited.version",
      "protocol_dependency": "icmpv6",
      "description": "Version"
    },
    {
      "field": "icmpv6.rpl.opt.prefix.length",
      "protocol_dependency": "icmpv6",
      "description": "Prefix Length"
    },
    {
      "field": "icmpv6.rpl.opt.prefix.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flag"
    },
    {
      "field": "icmpv6.rpl.opt.prefix.flag.l",
      "protocol_dependency": "icmpv6",
      "description": "On Link"
    },
    {
      "field": "icmpv6.rpl.opt.config.flag.a",
      "protocol_dependency": "icmpv6",
      "description": "Auto Address Config"
    },
    {
      "field": "icmpv6.rpl.opt.config.flag.r",
      "protocol_dependency": "icmpv6",
      "description": "Router Address"
    },
    {
      "field": "icmpv6.rpl.opt.config.flag.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.opt.prefix.valid_lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Valid Lifetime"
    },
    {
      "field": "icmpv6.rpl.opt.prefix.preferred_lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Preferred Lifetime"
    },
    {
      "field": "icmpv6.rpl.opt.prefix",
      "protocol_dependency": "icmpv6",
      "description": "Destination Prefix"
    },
    {
      "field": "icmpv6.rpl.opt.targetdesc.descriptor",
      "protocol_dependency": "icmpv6",
      "description": "Descriptor"
    },
    {
      "field": "icmpv6.rpl.opt.routediscovery.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.rpl.opt.routediscovery.flag.reply",
      "protocol_dependency": "icmpv6",
      "description": "Reply"
    },
    {
      "field": "icmpv6.rpl.opt.routediscovery.flag.hopbyhop",
      "protocol_dependency": "icmpv6",
      "description": "Hop-by-Hop"
    },
    {
      "field": "icmpv6.rpl.opt.routediscovery.flag.numofroutes",
      "protocol_dependency": "icmpv6",
      "description": "Number of Routes"
    },
    {
      "field": "icmpv6.rpl.opt.routediscovery.flag.compr",
      "protocol_dependency": "icmpv6",
      "description": "Compr"
    },
    {
      "field": "icmpv6.rpl.opt.routediscovery.lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Lifetime"
    },
    {
      "field": "icmpv6.rpl.opt.routediscovery.maxrank",
      "protocol_dependency": "icmpv6",
      "description": "MaxRank"
    },
    {
      "field": "icmpv6.rpl.opt.routediscovery.nh",
      "protocol_dependency": "icmpv6",
      "description": "NH"
    },
    {
      "field": "icmpv6.rpl.opt.routediscovery.targetaddr",
      "protocol_dependency": "icmpv6",
      "description": "Target Address"
    },
    {
      "field": "icmpv6.rpl.opt.routediscovery.addr_vec",
      "protocol_dependency": "icmpv6",
      "description": "Address Vector"
    },
    {
      "field": "icmpv6.rpl.opt.routediscovery.addrvec.addr",
      "protocol_dependency": "icmpv6",
      "description": "Address"
    },
    {
      "field": "icmpv6.rpl.p2p.dro.instance",
      "protocol_dependency": "icmpv6",
      "description": "RPLInstanceID"
    },
    {
      "field": "icmpv6.rpl.p2p.dro.version",
      "protocol_dependency": "icmpv6",
      "description": "Version"
    },
    {
      "field": "icmpv6.rpl.p2p.dro.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.rpl.p2p.dro.flag.stop",
      "protocol_dependency": "icmpv6",
      "description": "Stop"
    },
    {
      "field": "icmpv6.rpl.p2p.dro.flag.ack",
      "protocol_dependency": "icmpv6",
      "description": "Ack"
    },
    {
      "field": "icmpv6.rpl.p2p.dro.flag.seq",
      "protocol_dependency": "icmpv6",
      "description": "Seq"
    },
    {
      "field": "icmpv6.rpl.p2p.dro.flag.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.rpl.p2p.dro.dagid",
      "protocol_dependency": "icmpv6",
      "description": "DODAGID"
    },
    {
      "field": "icmpv6.rpl.p2p.droack.flag",
      "protocol_dependency": "icmpv6",
      "description": "Flags"
    },
    {
      "field": "icmpv6.rpl.p2p.droack.flag.seq",
      "protocol_dependency": "icmpv6",
      "description": "Seq"
    },
    {
      "field": "icmpv6.rpl.p2p.droack.flag.reserved",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.ilnp.nb_locs",
      "protocol_dependency": "icmpv6",
      "description": "Num of Locs"
    },
    {
      "field": "icmpv6.ilnp.nb_locator",
      "protocol_dependency": "icmpv6",
      "description": "Locator"
    },
    {
      "field": "icmpv6.ilnp.nb_preference",
      "protocol_dependency": "icmpv6",
      "description": "Preference"
    },
    {
      "field": "icmpv6.ilnp.nb_lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Lifetime"
    },
    {
      "field": "icmpv6.6lowpannd.da.status",
      "protocol_dependency": "icmpv6",
      "description": "Status"
    },
    {
      "field": "icmpv6.6lowpannd.da.rsv",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.6lowpannd.da.lifetime",
      "protocol_dependency": "icmpv6",
      "description": "Lifetime"
    },
    {
      "field": "icmpv6.6lowpannd.da.eui64",
      "protocol_dependency": "icmpv6",
      "description": "EUI-64"
    },
    {
      "field": "icmpv6.6lowpannd.da.reg_addr",
      "protocol_dependency": "icmpv6",
      "description": "Registered Address"
    },
    {
      "field": "icmpv6.ext.echo.seq",
      "protocol_dependency": "icmpv6",
      "description": "Sequence number"
    },
    {
      "field": "icmpv6.ext.echo.req.res",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.ext.echo.req.local",
      "protocol_dependency": "icmpv6",
      "description": "Local bit"
    },
    {
      "field": "icmpv6.ext.echo.rsp.state",
      "protocol_dependency": "icmpv6",
      "description": "State"
    },
    {
      "field": "icmpv6.ext.echo.rsp.res",
      "protocol_dependency": "icmpv6",
      "description": "Reserved"
    },
    {
      "field": "icmpv6.ext.echo.rsp.active",
      "protocol_dependency": "icmpv6",
      "description": "Active bit"
    },
    {
      "field": "icmpv6.ext.echo.rsp.ipv4",
      "protocol_dependency": "icmpv6",
      "description": "IPv4 bit"
    },
    {
      "field": "icmpv6.ext.echo.rsp.ipv6",
      "protocol_dependency": "icmpv6",
      "description": "IPv6 bit"
    },
    {
      "field": "icmpv6.resp_in",
      "protocol_dependency": "icmpv6",
      "description": "Response In"
    },
    {
      "field": "icmpv6.no_resp",
      "protocol_dependency": "icmpv6",
      "description": "No response seen"
    },
    {
      "field": "icmpv6.resp_to",
      "protocol_dependency": "icmpv6",
      "description": "Response To"
    },
    {
      "field": "icmpv6.resptime",
      "protocol_dependency": "icmpv6",
      "description": "Response Time"
    },
    {
      "field": "icmpv6.mpl.seed_info.min_sequence",
      "protocol_dependency": "icmpv6",
      "description": "MinSequence"
    },
    {
      "field": "icmpv6.mpl.seed_info.bm_len",
      "protocol_dependency": "icmpv6",
      "description": "Buffered Messages Length"
    },
    {
      "field": "icmpv6.mpl.seed_info.s",
      "protocol_dependency": "icmpv6",
      "description": "Seed ID Length"
    },
    {
      "field": "icmpv6.mpl.seed_info.seed_id",
      "protocol_dependency": "icmpv6",
      "description": "Seed ID"
    },
    {
      "field": "icmpv6.mpl.seed_info.sequence",
      "protocol_dependency": "icmpv6",
      "description": "Sequence"
    },
    {
      "field": "icmpv6.invalid_option_length",
      "protocol_dependency": "icmpv6",
      "description": "Invalid Option Length"
    },
    {
      "field": "icmpv6.undecoded.option",
      "protocol_dependency": "icmpv6",
      "description": "Undecoded option"
    },
    {
      "field": "icmpv6.unknown_data.expert",
      "protocol_dependency": "icmpv6",
      "description": "Unknown Data (not interpreted)"
    },
    {
      "field": "icmpv6.undecoded.rpl_option",
      "protocol_dependency": "icmpv6",
      "description": "Undecoded RPL Option"
    },
    {
      "field": "icmpv6.undecoded.type",
      "protocol_dependency": "icmpv6",
      "description": "Undecoded type"
    },
    {
      "field": "icmpv6.rr.pco.mp.matchlen.gt128",
      "protocol_dependency": "icmpv6",
      "description": "MatchLen is greater than 128"
    },
    {
      "field": "icmpv6.rr.pco.mp.matchedlen.gt128",
      "protocol_dependency": "icmpv6",
      "description": "MatchedLen is greater than 128"
    },
    {
      "field": "icmpv6.checksum_bad.expert",
      "protocol_dependency": "icmpv6",
      "description": "Bad checksum"
    },
    {
      "field": "icmpv6.resp_not_found",
      "protocol_dependency": "icmpv6",
      "description": "Response not found"
    },
    {
      "field": "icmpv6.rpl.unknown.metric",
      "protocol_dependency": "icmpv6",
      "description": "Unknown RPL metric/constraint type"
    },
    {
      "field": "icmpv6.rpl.p2p.hop_by_hop",
      "protocol_dependency": "icmpv6",
      "description": "Reply MUST be set to one in order to establish a Hop-by-Hop Route"
    },
    {
      "field": "icmpv6.rpl.p2p.num_of_routes",
      "protocol_dependency": "icmpv6",
      "description": "This field MUST be set to zero when Hop-by-Hop Routes are being discovered"
    },
    {
      "field": "icmpv6.rpl.p2p.dro.rdo.zero",
      "protocol_dependency": "icmpv6",
      "description": "This field MUST be set to zero when the P2P-RDO is included in a P2P-DRO"
    },
    {
      "field": "icmpv6.rpl.p2p.dro.zero",
      "protocol_dependency": "icmpv6",
      "description": "This field MUST be set to zero"
    },
    {
      "field": "ip.version",
      "protocol_dependency": "ip",
      "description": "Version"
    },
    {
      "field": "ip.hdr_len",
      "protocol_dependency": "ip",
      "description": "Header Length"
    },
    {
      "field": "ip.dsfield",
      "protocol_dependency": "ip",
      "description": "Differentiated Services Field"
    },
    {
      "field": "ip.dsfield.dscp",
      "protocol_dependency": "ip",
      "description": "Differentiated Services Codepoint"
    },
    {
      "field": "ip.dsfield.ecn",
      "protocol_dependency": "ip",
      "description": "Explicit Congestion Notification"
    },
    {
      "field": "ip.tos",
      "protocol_dependency": "ip",
      "description": "Type of Service"
    },
    {
      "field": "ip.tos.precedence",
      "protocol_dependency": "ip",
      "description": "Precedence"
    },
    {
      "field": "ip.tos.delay",
      "protocol_dependency": "ip",
      "description": "Delay"
    },
    {
      "field": "ip.tos.throughput",
      "protocol_dependency": "ip",
      "description": "Throughput"
    },
    {
      "field": "ip.tos.reliability",
      "protocol_dependency": "ip",
      "description": "Reliability"
    },
    {
      "field": "ip.tos.cost",
      "protocol_dependency": "ip",
      "description": "Cost"
    },
    {
      "field": "ip.len",
      "protocol_dependency": "ip",
      "description": "Total Length"
    },
    {
      "field": "ip.id",
      "protocol_dependency": "ip",
      "description": "Identification"
    },
    {
      "field": "ip.dst",
      "protocol_dependency": "ip",
      "description": "Destination Address"
    },
    {
      "field": "ip.dst_host",
      "protocol_dependency": "ip",
      "description": "Destination Host"
    },
    {
      "field": "ip.src",
      "protocol_dependency": "ip",
      "description": "Source Address"
    },
    {
      "field": "ip.src_host",
      "protocol_dependency": "ip",
      "description": "Source Host"
    },
    {
      "field": "ip.addr",
      "protocol_dependency": "ip",
      "description": "Source or Destination Address"
    },
    {
      "field": "ip.host",
      "protocol_dependency": "ip",
      "description": "Source or Destination Host"
    },
    {
      "field": "ip.geoip.country",
      "protocol_dependency": "ip",
      "description": "Source or Destination GeoIP Country"
    },
    {
      "field": "ip.geoip.country_iso",
      "protocol_dependency": "ip",
      "description": "Source or Destination GeoIP ISO Two Letter Country Code"
    },
    {
      "field": "ip.geoip.city",
      "protocol_dependency": "ip",
      "description": "Source or Destination GeoIP City"
    },
    {
      "field": "ip.geoip.asnum",
      "protocol_dependency": "ip",
      "description": "Source or Destination GeoIP AS Number"
    },
    {
      "field": "ip.geoip.org",
      "protocol_dependency": "ip",
      "description": "Source or Destination GeoIP AS Organization"
    },
    {
      "field": "ip.geoip.lat",
      "protocol_dependency": "ip",
      "description": "Source or Destination GeoIP Latitude"
    },
    {
      "field": "ip.geoip.lon",
      "protocol_dependency": "ip",
      "description": "Source or Destination GeoIP Longitude"
    },
    {
      "field": "ip.geoip.src_summary",
      "protocol_dependency": "ip",
      "description": "Source GeoIP"
    },
    {
      "field": "ip.geoip.src_country",
      "protocol_dependency": "ip",
      "description": "Source GeoIP Country"
    },
    {
      "field": "ip.geoip.src_country_iso",
      "protocol_dependency": "ip",
      "description": "Source GeoIP ISO Two Letter Country Code"
    },
    {
      "field": "ip.geoip.src_city",
      "protocol_dependency": "ip",
      "description": "Source GeoIP City"
    },
    {
      "field": "ip.geoip.src_asnum",
      "protocol_dependency": "ip",
      "description": "Source GeoIP AS Number"
    },
    {
      "field": "ip.geoip.src_org",
      "protocol_dependency": "ip",
      "description": "Source GeoIP AS Organization"
    },
    {
      "field": "ip.geoip.src_lat",
      "protocol_dependency": "ip",
      "description": "Source GeoIP Latitude"
    },
    {
      "field": "ip.geoip.src_lon",
      "protocol_dependency": "ip",
      "description": "Source GeoIP Longitude"
    },
    {
      "field": "ip.geoip.dst_summary",
      "protocol_dependency": "ip",
      "description": "Destination GeoIP"
    },
    {
      "field": "ip.geoip.dst_country",
      "protocol_dependency": "ip",
      "description": "Destination GeoIP Country"
    },
    {
      "field": "ip.geoip.dst_country_iso",
      "protocol_dependency": "ip",
      "description": "Destination GeoIP ISO Two Letter Country Code"
    },
    {
      "field": "ip.geoip.dst_city",
      "protocol_dependency": "ip",
      "description": "Destination GeoIP City"
    },
    {
      "field": "ip.geoip.dst_asnum",
      "protocol_dependency": "ip",
      "description": "Destination GeoIP AS Number"
    },
    {
      "field": "ip.geoip.dst_org",
      "protocol_dependency": "ip",
      "description": "Destination GeoIP AS Organization"
    },
    {
      "field": "ip.geoip.dst_lat",
      "protocol_dependency": "ip",
      "description": "Destination GeoIP Latitude"
    },
    {
      "field": "ip.geoip.dst_lon",
      "protocol_dependency": "ip",
      "description": "Destination GeoIP Longitude"
    },
    {
      "field": "ip.flags",
      "protocol_dependency": "ip",
      "description": "Flags"
    },
    {
      "field": "ip.flags.sf",
      "protocol_dependency": "ip",
      "description": "Security flag"
    },
    {
      "field": "ip.flags.rb",
      "protocol_dependency": "ip",
      "description": "Reserved bit"
    },
    {
      "field": "ip.flags.df",
      "protocol_dependency": "ip",
      "description": "Don't fragment"
    },
    {
      "field": "ip.flags.mf",
      "protocol_dependency": "ip",
      "description": "More fragments"
    },
    {
      "field": "ip.frag_offset",
      "protocol_dependency": "ip",
      "description": "Fragment Offset"
    },
    {
      "field": "ip.ttl",
      "protocol_dependency": "ip",
      "description": "Time to Live"
    },
    {
      "field": "ip.proto",
      "protocol_dependency": "ip",
      "description": "Protocol"
    },
    {
      "field": "ip.checksum",
      "protocol_dependency": "ip",
      "description": "Header Checksum"
    },
    {
      "field": "ip.checksum_calculated",
      "protocol_dependency": "ip",
      "description": "Calculated Checksum"
    },
    {
      "field": "ip.checksum.status",
      "protocol_dependency": "ip",
      "description": "Header checksum status"
    },
    {
      "field": "ip.opt.type",
      "protocol_dependency": "ip",
      "description": "Type"
    },
    {
      "field": "ip.opt.type.copy",
      "protocol_dependency": "ip",
      "description": "Copy on fragmentation"
    },
    {
      "field": "ip.opt.type.class",
      "protocol_dependency": "ip",
      "description": "Class"
    },
    {
      "field": "ip.opt.type.number",
      "protocol_dependency": "ip",
      "description": "Number"
    },
    {
      "field": "ip.opt.len",
      "protocol_dependency": "ip",
      "description": "Length"
    },
    {
      "field": "ip.opt.ptr",
      "protocol_dependency": "ip",
      "description": "Pointer"
    },
    {
      "field": "ip.opt.sid",
      "protocol_dependency": "ip",
      "description": "Stream Identifier"
    },
    {
      "field": "ip.opt.mtu",
      "protocol_dependency": "ip",
      "description": "MTU"
    },
    {
      "field": "ip.opt.id_number",
      "protocol_dependency": "ip",
      "description": "ID Number"
    },
    {
      "field": "ip.opt.ohc",
      "protocol_dependency": "ip",
      "description": "Outbound Hop Count"
    },
    {
      "field": "ip.opt.rhc",
      "protocol_dependency": "ip",
      "description": "Return Hop Count"
    },
    {
      "field": "ip.opt.originator",
      "protocol_dependency": "ip",
      "description": "Originator IP Address"
    },
    {
      "field": "ip.opt.ra",
      "protocol_dependency": "ip",
      "description": "Router Alert"
    },
    {
      "field": "ip.opt.addr",
      "protocol_dependency": "ip",
      "description": "IP Address"
    },
    {
      "field": "ip.opt.padding",
      "protocol_dependency": "ip",
      "description": "Padding"
    },
    {
      "field": "ip.opt.qs_func",
      "protocol_dependency": "ip",
      "description": "Function"
    },
    {
      "field": "ip.opt.qs_rate",
      "protocol_dependency": "ip",
      "description": "Rate"
    },
    {
      "field": "ip.opt.qs_ttl",
      "protocol_dependency": "ip",
      "description": "QS TTL"
    },
    {
      "field": "ip.opt.qs_ttl_diff",
      "protocol_dependency": "ip",
      "description": "TTL Diff"
    },
    {
      "field": "ip.opt.qs_unused",
      "protocol_dependency": "ip",
      "description": "Not Used"
    },
    {
      "field": "ip.opt.qs_nonce",
      "protocol_dependency": "ip",
      "description": "QS Nonce"
    },
    {
      "field": "ip.opt.qs_reserved",
      "protocol_dependency": "ip",
      "description": "Reserved"
    },
    {
      "field": "ip.opt.sec_rfc791_sec",
      "protocol_dependency": "ip",
      "description": "Security"
    },
    {
      "field": "ip.opt.sec_rfc791_comp",
      "protocol_dependency": "ip",
      "description": "Compartments"
    },
    {
      "field": "ip.opt.sec_rfc791_hr",
      "protocol_dependency": "ip",
      "description": "Handling Restrictions"
    },
    {
      "field": "ip.opt.sec_rfc791_tcc",
      "protocol_dependency": "ip",
      "description": "Transmission Control Code"
    },
    {
      "field": "ip.opt.sec_cl",
      "protocol_dependency": "ip",
      "description": "Classification Level"
    },
    {
      "field": "ip.opt.sec_prot_auth_flags",
      "protocol_dependency": "ip",
      "description": "Protection Authority Flags"
    },
    {
      "field": "ip.opt.sec_prot_auth_genser",
      "protocol_dependency": "ip",
      "description": "GENSER"
    },
    {
      "field": "ip.opt.sec_prot_auth_siop_esi",
      "protocol_dependency": "ip",
      "description": "SIOP-ESI"
    },
    {
      "field": "ip.opt.sec_prot_auth_sci",
      "protocol_dependency": "ip",
      "description": "SCI"
    },
    {
      "field": "ip.opt.sec_prot_auth_nsa",
      "protocol_dependency": "ip",
      "description": "NSA"
    },
    {
      "field": "ip.opt.sec_prot_auth_doe",
      "protocol_dependency": "ip",
      "description": "DOE"
    },
    {
      "field": "ip.opt.sec_prot_auth_unassigned",
      "protocol_dependency": "ip",
      "description": "Unassigned"
    },
    {
      "field": "ip.opt.sec_prot_auth_fti",
      "protocol_dependency": "ip",
      "description": "Field Termination Indicator"
    },
    {
      "field": "ip.opt.ext_sec_add_sec_info_format_code",
      "protocol_dependency": "ip",
      "description": "Additional Security Info Format Code"
    },
    {
      "field": "ip.opt.ext_sec_add_sec_info",
      "protocol_dependency": "ip",
      "description": "Additional Security Info"
    },
    {
      "field": "ip.rec_rt",
      "protocol_dependency": "ip",
      "description": "Recorded Route"
    },
    {
      "field": "ip.rec_rt_host",
      "protocol_dependency": "ip",
      "description": "Recorded Route Host"
    },
    {
      "field": "ip.cur_rt",
      "protocol_dependency": "ip",
      "description": "Current Route"
    },
    {
      "field": "ip.cur_rt_host",
      "protocol_dependency": "ip",
      "description": "Current Route Host"
    },
    {
      "field": "ip.src_rt",
      "protocol_dependency": "ip",
      "description": "Source Route"
    },
    {
      "field": "ip.src_rt_host",
      "protocol_dependency": "ip",
      "description": "Source Route Host"
    },
    {
      "field": "ip.empty_rt",
      "protocol_dependency": "ip",
      "description": "Empty Route"
    },
    {
      "field": "ip.empty_rt_host",
      "protocol_dependency": "ip",
      "description": "Empty Route Host"
    },
    {
      "field": "ip.cipso.tag_type",
      "protocol_dependency": "ip",
      "description": "Tag Type"
    },
    {
      "field": "ip.fragment.overlap",
      "protocol_dependency": "ip",
      "description": "Fragment overlap"
    },
    {
      "field": "ip.fragment.overlap.conflict",
      "protocol_dependency": "ip",
      "description": "Conflicting data in fragment overlap"
    },
    {
      "field": "ip.fragment.multipletails",
      "protocol_dependency": "ip",
      "description": "Multiple tail fragments found"
    },
    {
      "field": "ip.fragment.toolongfragment",
      "protocol_dependency": "ip",
      "description": "Fragment too long"
    },
    {
      "field": "ip.fragment.error",
      "protocol_dependency": "ip",
      "description": "Defragmentation error"
    },
    {
      "field": "ip.fragment.count",
      "protocol_dependency": "ip",
      "description": "Fragment count"
    },
    {
      "field": "ip.fragment",
      "protocol_dependency": "ip",
      "description": "IPv4 Fragment"
    },
    {
      "field": "ip.fragments",
      "protocol_dependency": "ip",
      "description": "IPv4 Fragments"
    },
    {
      "field": "ip.reassembled_in",
      "protocol_dependency": "ip",
      "description": "Reassembled IPv4 in frame"
    },
    {
      "field": "ip.reassembled.length",
      "protocol_dependency": "ip",
      "description": "Reassembled IPv4 length"
    },
    {
      "field": "ip.reassembled.data",
      "protocol_dependency": "ip",
      "description": "Reassembled IPv4 data"
    },
    {
      "field": "ip.cipso.doi",
      "protocol_dependency": "ip",
      "description": "DOI"
    },
    {
      "field": "ip.cipso.sensitivity_level",
      "protocol_dependency": "ip",
      "description": "Sensitivity Level"
    },
    {
      "field": "ip.cipso.categories",
      "protocol_dependency": "ip",
      "description": "Categories"
    },
    {
      "field": "ip.cipso.tag_data",
      "protocol_dependency": "ip",
      "description": "Tag data"
    },
    {
      "field": "ip.opt.overflow",
      "protocol_dependency": "ip",
      "description": "Overflow"
    },
    {
      "field": "ip.opt.flag",
      "protocol_dependency": "ip",
      "description": "Flag"
    },
    {
      "field": "ip.opt.time_stamp",
      "protocol_dependency": "ip",
      "description": "Time stamp"
    },
    {
      "field": "ip.opt.time_stamp_addr",
      "protocol_dependency": "ip",
      "description": "Address"
    },
    {
      "field": "ip.opt.len.invalid",
      "protocol_dependency": "ip",
      "description": "Invalid length for option"
    },
    {
      "field": "ip.opt.ptr.before_address",
      "protocol_dependency": "ip",
      "description": "Pointer points before first address"
    },
    {
      "field": "ip.opt.ptr.middle_address",
      "protocol_dependency": "ip",
      "description": "Pointer points to middle of address"
    },
    {
      "field": "ip.subopt_too_long",
      "protocol_dependency": "ip",
      "description": "Suboption would go past end of option"
    },
    {
      "field": "ip.nop",
      "protocol_dependency": "ip",
      "description": "4 NOP in a row - a router may have removed some options"
    },
    {
      "field": "ip.bogus_ip_length",
      "protocol_dependency": "ip",
      "description": "Bogus IP length"
    },
    {
      "field": "ip.evil_packet",
      "protocol_dependency": "ip",
      "description": "Packet has evil intent"
    },
    {
      "field": "ip.checksum_bad.expert",
      "protocol_dependency": "ip",
      "description": "Bad checksum"
    },
    {
      "field": "ip.ttl.lncb",
      "protocol_dependency": "ip",
      "description": "Time To Live"
    },
    {
      "field": "ip.ttl.too_small",
      "protocol_dependency": "ip",
      "description": "Time To Live"
    },
    {
      "field": "ip.cipso.malformed",
      "protocol_dependency": "ip",
      "description": "Malformed CIPSO tag"
    },
    {
      "field": "ip.bogus_ip_version",
      "protocol_dependency": "ip",
      "description": "Bogus IP version"
    },
    {
      "field": "ip.bogus_header_length",
      "protocol_dependency": "ip",
      "description": "Bogus IP header length"
    },
    {
      "field": "ip.options.eol",
      "protocol_dependency": "ip",
      "description": "IP Option - End of Options List (EOL)"
    },
    {
      "field": "ip.options.nop",
      "protocol_dependency": "ip",
      "description": "IP Option - No-Operation (NOP)"
    },
    {
      "field": "ip.options.security",
      "protocol_dependency": "ip",
      "description": "IP Option - Security"
    },
    {
      "field": "ip.options.route",
      "protocol_dependency": "ip",
      "description": "IP Option - Loose Source Route"
    },
    {
      "field": "ip.options.timestamp",
      "protocol_dependency": "ip",
      "description": "IP Option - Time Stamp"
    },
    {
      "field": "ip.options.ext_security",
      "protocol_dependency": "ip",
      "description": "IP Option - Extended Security"
    },
    {
      "field": "ip.options.cipso",
      "protocol_dependency": "ip",
      "description": "IP Option - Commercial Security"
    },
    {
      "field": "ip.options.record_route",
      "protocol_dependency": "ip",
      "description": "IP Option - Record Route"
    },
    {
      "field": "ip.options.sid",
      "protocol_dependency": "ip",
      "description": "IP Option - Stream ID"
    },
    {
      "field": "ip.options.source_route",
      "protocol_dependency": "ip",
      "description": "IP Option - Strict Source Route"
    },
    {
      "field": "ip.options.mtu_probe",
      "protocol_dependency": "ip",
      "description": "IP Option - MTU Probe"
    },
    {
      "field": "ip.options.mtu_reply",
      "protocol_dependency": "ip",
      "description": "IP Option - MTU Reply"
    },
    {
      "field": "ip.options.traceroute",
      "protocol_dependency": "ip",
      "description": "IP Option - Traceroute"
    },
    {
      "field": "ip.options.routeralert",
      "protocol_dependency": "ip",
      "description": "IP Option - Router Alert"
    },
    {
      "field": "ip.options.sdb",
      "protocol_dependency": "ip",
      "description": "IP Option - Selective Directed Broadcast"
    },
    {
      "field": "ip.options.qs",
      "protocol_dependency": "ip",
      "description": "IP Option - Quick-Start"
    },
    {
      "field": "ipv6.version",
      "protocol_dependency": "ipv6",
      "description": "Version"
    },
    {
      "field": "ipv6.tclass",
      "protocol_dependency": "ipv6",
      "description": "Traffic Class"
    },
    {
      "field": "ipv6.tclass.dscp",
      "protocol_dependency": "ipv6",
      "description": "Differentiated Services Codepoint"
    },
    {
      "field": "ipv6.tclass.ecn",
      "protocol_dependency": "ipv6",
      "description": "Explicit Congestion Notification"
    },
    {
      "field": "ipv6.flow",
      "protocol_dependency": "ipv6",
      "description": "Flow Label"
    },
    {
      "field": "ipv6.plen",
      "protocol_dependency": "ipv6",
      "description": "Payload Length"
    },
    {
      "field": "ipv6.nxt",
      "protocol_dependency": "ipv6",
      "description": "Next Header"
    },
    {
      "field": "ipv6.hlim",
      "protocol_dependency": "ipv6",
      "description": "Hop Limit"
    },
    {
      "field": "ipv6.src",
      "protocol_dependency": "ipv6",
      "description": "Source Address"
    },
    {
      "field": "ipv6.src_addr_space",
      "protocol_dependency": "ipv6",
      "description": "Source Address Space"
    },
    {
      "field": "ipv6.src_multicast_flags",
      "protocol_dependency": "ipv6",
      "description": "Source Address Multicast Flags"
    },
    {
      "field": "ipv6.src_multicast_flags.transient",
      "protocol_dependency": "ipv6",
      "description": "Source Address Transient Multicast Flag"
    },
    {
      "field": "ipv6.src_multicast_flags.network_prefix",
      "protocol_dependency": "ipv6",
      "description": "Source Address Network Prefix Multicast Flag"
    },
    {
      "field": "ipv6.src_multicast_flags.embed_rp",
      "protocol_dependency": "ipv6",
      "description": "Source Address RP Multicast Flag"
    },
    {
      "field": "ipv6.src_multicast_flags.reserved",
      "protocol_dependency": "ipv6",
      "description": "Source Address Reserved Multicast Flag"
    },
    {
      "field": "ipv6.src_multicast_scope",
      "protocol_dependency": "ipv6",
      "description": "Source Address Multicast Scope"
    },
    {
      "field": "ipv6.src_special_purpose",
      "protocol_dependency": "ipv6",
      "description": "Source Address Special-Purpose Allocation"
    },
    {
      "field": "ipv6.src_host",
      "protocol_dependency": "ipv6",
      "description": "Source Host"
    },
    {
      "field": "ipv6.src_slaac_mac",
      "protocol_dependency": "ipv6",
      "description": "Source SLAAC MAC"
    },
    {
      "field": "ipv6.src_isatap_ipv4",
      "protocol_dependency": "ipv6",
      "description": "Source ISATAP IPv4"
    },
    {
      "field": "ipv6.src_6to4_gw_ipv4",
      "protocol_dependency": "ipv6",
      "description": "Source 6to4 Gateway IPv4"
    },
    {
      "field": "ipv6.src_6to4_sla_id",
      "protocol_dependency": "ipv6",
      "description": "Source 6to4 SLA ID"
    },
    {
      "field": "ipv6.src_ts_ipv4",
      "protocol_dependency": "ipv6",
      "description": "Source Teredo Server IPv4"
    },
    {
      "field": "ipv6.src_tc_port",
      "protocol_dependency": "ipv6",
      "description": "Source Teredo Port"
    },
    {
      "field": "ipv6.src_tc_ipv4",
      "protocol_dependency": "ipv6",
      "description": "Source Teredo Client IPv4"
    },
    {
      "field": "ipv6.src_embed_ipv4",
      "protocol_dependency": "ipv6",
      "description": "Source Embedded IPv4"
    },
    {
      "field": "ipv6.dst",
      "protocol_dependency": "ipv6",
      "description": "Destination Address"
    },
    {
      "field": "ipv6.dst_addr_space",
      "protocol_dependency": "ipv6",
      "description": "Destination Address Space"
    },
    {
      "field": "ipv6.dst_multicast_flags",
      "protocol_dependency": "ipv6",
      "description": "Destination Address Multicast Flags"
    },
    {
      "field": "ipv6.dst_multicast_flags.transient",
      "protocol_dependency": "ipv6",
      "description": "Destination Address Transient Multicast Flag"
    },
    {
      "field": "ipv6.dst_multicast_flags.network_prefix",
      "protocol_dependency": "ipv6",
      "description": "Destination Address Network Prefix Multicast Flag"
    },
    {
      "field": "ipv6.dst_multicast_flags.embed_rp",
      "protocol_dependency": "ipv6",
      "description": "Destination Address RP Multicast Flag"
    },
    {
      "field": "ipv6.dst_multicast_flags.reserved",
      "protocol_dependency": "ipv6",
      "description": "Destination Address Reserved Multicast Flag"
    },
    {
      "field": "ipv6.dst_multicast_scope",
      "protocol_dependency": "ipv6",
      "description": "Destination Address Multicast Scope"
    },
    {
      "field": "ipv6.dst_special_purpose",
      "protocol_dependency": "ipv6",
      "description": "Destination Address Special-Purpose Allocation"
    },
    {
      "field": "ipv6.dst_host",
      "protocol_dependency": "ipv6",
      "description": "Destination Host"
    },
    {
      "field": "ipv6.dst_slaac_mac",
      "protocol_dependency": "ipv6",
      "description": "Destination SLAAC MAC"
    },
    {
      "field": "ipv6.dst_isatap_ipv4",
      "protocol_dependency": "ipv6",
      "description": "Destination ISATAP IPv4"
    },
    {
      "field": "ipv6.dst_6to4_gw_ipv4",
      "protocol_dependency": "ipv6",
      "description": "Destination 6to4 Gateway IPv4"
    },
    {
      "field": "ipv6.dst_6to4_sla_id",
      "protocol_dependency": "ipv6",
      "description": "Destination 6to4 SLA ID"
    },
    {
      "field": "ipv6.dst_ts_ipv4",
      "protocol_dependency": "ipv6",
      "description": "Destination Teredo Server IPv4"
    },
    {
      "field": "ipv6.dst_tc_port",
      "protocol_dependency": "ipv6",
      "description": "Destination Teredo Port"
    },
    {
      "field": "ipv6.dst_tc_ipv4",
      "protocol_dependency": "ipv6",
      "description": "Destination Teredo Client IPv4"
    },
    {
      "field": "ipv6.dst_embed_ipv4",
      "protocol_dependency": "ipv6",
      "description": "Destination Embedded IPv4"
    },
    {
      "field": "ipv6.addr",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination Address"
    },
    {
      "field": "ipv6.addr_space",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination Address Space"
    },
    {
      "field": "ipv6.multicast_flags",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination Address Multicast Flags"
    },
    {
      "field": "ipv6.multicast_flags.transient",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination Address Transient Multicast Flag"
    },
    {
      "field": "ipv6.multicast_flags.network_prefix",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination Address Network Prefix Multicast Flag"
    },
    {
      "field": "ipv6.multicast_flags.embed_rp",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination Address RP Multicast Flag"
    },
    {
      "field": "ipv6.multicast_flags.reserved",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination Address Reserved Multicast Flag"
    },
    {
      "field": "ipv6.multicast_scope",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination Address Multicast Scope"
    },
    {
      "field": "ipv6.addr_special_purpose",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination Address Special-Purpose Allocation"
    },
    {
      "field": "ipv6.host",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination Host"
    },
    {
      "field": "ipv6.slaac_mac",
      "protocol_dependency": "ipv6",
      "description": "SLAAC MAC"
    },
    {
      "field": "ipv6.isatap_ipv4",
      "protocol_dependency": "ipv6",
      "description": "ISATAP IPv4"
    },
    {
      "field": "ipv6.6to4_gw_ipv4",
      "protocol_dependency": "ipv6",
      "description": "6to4 Gateway IPv4"
    },
    {
      "field": "ipv6.6to4_sla_id",
      "protocol_dependency": "ipv6",
      "description": "6to4 SLA ID"
    },
    {
      "field": "ipv6.ts_ipv4",
      "protocol_dependency": "ipv6",
      "description": "Teredo Server IPv4"
    },
    {
      "field": "ipv6.tc_port",
      "protocol_dependency": "ipv6",
      "description": "Teredo Port"
    },
    {
      "field": "ipv6.tc_ipv4",
      "protocol_dependency": "ipv6",
      "description": "Teredo Client IPv4"
    },
    {
      "field": "ipv6.embed_ipv4_prefix",
      "protocol_dependency": "ipv6",
      "description": "Embedded IPv4 Prefix"
    },
    {
      "field": "ipv6.embed_ipv4",
      "protocol_dependency": "ipv6",
      "description": "Embedded IPv4"
    },
    {
      "field": "ipv6.embed_ipv4_u",
      "protocol_dependency": "ipv6",
      "description": "Embedded IPv4 u field"
    },
    {
      "field": "ipv6.embed_ipv4_suffix",
      "protocol_dependency": "ipv6",
      "description": "Embedded IPv4 Suffix"
    },
    {
      "field": "ipv6.geoip.country",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination GeoIP Country"
    },
    {
      "field": "ipv6.geoip.country_iso",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination GeoIP ISO Two Letter Country Code"
    },
    {
      "field": "ipv6.geoip.city",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination GeoIP City"
    },
    {
      "field": "ipv6.geoip.asnum",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination GeoIP AS Number"
    },
    {
      "field": "ipv6.geoip.org",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination GeoIP AS Organization"
    },
    {
      "field": "ipv6.geoip.lat",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination GeoIP Latitude"
    },
    {
      "field": "ipv6.geoip.lon",
      "protocol_dependency": "ipv6",
      "description": "Source or Destination GeoIP Longitude"
    },
    {
      "field": "ipv6.geoip.src_summary",
      "protocol_dependency": "ipv6",
      "description": "Source GeoIP"
    },
    {
      "field": "ipv6.geoip.src_country",
      "protocol_dependency": "ipv6",
      "description": "Source GeoIP Country"
    },
    {
      "field": "ipv6.geoip.src_country_iso",
      "protocol_dependency": "ipv6",
      "description": "Source GeoIP ISO Two Letter Country Code"
    },
    {
      "field": "ipv6.geoip.src_city",
      "protocol_dependency": "ipv6",
      "description": "Source GeoIP City"
    },
    {
      "field": "ipv6.geoip.src_asnum",
      "protocol_dependency": "ipv6",
      "description": "Source GeoIP AS Number"
    },
    {
      "field": "ipv6.geoip.src_org",
      "protocol_dependency": "ipv6",
      "description": "Source GeoIP AS Organization"
    },
    {
      "field": "ipv6.geoip.src_lat",
      "protocol_dependency": "ipv6",
      "description": "Source GeoIP Latitude"
    },
    {
      "field": "ipv6.geoip.src_lon",
      "protocol_dependency": "ipv6",
      "description": "Source GeoIP Longitude"
    },
    {
      "field": "ipv6.geoip.dst_summary",
      "protocol_dependency": "ipv6",
      "description": "Destination GeoIP"
    },
    {
      "field": "ipv6.geoip.dst_country",
      "protocol_dependency": "ipv6",
      "description": "Destination GeoIP Country"
    },
    {
      "field": "ipv6.geoip.dst_country_iso",
      "protocol_dependency": "ipv6",
      "description": "Destination GeoIP ISO Two Letter Country Code"
    },
    {
      "field": "ipv6.geoip.dst_city",
      "protocol_dependency": "ipv6",
      "description": "Destination GeoIP City"
    },
    {
      "field": "ipv6.geoip.dst_asnum",
      "protocol_dependency": "ipv6",
      "description": "Destination GeoIP AS Number"
    },
    {
      "field": "ipv6.geoip.dst_org",
      "protocol_dependency": "ipv6",
      "description": "Destination GeoIP AS Organization"
    },
    {
      "field": "ipv6.geoip.dst_lat",
      "protocol_dependency": "ipv6",
      "description": "Destination GeoIP Latitude"
    },
    {
      "field": "ipv6.geoip.dst_lon",
      "protocol_dependency": "ipv6",
      "description": "Destination GeoIP Longitude"
    },
    {
      "field": "ipv6.opt",
      "protocol_dependency": "ipv6",
      "description": "IPv6 Option"
    },
    {
      "field": "ipv6.opt.type",
      "protocol_dependency": "ipv6",
      "description": "Type"
    },
    {
      "field": "ipv6.opt.type.action",
      "protocol_dependency": "ipv6",
      "description": "Action"
    },
    {
      "field": "ipv6.opt.type.change",
      "protocol_dependency": "ipv6",
      "description": "May Change"
    },
    {
      "field": "ipv6.opt.type.rest",
      "protocol_dependency": "ipv6",
      "description": "Low-Order Bits"
    },
    {
      "field": "ipv6.opt.length",
      "protocol_dependency": "ipv6",
      "description": "Length"
    },
    {
      "field": "ipv6.opt.pad1",
      "protocol_dependency": "ipv6",
      "description": "Pad1"
    },
    {
      "field": "ipv6.opt.padn",
      "protocol_dependency": "ipv6",
      "description": "PadN"
    },
    {
      "field": "ipv6.opt.pmtu.min",
      "protocol_dependency": "ipv6",
      "description": "Minimum Reported PMTU"
    },
    {
      "field": "ipv6.opt.pmtu.rtn",
      "protocol_dependency": "ipv6",
      "description": "Return Minimum PMTU"
    },
    {
      "field": "ipv6.opt.pmtu.r_flag",
      "protocol_dependency": "ipv6",
      "description": "Return Flag"
    },
    {
      "field": "ipv6.opt.apn.id.type",
      "protocol_dependency": "ipv6",
      "description": "ID Type"
    },
    {
      "field": "ipv6.opt.apn.flags",
      "protocol_dependency": "ipv6",
      "description": "Flags"
    },
    {
      "field": "ipv6.opt.apn.param.type",
      "protocol_dependency": "ipv6",
      "description": "Parameters Types"
    },
    {
      "field": "ipv6.opt.apn.id.part1",
      "protocol_dependency": "ipv6",
      "description": "ID Part1"
    },
    {
      "field": "ipv6.opt.apn.id.part2",
      "protocol_dependency": "ipv6",
      "description": "ID Part2"
    },
    {
      "field": "ipv6.opt.apn.id.part3",
      "protocol_dependency": "ipv6",
      "description": "ID Part3"
    },
    {
      "field": "ipv6.opt.apn.id.part4",
      "protocol_dependency": "ipv6",
      "description": "ID Part4"
    },
    {
      "field": "ipv6.opt.router_alert",
      "protocol_dependency": "ipv6",
      "description": "Router Alert"
    },
    {
      "field": "ipv6.opt.tel",
      "protocol_dependency": "ipv6",
      "description": "Tunnel Encapsulation Limit"
    },
    {
      "field": "ipv6.opt.jumbo",
      "protocol_dependency": "ipv6",
      "description": "Payload Length"
    },
    {
      "field": "ipv6.opt.calipso.doi",
      "protocol_dependency": "ipv6",
      "description": "CALIPSO Domain of Interpretation"
    },
    {
      "field": "ipv6.opt.calipso.cmpt.length",
      "protocol_dependency": "ipv6",
      "description": "Compartment Length"
    },
    {
      "field": "ipv6.opt.calipso.sens_level",
      "protocol_dependency": "ipv6",
      "description": "Sensitivity Level"
    },
    {
      "field": "ipv6.opt.calipso.checksum",
      "protocol_dependency": "ipv6",
      "description": "Checksum"
    },
    {
      "field": "ipv6.opt.calipso.cmpt_bitmap",
      "protocol_dependency": "ipv6",
      "description": "Compartment Bitmap"
    },
    {
      "field": "ipv6.opt.smf_dpd.hash_bit",
      "protocol_dependency": "ipv6",
      "description": "H-bit"
    },
    {
      "field": "ipv6.opt.smf_dpd.tid_type",
      "protocol_dependency": "ipv6",
      "description": "TaggerID Type"
    },
    {
      "field": "ipv6.opt.smf_dpd.tid_len",
      "protocol_dependency": "ipv6",
      "description": "TaggerID Length"
    },
    {
      "field": "ipv6.opt.smf_dpd.tagger_id",
      "protocol_dependency": "ipv6",
      "description": "TaggerID"
    },
    {
      "field": "ipv6.opt.smf_dpd.ident",
      "protocol_dependency": "ipv6",
      "description": "Identifier"
    },
    {
      "field": "ipv6.opt.smf_dpd.hav",
      "protocol_dependency": "ipv6",
      "description": "Hash Assist Value"
    },
    {
      "field": "ipv6.opt.pdm.scale_dtlr",
      "protocol_dependency": "ipv6",
      "description": "Scale DTLR"
    },
    {
      "field": "ipv6.opt.pdm.scale_dtls",
      "protocol_dependency": "ipv6",
      "description": "Scale DTLS"
    },
    {
      "field": "ipv6.opt.pdm.psn_this_pkt",
      "protocol_dependency": "ipv6",
      "description": "PSN This Packet"
    },
    {
      "field": "ipv6.opt.pdm.psn_last_recv",
      "protocol_dependency": "ipv6",
      "description": "PSN Last Received"
    },
    {
      "field": "ipv6.opt.pdm.delta_last_recv",
      "protocol_dependency": "ipv6",
      "description": "Delta Time Last Received"
    },
    {
      "field": "ipv6.opt.pdm.delta_last_sent",
      "protocol_dependency": "ipv6",
      "description": "Delta Time Last Sent"
    },
    {
      "field": "ipv6.opt.qs_func",
      "protocol_dependency": "ipv6",
      "description": "Function"
    },
    {
      "field": "ipv6.opt.qs_rate",
      "protocol_dependency": "ipv6",
      "description": "Rate"
    },
    {
      "field": "ipv6.opt.qs_ttl",
      "protocol_dependency": "ipv6",
      "description": "QS TTL"
    },
    {
      "field": "ipv6.opt.qs_ttl_diff",
      "protocol_dependency": "ipv6",
      "description": "TTL Diff"
    },
    {
      "field": "ipv6.opt.qs_unused",
      "protocol_dependency": "ipv6",
      "description": "Not Used"
    },
    {
      "field": "ipv6.opt.qs_nonce",
      "protocol_dependency": "ipv6",
      "description": "QS Nonce"
    },
    {
      "field": "ipv6.opt.qs_reserved",
      "protocol_dependency": "ipv6",
      "description": "Reserved"
    },
    {
      "field": "ipv6.opt.ioam.rsv",
      "protocol_dependency": "ipv6",
      "description": "Reserved"
    },
    {
      "field": "ipv6.opt.ioam.opt_type",
      "protocol_dependency": "ipv6",
      "description": "Option-Type"
    },
    {
      "field": "ipv6.opt.ioam.trace.ns",
      "protocol_dependency": "ipv6",
      "description": "Namespace ID"
    },
    {
      "field": "ipv6.opt.ioam.trace.nodelen",
      "protocol_dependency": "ipv6",
      "description": "Node Length"
    },
    {
      "field": "ipv6.opt.ioam.trace.flags",
      "protocol_dependency": "ipv6",
      "description": "Flags"
    },
    {
      "field": "ipv6.opt.ioam.trace.flag.o",
      "protocol_dependency": "ipv6",
      "description": "Overflow"
    },
    {
      "field": "ipv6.opt.ioam.trace.flag.l",
      "protocol_dependency": "ipv6",
      "description": "Loopback"
    },
    {
      "field": "ipv6.opt.ioam.trace.flag.a",
      "protocol_dependency": "ipv6",
      "description": "Active"
    },
    {
      "field": "ipv6.opt.ioam.trace.flag.rsv",
      "protocol_dependency": "ipv6",
      "description": "Reserved"
    },
    {
      "field": "ipv6.opt.ioam.trace.remlen",
      "protocol_dependency": "ipv6",
      "description": "Remaining Length"
    },
    {
      "field": "ipv6.opt.ioam.trace.type",
      "protocol_dependency": "ipv6",
      "description": "Trace Type"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.bit0",
      "protocol_dependency": "ipv6",
      "description": "Hop_Lim and Node ID (short)"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.bit1",
      "protocol_dependency": "ipv6",
      "description": "Ingress and Egress IDs (short)"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.bit2",
      "protocol_dependency": "ipv6",
      "description": "Timestamp seconds"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.bit3",
      "protocol_dependency": "ipv6",
      "description": "Timestamp fraction"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.bit4",
      "protocol_dependency": "ipv6",
      "description": "Transit delay"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.bit5",
      "protocol_dependency": "ipv6",
      "description": "IOAM-Namespace specific data (short)"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.bit6",
      "protocol_dependency": "ipv6",
      "description": "Queue depth"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.bit7",
      "protocol_dependency": "ipv6",
      "description": "Checksum complement"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.bit8",
      "protocol_dependency": "ipv6",
      "description": "Hop_Lim and Node ID (wide)"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.bit9",
      "protocol_dependency": "ipv6",
      "description": "Ingress and Egress IDs (wide)"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.bit10",
      "protocol_dependency": "ipv6",
      "description": "IOAM-Namespace specific data (wide)"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.bit11",
      "protocol_dependency": "ipv6",
      "description": "Buffer occupancy"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.undef",
      "protocol_dependency": "ipv6",
      "description": "Undefined"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.bit22",
      "protocol_dependency": "ipv6",
      "description": "Opaque State Snapshot"
    },
    {
      "field": "ipv6.opt.ioam.trace.type.rsv",
      "protocol_dependency": "ipv6",
      "description": "Reserved"
    },
    {
      "field": "ipv6.opt.ioam.trace.rsv",
      "protocol_dependency": "ipv6",
      "description": "Reserved"
    },
    {
      "field": "ipv6.opt.ioam.trace.free_space",
      "protocol_dependency": "ipv6",
      "description": "Free space"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.hlim",
      "protocol_dependency": "ipv6",
      "description": "Hop Limit"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.id",
      "protocol_dependency": "ipv6",
      "description": "ID"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.iif",
      "protocol_dependency": "ipv6",
      "description": "Ingress ID"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.eif",
      "protocol_dependency": "ipv6",
      "description": "Egress ID"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.tss",
      "protocol_dependency": "ipv6",
      "description": "Timestamp Seconds"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.tsf",
      "protocol_dependency": "ipv6",
      "description": "Timestamp Fraction"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.trdelay",
      "protocol_dependency": "ipv6",
      "description": "Transit Delay"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.nsdata",
      "protocol_dependency": "ipv6",
      "description": "Namespace Data (short)"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.qdepth",
      "protocol_dependency": "ipv6",
      "description": "Queue Depth"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.csum",
      "protocol_dependency": "ipv6",
      "description": "Checksum Complement"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.id_wide",
      "protocol_dependency": "ipv6",
      "description": "ID"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.iif_wide",
      "protocol_dependency": "ipv6",
      "description": "Ingress ID"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.eif_wide",
      "protocol_dependency": "ipv6",
      "description": "Egress ID"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.nsdata_wide",
      "protocol_dependency": "ipv6",
      "description": "Namespace Data (wide)"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.bufoccup",
      "protocol_dependency": "ipv6",
      "description": "Buffer Occupancy"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.undefined",
      "protocol_dependency": "ipv6",
      "description": "Undefined bit"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.oss.len",
      "protocol_dependency": "ipv6",
      "description": "Length"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.oss.scid",
      "protocol_dependency": "ipv6",
      "description": "Schema ID"
    },
    {
      "field": "ipv6.opt.ioam.trace.node.oss.data",
      "protocol_dependency": "ipv6",
      "description": "Data"
    },
    {
      "field": "ipv6.opt.tpf_information",
      "protocol_dependency": "ipv6",
      "description": "TPF Information"
    },
    {
      "field": "ipv6.opt.mipv6.home_address",
      "protocol_dependency": "ipv6",
      "description": "MIPv6 Home Address"
    },
    {
      "field": "ipv6.opt.rpl.flag",
      "protocol_dependency": "ipv6",
      "description": "Flag"
    },
    {
      "field": "ipv6.opt.rpl.flag.o",
      "protocol_dependency": "ipv6",
      "description": "Down"
    },
    {
      "field": "ipv6.opt.rpl.flag.r",
      "protocol_dependency": "ipv6",
      "description": "Rank Error"
    },
    {
      "field": "ipv6.opt.rpl.flag.f",
      "protocol_dependency": "ipv6",
      "description": "Forwarding Error"
    },
    {
      "field": "ipv6.opt.rpl.flag.rsv",
      "protocol_dependency": "ipv6",
      "description": "Reserved"
    },
    {
      "field": "ipv6.opt.rpl.instance_id",
      "protocol_dependency": "ipv6",
      "description": "RPLInstanceID"
    },
    {
      "field": "ipv6.opt.rpl.sender_rank",
      "protocol_dependency": "ipv6",
      "description": "Sender Rank"
    },
    {
      "field": "ipv6.opt.ilnp_nonce",
      "protocol_dependency": "ipv6",
      "description": "ILNP Nonce"
    },
    {
      "field": "ipv6.opt.lio.length",
      "protocol_dependency": "ipv6",
      "description": "LineIDLen"
    },
    {
      "field": "ipv6.opt.lio.line_id",
      "protocol_dependency": "ipv6",
      "description": "Line ID"
    },
    {
      "field": "ipv6.opt.mpl.flag",
      "protocol_dependency": "ipv6",
      "description": "Flag"
    },
    {
      "field": "ipv6.opt.mpl.flag.s",
      "protocol_dependency": "ipv6",
      "description": "Seed ID Length"
    },
    {
      "field": "ipv6.opt.mpl.flag.m",
      "protocol_dependency": "ipv6",
      "description": "Largest Sequence"
    },
    {
      "field": "ipv6.opt.mpl.flag.v",
      "protocol_dependency": "ipv6",
      "description": "Version"
    },
    {
      "field": "ipv6.opt.mpl.flag.rsv",
      "protocol_dependency": "ipv6",
      "description": "Reserved"
    },
    {
      "field": "ipv6.opt.mpl.sequence",
      "protocol_dependency": "ipv6",
      "description": "Sequence"
    },
    {
      "field": "ipv6.opt.mpl.seed_id",
      "protocol_dependency": "ipv6",
      "description": "Seed ID"
    },
    {
      "field": "ipv6.opt.dff.flags",
      "protocol_dependency": "ipv6",
      "description": "Flags"
    },
    {
      "field": "ipv6.opt.dff.flag.ver",
      "protocol_dependency": "ipv6",
      "description": "Version (VER)"
    },
    {
      "field": "ipv6.opt.dff.flag.dup",
      "protocol_dependency": "ipv6",
      "description": "Duplicate (DUP)"
    },
    {
      "field": "ipv6.opt.dff.flag.ret",
      "protocol_dependency": "ipv6",
      "description": "Return (RET)"
    },
    {
      "field": "ipv6.opt.dff.flag.rsv",
      "protocol_dependency": "ipv6",
      "description": "Reserved"
    },
    {
      "field": "ipv6.opt.dff.sequence_number",
      "protocol_dependency": "ipv6",
      "description": "Sequence Number"
    },
    {
      "field": "ipv6.opt.experimental",
      "protocol_dependency": "ipv6",
      "description": "Experimental Option"
    },
    {
      "field": "ipv6.opt_unknown_data",
      "protocol_dependency": "ipv6",
      "description": "Unknown Data"
    },
    {
      "field": "ipv6.opt.unknown",
      "protocol_dependency": "ipv6",
      "description": "Unknown Option Payload"
    },
    {
      "field": "ipv6.fragment",
      "protocol_dependency": "ipv6",
      "description": "IPv6 Fragment"
    },
    {
      "field": "ipv6.fragment.overlap",
      "protocol_dependency": "ipv6",
      "description": "Fragment overlap"
    },
    {
      "field": "ipv6.fragment.overlap.conflict",
      "protocol_dependency": "ipv6",
      "description": "Conflicting data in fragment overlap"
    },
    {
      "field": "ipv6.fragment.multipletails",
      "protocol_dependency": "ipv6",
      "description": "Multiple tail fragments found"
    },
    {
      "field": "ipv6.fragment.toolongfragment",
      "protocol_dependency": "ipv6",
      "description": "Fragment too long"
    },
    {
      "field": "ipv6.fragment.error",
      "protocol_dependency": "ipv6",
      "description": "Defragmentation error"
    },
    {
      "field": "ipv6.fragment.count",
      "protocol_dependency": "ipv6",
      "description": "Fragment count"
    },
    {
      "field": "ipv6.fragments",
      "protocol_dependency": "ipv6",
      "description": "IPv6 Fragments"
    },
    {
      "field": "ipv6.reassembled.in",
      "protocol_dependency": "ipv6",
      "description": "Reassembled IPv6 in frame"
    },
    {
      "field": "ipv6.reassembled.length",
      "protocol_dependency": "ipv6",
      "description": "Reassembled IPv6 length"
    },
    {
      "field": "ipv6.reassembled.data",
      "protocol_dependency": "ipv6",
      "description": "Reassembled IPv6 data"
    },
    {
      "field": "ipv6.opt.jumbo.missing",
      "protocol_dependency": "ipv6",
      "description": "IPv6 payload length equals 0 and Hop-By-Hop present and Jumbo Payload option missing"
    },
    {
      "field": "ipv6.opt.jumbo.prohibited",
      "protocol_dependency": "ipv6",
      "description": "When IPv6 payload length does not equal 0 a Jumbo Payload option must not be present"
    },
    {
      "field": "ipv6.opt.jumbo.truncated",
      "protocol_dependency": "ipv6",
      "description": "Jumbo Payload option present and jumbo length < 65536"
    },
    {
      "field": "ipv6.opt.jumbo.fragment",
      "protocol_dependency": "ipv6",
      "description": "Jumbo Payload option cannot be used with a fragment header"
    },
    {
      "field": "ipv6.opt.invalid_len",
      "protocol_dependency": "ipv6",
      "description": "Invalid IPv6 option length"
    },
    {
      "field": "ipv6.opt.apn.invalid.id_type",
      "protocol_dependency": "ipv6",
      "description": "Invalid APN ID Type"
    },
    {
      "field": "ipv6.opt.unknown_data.expert",
      "protocol_dependency": "ipv6",
      "description": "Unknown Data (not interpreted)"
    },
    {
      "field": "ipv6.plen_exceeds_framing",
      "protocol_dependency": "ipv6",
      "description": "IPv6 payload length does not match expected framing length"
    },
    {
      "field": "ipv6.plen_zero",
      "protocol_dependency": "ipv6",
      "description": "IPv6 payload length equals 0 (maybe because of \"TCP segmentation offload\" (TSO))"
    },
    {
      "field": "ipv6.bogus_ipv6_version",
      "protocol_dependency": "ipv6",
      "description": "Bogus IP version"
    },
    {
      "field": "ipv6.invalid_header",
      "protocol_dependency": "ipv6",
      "description": "Invalid IPv6 header"
    },
    {
      "field": "ipv6.opt.header_mismatch",
      "protocol_dependency": "ipv6",
      "description": "Wrong options extension header for type"
    },
    {
      "field": "ipv6.opt.deprecated",
      "protocol_dependency": "ipv6",
      "description": "Option type is deprecated"
    },
    {
      "field": "ipv6.opt.mpl.ipv6_src_seed_id",
      "protocol_dependency": "ipv6",
      "description": "Seed ID is the IPv6 Source Address"
    },
    {
      "field": "ipv6.opt.ioam.trace.invalid_nodelen",
      "protocol_dependency": "ipv6",
      "description": "Invalid \"NodeLen\" value: cannot be 0"
    },
    {
      "field": "ipv6.opt.ioam.trace.invalid_remlen",
      "protocol_dependency": "ipv6",
      "description": "Invalid \"RemLen\" value"
    },
    {
      "field": "ipv6.opt.ioam.trace.invalid_type",
      "protocol_dependency": "ipv6",
      "description": "Mismatch between Trace Type and NodeLen"
    },
    {
      "field": "ipv6.embed_ipv4.u.nonzero",
      "protocol_dependency": "ipv6",
      "description": "IPv4-Embedded IPv6 address bit 64 to 71 must be zero"
    },
    {
      "field": "ipv6.addr.not_unspecified",
      "protocol_dependency": "ipv6",
      "description": "Unspecified address cannot appear as a destination"
    },
    {
      "field": "ipv6.hopopts",
      "protocol_dependency": "ipv6",
      "description": "IPv6 Hop-by-Hop Option"
    },
    {
      "field": "ipv6.hopopts.nxt",
      "protocol_dependency": "ipv6",
      "description": "Next Header"
    },
    {
      "field": "ipv6.hopopts.len",
      "protocol_dependency": "ipv6",
      "description": "Length"
    },
    {
      "field": "ipv6.hopopts.len_oct",
      "protocol_dependency": "ipv6",
      "description": "Length"
    },
    {
      "field": "ipv6.hopopts.not_first",
      "protocol_dependency": "ipv6",
      "description": "IPv6 Hop-by-Hop extension header must appear immediately after IPv6 header"
    },
    {
      "field": "ipv6.routing",
      "protocol_dependency": "ipv6",
      "description": "Routing Header for IPv6"
    },
    {
      "field": "ipv6.routing.nxt",
      "protocol_dependency": "ipv6",
      "description": "Next Header"
    },
    {
      "field": "ipv6.routing.len",
      "protocol_dependency": "ipv6",
      "description": "Length"
    },
    {
      "field": "ipv6.routing.len_oct",
      "protocol_dependency": "ipv6",
      "description": "Length"
    },
    {
      "field": "ipv6.routing.type",
      "protocol_dependency": "ipv6",
      "description": "Type"
    },
    {
      "field": "ipv6.routing.segleft",
      "protocol_dependency": "ipv6",
      "description": "Segments Left"
    },
    {
      "field": "ipv6.routing.unknown_data",
      "protocol_dependency": "ipv6",
      "description": "Type-Specific Data"
    },
    {
      "field": "ipv6.routing.src.reserved",
      "protocol_dependency": "ipv6",
      "description": "Reserved"
    },
    {
      "field": "ipv6.routing.src.addr",
      "protocol_dependency": "ipv6",
      "description": "Address"
    },
    {
      "field": "ipv6.routing.mipv6.reserved",
      "protocol_dependency": "ipv6",
      "description": "Reserved"
    },
    {
      "field": "ipv6.routing.mipv6.home_address",
      "protocol_dependency": "ipv6",
      "description": "Home Address"
    },
    {
      "field": "ipv6.routing.rpl.cmprI",
      "protocol_dependency": "ipv6",
      "description": "Compressed Internal Octets (CmprI)"
    },
    {
      "field": "ipv6.routing.rpl.cmprE",
      "protocol_dependency": "ipv6",
      "description": "Compressed Final Octets (CmprE)"
    },
    {
      "field": "ipv6.routing.rpl.pad",
      "protocol_dependency": "ipv6",
      "description": "Padding Bytes"
    },
    {
      "field": "ipv6.routing.rpl.reserved",
      "protocol_dependency": "ipv6",
      "description": "Reserved"
    },
    {
      "field": "ipv6.routing.rpl.addr_count",
      "protocol_dependency": "ipv6",
      "description": "Total Address Count"
    },
    {
      "field": "ipv6.routing.rpl.address",
      "protocol_dependency": "ipv6",
      "description": "Address"
    },
    {
      "field": "ipv6.routing.rpl.full_address",
      "protocol_dependency": "ipv6",
      "description": "Full Address"
    },
    {
      "field": "ipv6.routing.srh.last_entry",
      "protocol_dependency": "ipv6",
      "description": "Last Entry"
    },
    {
      "field": "ipv6.routing.srh.flags",
      "protocol_dependency": "ipv6",
      "description": "Flags"
    },
    {
      "field": "ipv6.routing.srh.tag",
      "protocol_dependency": "ipv6",
      "description": "Tag"
    },
    {
      "field": "ipv6.routing.srh.addr",
      "protocol_dependency": "ipv6",
      "description": "Address"
    },
    {
      "field": "ipv6.routing.crh16.current_sid",
      "protocol_dependency": "ipv6",
      "description": "Current SID"
    },
    {
      "field": "ipv6.routing.crh32.current_sid",
      "protocol_dependency": "ipv6",
      "description": "Current SID"
    },
    {
      "field": "ipv6.routing.crh16.sid",
      "protocol_dependency": "ipv6",
      "description": "Segment ID"
    },
    {
      "field": "ipv6.routing.crh32.sid",
      "protocol_dependency": "ipv6",
      "description": "Segment ID"
    },
    {
      "field": "ipv6.src_addr.not_multicast",
      "protocol_dependency": "ipv6",
      "description": "Source address must not be a multicast address"
    },
    {
      "field": "ipv6.dst_addr.not_multicast",
      "protocol_dependency": "ipv6",
      "description": "Destination address must not be a multicast address"
    },
    {
      "field": "ipv6.src_route_list.mult_inst_same_addr",
      "protocol_dependency": "ipv6",
      "description": "Multiple instances of the same address must not appear in the source route list"
    },
    {
      "field": "ipv6.src_route_list.src_addr",
      "protocol_dependency": "ipv6",
      "description": "Source address must not appear in the source route list"
    },
    {
      "field": "ipv6.src_route_list.dst_addr",
      "protocol_dependency": "ipv6",
      "description": "Destination address must not appear in the source route list"
    },
    {
      "field": "ipv6.src_route_list.multicast_addr",
      "protocol_dependency": "ipv6",
      "description": "Multicast addresses must not appear in the source route list"
    },
    {
      "field": "ipv6.routing.rpl.cmprI_cmprE_pad",
      "protocol_dependency": "ipv6",
      "description": "When cmprI equals 0 and cmprE equals 0, pad MUST equal 0 but instead was X"
    },
    {
      "field": "ipv6.routing.rpl.addr_count_ge0",
      "protocol_dependency": "ipv6",
      "description": "Calculated total address count must be greater than or equal to 0, instead was X"
    },
    {
      "field": "ipv6.routing.rpl.reserved_not0",
      "protocol_dependency": "ipv6",
      "description": "Reserved field must equal 0 but instead was X"
    },
    {
      "field": "ipv6.routing.invalid_length",
      "protocol_dependency": "ipv6",
      "description": "Invalid IPv6 Routing header length"
    },
    {
      "field": "ipv6.routing.invalid_segleft",
      "protocol_dependency": "ipv6",
      "description": "IPv6 Routing Header segments left field must not exceed address count"
    },
    {
      "field": "ipv6.routing.undecoded",
      "protocol_dependency": "ipv6",
      "description": "Undecoded IPv6 routing header field"
    },
    {
      "field": "ipv6.routing.deprecated",
      "protocol_dependency": "ipv6",
      "description": "Routing header type is deprecated"
    },
    {
      "field": "ipv6.routing.type.rt0",
      "protocol_dependency": "ipv6",
      "description": "IPv6 Routing Type - Source Route"
    },
    {
      "field": "ipv6.routing.type.mipv6",
      "protocol_dependency": "ipv6",
      "description": "IPv6 Routing Type - Type 2"
    },
    {
      "field": "ipv6.routing.type.mipv6",
      "protocol_dependency": "ipv6",
      "description": "IPv6 Routing Type - RPL Source Route"
    },
    {
      "field": "ipv6.routing.type.srh",
      "protocol_dependency": "ipv6",
      "description": "IPv6 Routing Types - Segment Routing"
    },
    {
      "field": "ipv6.routing.type.crh",
      "protocol_dependency": "ipv6",
      "description": "IPv6 Routing Types - Compact Routing"
    },
    {
      "field": "ipv6.fraghdr",
      "protocol_dependency": "ipv6",
      "description": "Fragment Header for IPv6"
    },
    {
      "field": "ipv6.fraghdr.nxt",
      "protocol_dependency": "ipv6",
      "description": "Next header"
    },
    {
      "field": "ipv6.fraghdr.reserved_octet",
      "protocol_dependency": "ipv6",
      "description": "Reserved octet"
    },
    {
      "field": "ipv6.fraghdr.offset",
      "protocol_dependency": "ipv6",
      "description": "Offset"
    },
    {
      "field": "ipv6.fraghdr.reserved_bits",
      "protocol_dependency": "ipv6",
      "description": "Reserved bits"
    },
    {
      "field": "ipv6.fraghdr.more",
      "protocol_dependency": "ipv6",
      "description": "More Fragments"
    },
    {
      "field": "ipv6.fraghdr.ident",
      "protocol_dependency": "ipv6",
      "description": "Identification"
    },
    {
      "field": "ipv6.dstopts",
      "protocol_dependency": "ipv6",
      "description": "Destination Options for IPv6"
    },
    {
      "field": "ipv6.dstopts.nxt",
      "protocol_dependency": "ipv6",
      "description": "Next Header"
    },
    {
      "field": "ipv6.dstopts.len",
      "protocol_dependency": "ipv6",
      "description": "Length"
    },
    {
      "field": "ipv6.dstopts.len_oct",
      "protocol_dependency": "ipv6",
      "description": "Length"
    },
    {
      "field": "tcp.srcport",
      "protocol_dependency": "tcp",
      "description": "Source Port"
    },
    {
      "field": "tcp.dstport",
      "protocol_dependency": "tcp",
      "description": "Destination Port"
    },
    {
      "field": "tcp.port",
      "protocol_dependency": "tcp",
      "description": "Source or Destination Port"
    },
    {
      "field": "tcp.stream",
      "protocol_dependency": "tcp",
      "description": "Stream index"
    },
    {
      "field": "tcp.completeness",
      "protocol_dependency": "tcp",
      "description": "Conversation completeness"
    },
    {
      "field": "tcp.completeness.syn",
      "protocol_dependency": "tcp",
      "description": "SYN"
    },
    {
      "field": "tcp.completeness.syn-ack",
      "protocol_dependency": "tcp",
      "description": "SYN-ACK"
    },
    {
      "field": "tcp.completeness.ack",
      "protocol_dependency": "tcp",
      "description": "ACK"
    },
    {
      "field": "tcp.completeness.data",
      "protocol_dependency": "tcp",
      "description": "Data"
    },
    {
      "field": "tcp.completeness.fin",
      "protocol_dependency": "tcp",
      "description": "FIN"
    },
    {
      "field": "tcp.completeness.rst",
      "protocol_dependency": "tcp",
      "description": "RST"
    },
    {
      "field": "tcp.completeness.str",
      "protocol_dependency": "tcp",
      "description": "Completeness Flags"
    },
    {
      "field": "tcp.seq",
      "protocol_dependency": "tcp",
      "description": "Sequence Number"
    },
    {
      "field": "tcp.seq_raw",
      "protocol_dependency": "tcp",
      "description": "Sequence Number (raw)"
    },
    {
      "field": "tcp.nxtseq",
      "protocol_dependency": "tcp",
      "description": "Next Sequence Number"
    },
    {
      "field": "tcp.ack",
      "protocol_dependency": "tcp",
      "description": "Acknowledgment Number"
    },
    {
      "field": "tcp.ack_raw",
      "protocol_dependency": "tcp",
      "description": "Acknowledgment number (raw)"
    },
    {
      "field": "tcp.hdr_len",
      "protocol_dependency": "tcp",
      "description": "Header Length"
    },
    {
      "field": "tcp.flags",
      "protocol_dependency": "tcp",
      "description": "Flags"
    },
    {
      "field": "tcp.flags.res",
      "protocol_dependency": "tcp",
      "description": "Reserved"
    },
    {
      "field": "tcp.flags.ae",
      "protocol_dependency": "tcp",
      "description": "Accurate ECN"
    },
    {
      "field": "tcp.flags.cwr",
      "protocol_dependency": "tcp",
      "description": "Congestion Window Reduced"
    },
    {
      "field": "tcp.flags.ece",
      "protocol_dependency": "tcp",
      "description": "ECN-Echo"
    },
    {
      "field": "tcp.flags.ace",
      "protocol_dependency": "tcp",
      "description": "ACE"
    },
    {
      "field": "tcp.flags.urg",
      "protocol_dependency": "tcp",
      "description": "Urgent"
    },
    {
      "field": "tcp.flags.ack",
      "protocol_dependency": "tcp",
      "description": "Acknowledgment"
    },
    {
      "field": "tcp.flags.push",
      "protocol_dependency": "tcp",
      "description": "Push"
    },
    {
      "field": "tcp.flags.reset",
      "protocol_dependency": "tcp",
      "description": "Reset"
    },
    {
      "field": "tcp.flags.syn",
      "protocol_dependency": "tcp",
      "description": "Syn"
    },
    {
      "field": "tcp.flags.fin",
      "protocol_dependency": "tcp",
      "description": "Fin"
    },
    {
      "field": "tcp.flags.str",
      "protocol_dependency": "tcp",
      "description": "TCP Flags"
    },
    {
      "field": "tcp.window_size_value",
      "protocol_dependency": "tcp",
      "description": "Window"
    },
    {
      "field": "tcp.window_size",
      "protocol_dependency": "tcp",
      "description": "Calculated window size"
    },
    {
      "field": "tcp.window_size_scalefactor",
      "protocol_dependency": "tcp",
      "description": "Window size scaling factor"
    },
    {
      "field": "tcp.checksum",
      "protocol_dependency": "tcp",
      "description": "Checksum"
    },
    {
      "field": "tcp.checksum.status",
      "protocol_dependency": "tcp",
      "description": "Checksum Status"
    },
    {
      "field": "tcp.checksum_calculated",
      "protocol_dependency": "tcp",
      "description": "Calculated Checksum"
    },
    {
      "field": "tcp.analysis",
      "protocol_dependency": "tcp",
      "description": "SEQ/ACK analysis"
    },
    {
      "field": "tcp.analysis.flags",
      "protocol_dependency": "tcp",
      "description": "TCP Analysis Flags"
    },
    {
      "field": "tcp.analysis.duplicate_ack",
      "protocol_dependency": "tcp",
      "description": "Duplicate ACK"
    },
    {
      "field": "tcp.analysis.duplicate_ack_num",
      "protocol_dependency": "tcp",
      "description": "Duplicate ACK #"
    },
    {
      "field": "tcp.analysis.duplicate_ack_frame",
      "protocol_dependency": "tcp",
      "description": "Duplicate to the ACK in frame"
    },
    {
      "field": "tcp.continuation_to",
      "protocol_dependency": "tcp",
      "description": "This is a continuation to the PDU in frame"
    },
    {
      "field": "tcp.len",
      "protocol_dependency": "tcp",
      "description": "TCP Segment Len"
    },
    {
      "field": "tcp.analysis.acks_frame",
      "protocol_dependency": "tcp",
      "description": "This is an ACK to the segment in frame"
    },
    {
      "field": "tcp.analysis.bytes_in_flight",
      "protocol_dependency": "tcp",
      "description": "Bytes in flight"
    },
    {
      "field": "tcp.analysis.push_bytes_sent",
      "protocol_dependency": "tcp",
      "description": "Bytes sent since last PSH flag"
    },
    {
      "field": "tcp.analysis.ack_rtt",
      "protocol_dependency": "tcp",
      "description": "The RTT to ACK the segment was"
    },
    {
      "field": "tcp.analysis.initial_rtt",
      "protocol_dependency": "tcp",
      "description": "iRTT"
    },
    {
      "field": "tcp.analysis.rto",
      "protocol_dependency": "tcp",
      "description": "The RTO for this segment was"
    },
    {
      "field": "tcp.analysis.rto_frame",
      "protocol_dependency": "tcp",
      "description": "RTO based on delta from frame"
    },
    {
      "field": "tcp.urgent_pointer",
      "protocol_dependency": "tcp",
      "description": "Urgent Pointer"
    },
    {
      "field": "tcp.segment.overlap",
      "protocol_dependency": "tcp",
      "description": "Segment overlap"
    },
    {
      "field": "tcp.segment.overlap.conflict",
      "protocol_dependency": "tcp",
      "description": "Conflicting data in segment overlap"
    },
    {
      "field": "tcp.segment.multipletails",
      "protocol_dependency": "tcp",
      "description": "Multiple tail segments found"
    },
    {
      "field": "tcp.segment.toolongfragment",
      "protocol_dependency": "tcp",
      "description": "Segment too long"
    },
    {
      "field": "tcp.segment.error",
      "protocol_dependency": "tcp",
      "description": "Reassembling error"
    },
    {
      "field": "tcp.segment.count",
      "protocol_dependency": "tcp",
      "description": "Segment count"
    },
    {
      "field": "tcp.segment",
      "protocol_dependency": "tcp",
      "description": "TCP Segment"
    },
    {
      "field": "tcp.segments",
      "protocol_dependency": "tcp",
      "description": "Reassembled TCP Segments"
    },
    {
      "field": "tcp.reassembled_in",
      "protocol_dependency": "tcp",
      "description": "Reassembled PDU in frame"
    },
    {
      "field": "tcp.reassembled.length",
      "protocol_dependency": "tcp",
      "description": "Reassembled TCP length"
    },
    {
      "field": "tcp.reassembled.data",
      "protocol_dependency": "tcp",
      "description": "Reassembled TCP Data"
    },
    {
      "field": "tcp.option_kind",
      "protocol_dependency": "tcp",
      "description": "Kind"
    },
    {
      "field": "tcp.option_len",
      "protocol_dependency": "tcp",
      "description": "Length"
    },
    {
      "field": "tcp.options",
      "protocol_dependency": "tcp",
      "description": "TCP Options"
    },
    {
      "field": "tcp.options.mss_val",
      "protocol_dependency": "tcp",
      "description": "MSS Value"
    },
    {
      "field": "tcp.options.wscale.shift",
      "protocol_dependency": "tcp",
      "description": "Shift count"
    },
    {
      "field": "tcp.options.wscale.multiplier",
      "protocol_dependency": "tcp",
      "description": "Multiplier"
    },
    {
      "field": "tcp.options.experimental.data",
      "protocol_dependency": "tcp",
      "description": "Data"
    },
    {
      "field": "tcp.options.experimental.exid",
      "protocol_dependency": "tcp",
      "description": "Experiment Identifier"
    },
    {
      "field": "tcp.options.unknown.payload",
      "protocol_dependency": "tcp",
      "description": "Payload"
    },
    {
      "field": "tcp.options.sack_le",
      "protocol_dependency": "tcp",
      "description": "TCP SACK Left Edge"
    },
    {
      "field": "tcp.options.sack_re",
      "protocol_dependency": "tcp",
      "description": "TCP SACK Right Edge"
    },
    {
      "field": "tcp.options.sack.count",
      "protocol_dependency": "tcp",
      "description": "TCP SACK Count"
    },
    {
      "field": "tcp.options.sack.dsack_le",
      "protocol_dependency": "tcp",
      "description": "TCP D-SACK Left Edge"
    },
    {
      "field": "tcp.options.sack.dsack_re",
      "protocol_dependency": "tcp",
      "description": "TCP D-SACK Right Edge"
    },
    {
      "field": "tcp.options.echo_value",
      "protocol_dependency": "tcp",
      "description": "TCP Echo Option"
    },
    {
      "field": "tcp.options.timestamp.tsval",
      "protocol_dependency": "tcp",
      "description": "Timestamp value"
    },
    {
      "field": "tcp.options.timestamp.tsecr",
      "protocol_dependency": "tcp",
      "description": "Timestamp echo reply"
    },
    {
      "field": "tcp.options.mptcp.subtype",
      "protocol_dependency": "tcp",
      "description": "Multipath TCP subtype"
    },
    {
      "field": "tcp.options.mptcp.version",
      "protocol_dependency": "tcp",
      "description": "Multipath TCP version"
    },
    {
      "field": "tcp.options.mptcp.reserved",
      "protocol_dependency": "tcp",
      "description": "Reserved"
    },
    {
      "field": "tcp.options.mptcp.flags",
      "protocol_dependency": "tcp",
      "description": "Multipath TCP flags"
    },
    {
      "field": "tcp.options.mptcp.backup.flag",
      "protocol_dependency": "tcp",
      "description": "Backup flag"
    },
    {
      "field": "tcp.options.mptcp.checksumreq.flags",
      "protocol_dependency": "tcp",
      "description": "Checksum required"
    },
    {
      "field": "tcp.options.mptcp.extensibility.flag",
      "protocol_dependency": "tcp",
      "description": "Extensibility"
    },
    {
      "field": "tcp.options.mptcp.nomoresubflows.flag",
      "protocol_dependency": "tcp",
      "description": "Do not attempt to establish new subflows to this address and port"
    },
    {
      "field": "tcp.options.mptcp.sha1.flag",
      "protocol_dependency": "tcp",
      "description": "Use HMAC-SHA1"
    },
    {
      "field": "tcp.options.mptcp.sha256.flag",
      "protocol_dependency": "tcp",
      "description": "Use HMAC-SHA256"
    },
    {
      "field": "tcp.options.mptcp.datafin.flag",
      "protocol_dependency": "tcp",
      "description": "DATA_FIN"
    },
    {
      "field": "tcp.options.mptcp.dseqn8.flag",
      "protocol_dependency": "tcp",
      "description": "Data Sequence Number is 8 octets"
    },
    {
      "field": "tcp.options.mptcp.dseqnpresent.flag",
      "protocol_dependency": "tcp",
      "description": "Data Sequence Number, Subflow Sequence Number, Data-level Length, Checksum present"
    },
    {
      "field": "tcp.options.mptcp.dataack8.flag",
      "protocol_dependency": "tcp",
      "description": "Data ACK is 8 octets"
    },
    {
      "field": "tcp.options.mptcp.dataackpresent.flag",
      "protocol_dependency": "tcp",
      "description": "Data ACK is present"
    },
    {
      "field": "tcp.options.mptcp.reserved.flag",
      "protocol_dependency": "tcp",
      "description": "Reserved"
    },
    {
      "field": "tcp.options.mptcp.flag_U.flag",
      "protocol_dependency": "tcp",
      "description": "Flag U"
    },
    {
      "field": "tcp.options.mptcp.flag_V.flag",
      "protocol_dependency": "tcp",
      "description": "Flag V"
    },
    {
      "field": "tcp.options.mptcp.flag_W.flag",
      "protocol_dependency": "tcp",
      "description": "Flag W"
    },
    {
      "field": "tcp.options.mptcp.flag_T.flag",
      "protocol_dependency": "tcp",
      "description": "Transient"
    },
    {
      "field": "tcp.options.mptcp.rst_reason",
      "protocol_dependency": "tcp",
      "description": "TCPRST Reason"
    },
    {
      "field": "tcp.options.mptcp.addrid",
      "protocol_dependency": "tcp",
      "description": "Address ID"
    },
    {
      "field": "tcp.options.mptcp.sendkey",
      "protocol_dependency": "tcp",
      "description": "Sender's Key"
    },
    {
      "field": "tcp.options.mptcp.recvkey",
      "protocol_dependency": "tcp",
      "description": "Receiver's Key"
    },
    {
      "field": "tcp.options.mptcp.recvtok",
      "protocol_dependency": "tcp",
      "description": "Receiver's Token"
    },
    {
      "field": "tcp.options.mptcp.sendrand",
      "protocol_dependency": "tcp",
      "description": "Sender's Random Number"
    },
    {
      "field": "tcp.options.mptcp.sendtrunchmac",
      "protocol_dependency": "tcp",
      "description": "Sender's Truncated HMAC"
    },
    {
      "field": "tcp.options.mptcp.sendhmac",
      "protocol_dependency": "tcp",
      "description": "Sender's HMAC"
    },
    {
      "field": "tcp.options.mptcp.addaddrtrunchmac",
      "protocol_dependency": "tcp",
      "description": "Truncated HMAC"
    },
    {
      "field": "tcp.options.mptcp.rawdataack",
      "protocol_dependency": "tcp",
      "description": "Original MPTCP Data ACK"
    },
    {
      "field": "tcp.options.mptcp.rawdataseqno",
      "protocol_dependency": "tcp",
      "description": "Data Sequence Number"
    },
    {
      "field": "tcp.options.mptcp.subflowseqno",
      "protocol_dependency": "tcp",
      "description": "Subflow Sequence Number"
    },
    {
      "field": "tcp.options.mptcp.datalvllen",
      "protocol_dependency": "tcp",
      "description": "Data-level Length"
    },
    {
      "field": "tcp.options.mptcp.checksum",
      "protocol_dependency": "tcp",
      "description": "Checksum"
    },
    {
      "field": "tcp.options.mptcp.ipver",
      "protocol_dependency": "tcp",
      "description": "IP version"
    },
    {
      "field": "tcp.options.mptcp.echo",
      "protocol_dependency": "tcp",
      "description": "Echo"
    },
    {
      "field": "tcp.options.mptcp.ipv4",
      "protocol_dependency": "tcp",
      "description": "Advertised IPv4 Address"
    },
    {
      "field": "tcp.options.mptcp.ipv6",
      "protocol_dependency": "tcp",
      "description": "Advertised IPv6 Address"
    },
    {
      "field": "tcp.options.mptcp.port",
      "protocol_dependency": "tcp",
      "description": "Advertised port"
    },
    {
      "field": "tcp.options.cc_value",
      "protocol_dependency": "tcp",
      "description": "TCP CC Option"
    },
    {
      "field": "tcp.options.md5.digest",
      "protocol_dependency": "tcp",
      "description": "MD5 digest"
    },
    {
      "field": "tcp.options.ao.keyid",
      "protocol_dependency": "tcp",
      "description": "AO KeyID"
    },
    {
      "field": "tcp.options.ao.rnextkeyid",
      "protocol_dependency": "tcp",
      "description": "AO RNextKeyID"
    },
    {
      "field": "tcp.options.ao.mac",
      "protocol_dependency": "tcp",
      "description": "AO MAC"
    },
    {
      "field": "tcp.options.qs.rate",
      "protocol_dependency": "tcp",
      "description": "QS Rate"
    },
    {
      "field": "tcp.options.qs.ttl_diff",
      "protocol_dependency": "tcp",
      "description": "QS Rate"
    },
    {
      "field": "tcp.options.tarr.rate",
      "protocol_dependency": "tcp",
      "description": "TARR Rate"
    },
    {
      "field": "tcp.options.tar.reserved",
      "protocol_dependency": "tcp",
      "description": "TARR Reserved"
    },
    {
      "field": "tcp.options.acc_ecn.ee0b",
      "protocol_dependency": "tcp",
      "description": "Accurate ECN Echo ECT(0) Byte Counter"
    },
    {
      "field": "tcp.options.acc_ecn.eceb",
      "protocol_dependency": "tcp",
      "description": "Accurate ECN Echo CE Byte Counter"
    },
    {
      "field": "tcp.options.acc_ecn.ee1b",
      "protocol_dependency": "tcp",
      "description": "Accurate ECN Echo ECT(1) Byte Counter"
    },
    {
      "field": "tcp.options.scps.vector",
      "protocol_dependency": "tcp",
      "description": "TCP SCPS Capabilities Vector"
    },
    {
      "field": "tcp.options.scps.binding.id",
      "protocol_dependency": "tcp",
      "description": "Binding Space (Community) ID"
    },
    {
      "field": "tcp.options.scps.binding.len",
      "protocol_dependency": "tcp",
      "description": "Extended Capability Length"
    },
    {
      "field": "tcp.options.snack.offset",
      "protocol_dependency": "tcp",
      "description": "TCP SNACK Offset"
    },
    {
      "field": "tcp.options.snack.size",
      "protocol_dependency": "tcp",
      "description": "TCP SNACK Size"
    },
    {
      "field": "tcp.options.snack.le",
      "protocol_dependency": "tcp",
      "description": "TCP SNACK Left Edge"
    },
    {
      "field": "tcp.options.snack.re",
      "protocol_dependency": "tcp",
      "description": "TCP SNACK Right Edge"
    },
    {
      "field": "tcp.options.scpsflags.bets",
      "protocol_dependency": "tcp",
      "description": "Partial Reliability Capable (BETS)"
    },
    {
      "field": "tcp.options.scpsflags.snack1",
      "protocol_dependency": "tcp",
      "description": "Short Form SNACK Capable (SNACK1)"
    },
    {
      "field": "tcp.options.scpsflags.snack2",
      "protocol_dependency": "tcp",
      "description": "Long Form SNACK Capable (SNACK2)"
    },
    {
      "field": "tcp.options.scpsflags.compress",
      "protocol_dependency": "tcp",
      "description": "Lossless Header Compression (COMP)"
    },
    {
      "field": "tcp.options.scpsflags.nlts",
      "protocol_dependency": "tcp",
      "description": "Network Layer Timestamp (NLTS)"
    },
    {
      "field": "tcp.options.scpsflags.reserved",
      "protocol_dependency": "tcp",
      "description": "Reserved"
    },
    {
      "field": "tcp.options.scps.binding",
      "protocol_dependency": "tcp",
      "description": "Connection ID"
    },
    {
      "field": "tcp.options.user_to_granularity",
      "protocol_dependency": "tcp",
      "description": "Granularity"
    },
    {
      "field": "tcp.options.user_to_val",
      "protocol_dependency": "tcp",
      "description": "User Timeout"
    },
    {
      "field": "tcp.options.rvbd.probe.type1",
      "protocol_dependency": "tcp",
      "description": "Type"
    },
    {
      "field": "tcp.options.rvbd.probe.type2",
      "protocol_dependency": "tcp",
      "description": "Type"
    },
    {
      "field": "tcp.options.rvbd.probe.version",
      "protocol_dependency": "tcp",
      "description": "Version"
    },
    {
      "field": "tcp.options.rvbd.probe.version_raw",
      "protocol_dependency": "tcp",
      "description": "Version"
    },
    {
      "field": "tcp.options.rvbd.probe.prober",
      "protocol_dependency": "tcp",
      "description": "CSH IP"
    },
    {
      "field": "tcp.options.rvbd.probe.proxy.ip",
      "protocol_dependency": "tcp",
      "description": "SSH IP"
    },
    {
      "field": "tcp.options.rvbd.probe.proxy.port",
      "protocol_dependency": "tcp",
      "description": "SSH Port"
    },
    {
      "field": "tcp.options.rvbd.probe.appli_ver",
      "protocol_dependency": "tcp",
      "description": "Application Version"
    },
    {
      "field": "tcp.options.rvbd.probe.client.ip",
      "protocol_dependency": "tcp",
      "description": "Client IP"
    },
    {
      "field": "tcp.options.rvbd.probe.storeid",
      "protocol_dependency": "tcp",
      "description": "CFE Store ID"
    },
    {
      "field": "tcp.options.rvbd.probe.flags",
      "protocol_dependency": "tcp",
      "description": "Probe Flags"
    },
    {
      "field": "tcp.options.rvbd.probe.flags.notcfe",
      "protocol_dependency": "tcp",
      "description": "Not CFE"
    },
    {
      "field": "tcp.options.rvbd.probe.flags.last",
      "protocol_dependency": "tcp",
      "description": "Last Notify"
    },
    {
      "field": "tcp.options.rvbd.probe.flags.probe",
      "protocol_dependency": "tcp",
      "description": "Disable Probe Cache on CSH"
    },
    {
      "field": "tcp.options.rvbd.probe.flags.ssl",
      "protocol_dependency": "tcp",
      "description": "SSL Enabled"
    },
    {
      "field": "tcp.options.rvbd.probe.flags.server",
      "protocol_dependency": "tcp",
      "description": "SSH outer to server established"
    },
    {
      "field": "tcp.options.rvbd.trpy.flags",
      "protocol_dependency": "tcp",
      "description": "Transparency Options"
    },
    {
      "field": "tcp.options.rvbd.trpy.flags.fw_rst_probe",
      "protocol_dependency": "tcp",
      "description": "Enable FW traversal feature"
    },
    {
      "field": "tcp.options.rvbd.trpy.flags.fw_rst_inner",
      "protocol_dependency": "tcp",
      "description": "Enable Inner FW feature on All FWs"
    },
    {
      "field": "tcp.options.rvbd.trpy.flags.fw_rst",
      "protocol_dependency": "tcp",
      "description": "Enable Transparency FW feature on All FWs"
    },
    {
      "field": "tcp.options.rvbd.trpy.flags.chksum",
      "protocol_dependency": "tcp",
      "description": "Reserved"
    },
    {
      "field": "tcp.options.rvbd.trpy.flags.oob",
      "protocol_dependency": "tcp",
      "description": "Out of band connection"
    },
    {
      "field": "tcp.options.rvbd.trpy.flags.mode",
      "protocol_dependency": "tcp",
      "description": "Transparency Mode"
    },
    {
      "field": "tcp.options.rvbd.trpy.src.ip",
      "protocol_dependency": "tcp",
      "description": "Src SH IP Addr"
    },
    {
      "field": "tcp.options.rvbd.trpy.dst.ip",
      "protocol_dependency": "tcp",
      "description": "Dst SH IP Addr"
    },
    {
      "field": "tcp.options.rvbd.trpy.src.port",
      "protocol_dependency": "tcp",
      "description": "Src SH Inner Port"
    },
    {
      "field": "tcp.options.rvbd.trpy.dst.port",
      "protocol_dependency": "tcp",
      "description": "Dst SH Inner Port"
    },
    {
      "field": "tcp.options.rvbd.trpy.client.port",
      "protocol_dependency": "tcp",
      "description": "Out of band connection Client Port"
    },
    {
      "field": "tcp.options.tfo.request",
      "protocol_dependency": "tcp",
      "description": "Fast Open Cookie Request"
    },
    {
      "field": "tcp.options.tfo.cookie",
      "protocol_dependency": "tcp",
      "description": "Fast Open Cookie"
    },
    {
      "field": "tcp.pdu.time",
      "protocol_dependency": "tcp",
      "description": "Time until the last segment of this PDU"
    },
    {
      "field": "tcp.pdu.size",
      "protocol_dependency": "tcp",
      "description": "PDU Size"
    },
    {
      "field": "tcp.pdu.last_frame",
      "protocol_dependency": "tcp",
      "description": "Last frame of this PDU"
    },
    {
      "field": "tcp.time_relative",
      "protocol_dependency": "tcp",
      "description": "Time since first frame in this TCP stream"
    },
    {
      "field": "tcp.time_delta",
      "protocol_dependency": "tcp",
      "description": "Time since previous frame in this TCP stream"
    },
    {
      "field": "tcp.proc.srcuid",
      "protocol_dependency": "tcp",
      "description": "Source process user ID"
    },
    {
      "field": "tcp.proc.srcpid",
      "protocol_dependency": "tcp",
      "description": "Source process ID"
    },
    {
      "field": "tcp.proc.srcuname",
      "protocol_dependency": "tcp",
      "description": "Source process user name"
    },
    {
      "field": "tcp.proc.srccmd",
      "protocol_dependency": "tcp",
      "description": "Source process name"
    },
    {
      "field": "tcp.proc.dstuid",
      "protocol_dependency": "tcp",
      "description": "Destination process user ID"
    },
    {
      "field": "tcp.proc.dstpid",
      "protocol_dependency": "tcp",
      "description": "Destination process ID"
    },
    {
      "field": "tcp.proc.dstuname",
      "protocol_dependency": "tcp",
      "description": "Destination process user name"
    },
    {
      "field": "tcp.proc.dstcmd",
      "protocol_dependency": "tcp",
      "description": "Destination process name"
    },
    {
      "field": "tcp.segment_data",
      "protocol_dependency": "tcp",
      "description": "TCP segment data"
    },
    {
      "field": "tcp.payload",
      "protocol_dependency": "tcp",
      "description": "TCP payload"
    },
    {
      "field": "tcp.options.scps.binding.data",
      "protocol_dependency": "tcp",
      "description": "Binding Space Data"
    },
    {
      "field": "tcp.options.rvbd.probe.reserved",
      "protocol_dependency": "tcp",
      "description": "Reserved"
    },
    {
      "field": "tcp.fin_retransmission",
      "protocol_dependency": "tcp",
      "description": "Retransmission of FIN from frame"
    },
    {
      "field": "tcp.reset_cause",
      "protocol_dependency": "tcp",
      "description": "Reset cause"
    },
    {
      "field": "tcp.syncookie.time",
      "protocol_dependency": "tcp",
      "description": "SYN Cookie Time"
    },
    {
      "field": "tcp.syncookie.mss",
      "protocol_dependency": "tcp",
      "description": "SYN Cookie Maximum Segment Size"
    },
    {
      "field": "tcp.syncookie.hash",
      "protocol_dependency": "tcp",
      "description": "SYN Cookie hash"
    },
    {
      "field": "tcp.options.timestamp.tsval.syncookie.timestamp",
      "protocol_dependency": "tcp",
      "description": "SYN Cookie Timestamp"
    },
    {
      "field": "tcp.options.timestamp.tsval.syncookie.ecn",
      "protocol_dependency": "tcp",
      "description": "SYN Cookie ECN"
    },
    {
      "field": "tcp.options.timestamp.tsval.syncookie.sack",
      "protocol_dependency": "tcp",
      "description": "SYN Cookie SACK"
    },
    {
      "field": "tcp.options.timestamp.tsval.syncookie.wscale",
      "protocol_dependency": "tcp",
      "description": "SYN Cookie WScale"
    },
    {
      "field": "tcp.option.len.invalid",
      "protocol_dependency": "tcp",
      "description": "Invalid length for option"
    },
    {
      "field": "tcp.analysis.retransmission",
      "protocol_dependency": "tcp",
      "description": "This frame is a (suspected) retransmission"
    },
    {
      "field": "tcp.analysis.fast_retransmission",
      "protocol_dependency": "tcp",
      "description": "This frame is a (suspected) fast retransmission"
    },
    {
      "field": "tcp.analysis.spurious_retransmission",
      "protocol_dependency": "tcp",
      "description": "This frame is a (suspected) spurious retransmission"
    },
    {
      "field": "tcp.analysis.out_of_order",
      "protocol_dependency": "tcp",
      "description": "This frame is a (suspected) out-of-order segment"
    },
    {
      "field": "tcp.analysis.reused_ports",
      "protocol_dependency": "tcp",
      "description": "A new tcp session is started with the same ports as an earlier session in this trace"
    },
    {
      "field": "tcp.analysis.lost_segment",
      "protocol_dependency": "tcp",
      "description": "Previous segment(s) not captured (common at capture start)"
    },
    {
      "field": "tcp.analysis.ack_lost_segment",
      "protocol_dependency": "tcp",
      "description": "ACKed segment that wasn't captured (common at capture start)"
    },
    {
      "field": "tcp.analysis.window_update",
      "protocol_dependency": "tcp",
      "description": "TCP window update"
    },
    {
      "field": "tcp.analysis.window_full",
      "protocol_dependency": "tcp",
      "description": "TCP window specified by the receiver is now completely full"
    },
    {
      "field": "tcp.analysis.keep_alive",
      "protocol_dependency": "tcp",
      "description": "TCP keep-alive segment"
    },
    {
      "field": "tcp.analysis.keep_alive_ack",
      "protocol_dependency": "tcp",
      "description": "ACK to a TCP keep-alive segment"
    },
    {
      "field": "tcp.analysis.zero_window_probe",
      "protocol_dependency": "tcp",
      "description": "TCP Zero Window Probe"
    },
    {
      "field": "tcp.analysis.zero_window",
      "protocol_dependency": "tcp",
      "description": "TCP Zero Window segment"
    },
    {
      "field": "tcp.analysis.zero_window_probe_ack",
      "protocol_dependency": "tcp",
      "description": "ACK to a TCP Zero Window Probe"
    },
    {
      "field": "tcp.analysis.tfo_syn",
      "protocol_dependency": "tcp",
      "description": "TCP SYN with TFO Cookie"
    },
    {
      "field": "tcp.analysis.tfo_ack",
      "protocol_dependency": "tcp",
      "description": "TCP SYN-ACK accepting TFO data"
    },
    {
      "field": "tcp.analysis.tfo_ignored",
      "protocol_dependency": "tcp",
      "description": "TCP SYN-ACK ignoring TFO data"
    },
    {
      "field": "tcp.connection.fin_active",
      "protocol_dependency": "tcp",
      "description": "This frame initiates the connection closing"
    },
    {
      "field": "tcp.connection.fin_passive",
      "protocol_dependency": "tcp",
      "description": "This frame undergoes the connection closing"
    },
    {
      "field": "tcp.options.sack.dsack",
      "protocol_dependency": "tcp",
      "description": "D-SACK Sequence"
    },
    {
      "field": "tcp.options.snack.sequence",
      "protocol_dependency": "tcp",
      "description": "SNACK Sequence"
    },
    {
      "field": "tcp.options.wscale.shift.invalid",
      "protocol_dependency": "tcp",
      "description": "Window scale shift exceeds 14"
    },
    {
      "field": "tcp.options.mss.absent",
      "protocol_dependency": "tcp",
      "description": "The SYN packet does not contain a MSS option"
    },
    {
      "field": "tcp.options.mss.present",
      "protocol_dependency": "tcp",
      "description": "The non-SYN packet does contain a MSS option"
    },
    {
      "field": "tcp.options.sack_perm.absent",
      "protocol_dependency": "tcp",
      "description": "The SYN packet does not contain a SACK PERM option"
    },
    {
      "field": "tcp.options.sack_perm.present",
      "protocol_dependency": "tcp",
      "description": "The non-SYN packet does contain a SACK PERM option"
    },
    {
      "field": "tcp.short_segment",
      "protocol_dependency": "tcp",
      "description": "Short segment"
    },
    {
      "field": "tcp.ack.nonzero",
      "protocol_dependency": "tcp",
      "description": "The acknowledgment number field is nonzero while the ACK flag is not set"
    },
    {
      "field": "tcp.connection.synack",
      "protocol_dependency": "tcp",
      "description": "Connection establish acknowledge (SYN+ACK)"
    },
    {
      "field": "tcp.connection.syn",
      "protocol_dependency": "tcp",
      "description": "Connection establish request (SYN)"
    },
    {
      "field": "tcp.connection.fin",
      "protocol_dependency": "tcp",
      "description": "Connection finish (FIN)"
    },
    {
      "field": "tcp.connection.rst",
      "protocol_dependency": "tcp",
      "description": "Connection reset (RST)"
    },
    {
      "field": "tcp.checksum.ffff",
      "protocol_dependency": "tcp",
      "description": "TCP Checksum 0xffff instead of 0x0000 (see RFC 1624)"
    },
    {
      "field": "tcp.checksum.partial",
      "protocol_dependency": "tcp",
      "description": "Partial (pseudo header) checksum (likely caused by \"TCP checksum offload\")"
    },
    {
      "field": "tcp.checksum_bad.expert",
      "protocol_dependency": "tcp",
      "description": "Bad checksum"
    },
    {
      "field": "tcp.urgent_pointer.non_zero",
      "protocol_dependency": "tcp",
      "description": "The urgent pointer field is nonzero while the URG flag is not set"
    },
    {
      "field": "tcp.suboption_malformed",
      "protocol_dependency": "tcp",
      "description": "suboption would go past end of option"
    },
    {
      "field": "tcp.nop",
      "protocol_dependency": "tcp",
      "description": "4 NOP in a row - a router may have removed some options"
    },
    {
      "field": "tcp.non_zero_bytes_after_eol",
      "protocol_dependency": "tcp",
      "description": "Non zero bytes in option space after EOL option"
    },
    {
      "field": "tcp.bogus_header_length",
      "protocol_dependency": "tcp",
      "description": "Bogus TCP Header length"
    },
    {
      "field": "tcp.options.nop",
      "protocol_dependency": "tcp",
      "description": "TCP Option - No-Operation (NOP)"
    },
    {
      "field": "tcp.options.eol",
      "protocol_dependency": "tcp",
      "description": "TCP Option - End of Option List (EOL)"
    },
    {
      "field": "tcp.options.timestamp",
      "protocol_dependency": "tcp",
      "description": "TCP Option - Timestamps"
    },
    {
      "field": "tcp.options.mss",
      "protocol_dependency": "tcp",
      "description": "TCP Option - Maximum segment size"
    },
    {
      "field": "tcp.options.wscale",
      "protocol_dependency": "tcp",
      "description": "TCP Option - Window scale"
    },
    {
      "field": "tcp.options.sack_perm",
      "protocol_dependency": "tcp",
      "description": "TCP Option - SACK permitted"
    },
    {
      "field": "tcp.options.sack",
      "protocol_dependency": "tcp",
      "description": "TCP Option - SACK"
    },
    {
      "field": "tcp.options.echo",
      "protocol_dependency": "tcp",
      "description": "TCP Option - Echo"
    },
    {
      "field": "tcp.options.echoreply",
      "protocol_dependency": "tcp",
      "description": "TCP Option - Echo reply"
    },
    {
      "field": "tcp.options.cc",
      "protocol_dependency": "tcp",
      "description": "TCP Option - CC"
    },
    {
      "field": "tcp.options.ccnew",
      "protocol_dependency": "tcp",
      "description": "TCP Option - CC.NEW"
    },
    {
      "field": "tcp.options.ccecho",
      "protocol_dependency": "tcp",
      "description": "TCP Option - CC.ECHO"
    },
    {
      "field": "tcp.options.ao",
      "protocol_dependency": "tcp",
      "description": "TCP Option - TCP AO"
    },
    {
      "field": "tcp.options.md5",
      "protocol_dependency": "tcp",
      "description": "TCP Option - TCP MD5 signature"
    },
    {
      "field": "tcp.options.scps",
      "protocol_dependency": "tcp",
      "description": "TCP Option - SCPS capabilities"
    },
    {
      "field": "tcp.options.snack",
      "protocol_dependency": "tcp",
      "description": "TCP Option - Selective Negative Acknowledgment"
    },
    {
      "field": "tcp.options.scpsrec",
      "protocol_dependency": "tcp",
      "description": "TCP Option - SCPS record boundary"
    },
    {
      "field": "tcp.options.scpscor",
      "protocol_dependency": "tcp",
      "description": "TCP Option - SCPS corruption experienced"
    },
    {
      "field": "tcp.options.qs",
      "protocol_dependency": "tcp",
      "description": "TCP Option - Quick-Start"
    },
    {
      "field": "tcp.options.user_to",
      "protocol_dependency": "tcp",
      "description": "TCP Option - User Timeout"
    },
    {
      "field": "tcp.options.tfo",
      "protocol_dependency": "tcp",
      "description": "TCP Option - TCP Fast Open"
    },
    {
      "field": "tcp.options.acc_ecn",
      "protocol_dependency": "tcp",
      "description": "TCP Option - Accurate ECN"
    },
    {
      "field": "tcp.options.rvbd.probe",
      "protocol_dependency": "tcp",
      "description": "TCP Option - Riverbed Probe"
    },
    {
      "field": "tcp.options.rvbd.trpy",
      "protocol_dependency": "tcp",
      "description": "TCP Option - Riverbed Transparency"
    },
    {
      "field": "tcp.options.experimental",
      "protocol_dependency": "tcp",
      "description": "TCP Option - Experimental"
    },
    {
      "field": "tcp.options.unknown",
      "protocol_dependency": "tcp",
      "description": "TCP Option - Unknown"
    },
    {
      "field": "udp.srcport",
      "protocol_dependency": "udp",
      "description": "Source Port"
    },
    {
      "field": "udp.dstport",
      "protocol_dependency": "udp",
      "description": "Destination Port"
    },
    {
      "field": "udp.port",
      "protocol_dependency": "udp",
      "description": "Source or Destination Port"
    },
    {
      "field": "udp.stream",
      "protocol_dependency": "udp",
      "description": "Stream index"
    },
    {
      "field": "udp.length",
      "protocol_dependency": "udp",
      "description": "Length"
    },
    {
      "field": "udp.checksum",
      "protocol_dependency": "udp",
      "description": "Checksum"
    },
    {
      "field": "udp.checksum_calculated",
      "protocol_dependency": "udp",
      "description": "Calculated Checksum"
    },
    {
      "field": "udp.checksum.status",
      "protocol_dependency": "udp",
      "description": "Checksum Status"
    },
    {
      "field": "udp.proc.srcuid",
      "protocol_dependency": "udp",
      "description": "Source process user ID"
    },
    {
      "field": "udp.proc.srcpid",
      "protocol_dependency": "udp",
      "description": "Source process ID"
    },
    {
      "field": "udp.proc.srcuname",
      "protocol_dependency": "udp",
      "description": "Source process user name"
    },
    {
      "field": "udp.proc.srccmd",
      "protocol_dependency": "udp",
      "description": "Source process name"
    },
    {
      "field": "udp.proc.dstuid",
      "protocol_dependency": "udp",
      "description": "Destination process user ID"
    },
    {
      "field": "udp.proc.dstpid",
      "protocol_dependency": "udp",
      "description": "Destination process ID"
    },
    {
      "field": "udp.proc.dstuname",
      "protocol_dependency": "udp",
      "description": "Destination process user name"
    },
    {
      "field": "udp.proc.dstcmd",
      "protocol_dependency": "udp",
      "description": "Destination process name"
    },
    {
      "field": "udp.pdu.size",
      "protocol_dependency": "udp",
      "description": "PDU Size"
    },
    {
      "field": "udp.time_relative",
      "protocol_dependency": "udp",
      "description": "Time since first frame"
    },
    {
      "field": "udp.time_delta",
      "protocol_dependency": "udp",
      "description": "Time since previous frame"
    },
    {
      "field": "udp.payload",
      "protocol_dependency": "udp",
      "description": "Payload"
    },
    {
      "field": "udp.checksum_coverage",
      "protocol_dependency": "udp",
      "description": "Checksum coverage"
    },
    {
      "field": "udp.possible_traceroute",
      "protocol_dependency": "udp",
      "description": "Possible traceroute"
    },
    {
      "field": "udp.length.bad",
      "protocol_dependency": "udp",
      "description": "Bad length value"
    },
    {
      "field": "udp.checksum.zero",
      "protocol_dependency": "udp",
      "description": "Illegal checksum value (0)"
    },
    {
      "field": "udp.checksum.partial",
      "protocol_dependency": "udp",
      "description": "Partial (pseudo header) checksum (likely caused by \"UDP checksum offload\")"
    },
    {
      "field": "udp.checksum.bad",
      "protocol_dependency": "udp",
      "description": "Bad checksum"
    },
    {
      "field": "udp.length.bad_zero",
      "protocol_dependency": "udp",
      "description": "Length is zero but payload < 65536"
    },
    {
      "field": "mqtt.len",
      "protocol_dependency": "mqtt",
      "description": "Msg Len"
    },
    {
      "field": "mqtt.hdrflags",
      "protocol_dependency": "mqtt",
      "description": "Header Flags"
    },
    {
      "field": "mqtt.msgtype",
      "protocol_dependency": "mqtt",
      "description": "Message Type"
    },
    {
      "field": "mqtt.hdr_reserved",
      "protocol_dependency": "mqtt",
      "description": "Reserved"
    },
    {
      "field": "mqtt.retain_reserved",
      "protocol_dependency": "mqtt",
      "description": "Reserved"
    },
    {
      "field": "mqtt.dupflag",
      "protocol_dependency": "mqtt",
      "description": "DUP Flag"
    },
    {
      "field": "mqtt.qos",
      "protocol_dependency": "mqtt",
      "description": "QoS Level"
    },
    {
      "field": "mqtt.retain",
      "protocol_dependency": "mqtt",
      "description": "Retain"
    },
    {
      "field": "mqtt.conack.flags.reserved",
      "protocol_dependency": "mqtt",
      "description": "Reserved"
    },
    {
      "field": "mqtt.conack.flags",
      "protocol_dependency": "mqtt",
      "description": "Acknowledge Flags"
    },
    {
      "field": "mqtt.conack.flags.sp",
      "protocol_dependency": "mqtt",
      "description": "Session Present"
    },
    {
      "field": "mqtt.conack.val",
      "protocol_dependency": "mqtt",
      "description": "Return Code"
    },
    {
      "field": "mqtt.msgid",
      "protocol_dependency": "mqtt",
      "description": "Message Identifier"
    },
    {
      "field": "mqtt.sub.qos",
      "protocol_dependency": "mqtt",
      "description": "Requested QoS"
    },
    {
      "field": "mqtt.suback.qos",
      "protocol_dependency": "mqtt",
      "description": "Granted QoS"
    },
    {
      "field": "mqtt.topic_len",
      "protocol_dependency": "mqtt",
      "description": "Topic Length"
    },
    {
      "field": "mqtt.topic",
      "protocol_dependency": "mqtt",
      "description": "Topic"
    },
    {
      "field": "mqtt.willtopic_len",
      "protocol_dependency": "mqtt",
      "description": "Will Topic Length"
    },
    {
      "field": "mqtt.willtopic",
      "protocol_dependency": "mqtt",
      "description": "Will Topic"
    },
    {
      "field": "mqtt.willmsg",
      "protocol_dependency": "mqtt",
      "description": "Will Message"
    },
    {
      "field": "mqtt.willmsg_text",
      "protocol_dependency": "mqtt",
      "description": "Will Message"
    },
    {
      "field": "mqtt.willmsg_len",
      "protocol_dependency": "mqtt",
      "description": "Will Message Length"
    },
    {
      "field": "mqtt.username_len",
      "protocol_dependency": "mqtt",
      "description": "User Name Length"
    },
    {
      "field": "mqtt.username",
      "protocol_dependency": "mqtt",
      "description": "User Name"
    },
    {
      "field": "mqtt.passwd_len",
      "protocol_dependency": "mqtt",
      "description": "Password Length"
    },
    {
      "field": "mqtt.passwd",
      "protocol_dependency": "mqtt",
      "description": "Password"
    },
    {
      "field": "mqtt.msg",
      "protocol_dependency": "mqtt",
      "description": "Message"
    },
    {
      "field": "mqtt.msg_text",
      "protocol_dependency": "mqtt",
      "description": "Message"
    },
    {
      "field": "mqtt.msg_decoded_as",
      "protocol_dependency": "mqtt",
      "description": "Message decoded as"
    },
    {
      "field": "mqtt.proto_len",
      "protocol_dependency": "mqtt",
      "description": "Protocol Name Length"
    },
    {
      "field": "mqtt.protoname",
      "protocol_dependency": "mqtt",
      "description": "Protocol Name"
    },
    {
      "field": "mqtt.clientid_len",
      "protocol_dependency": "mqtt",
      "description": "Client ID Length"
    },
    {
      "field": "mqtt.clientid",
      "protocol_dependency": "mqtt",
      "description": "Client ID"
    },
    {
      "field": "mqtt.ver",
      "protocol_dependency": "mqtt",
      "description": "Version"
    },
    {
      "field": "mqtt.conflags",
      "protocol_dependency": "mqtt",
      "description": "Connect Flags"
    },
    {
      "field": "mqtt.conflag.uname",
      "protocol_dependency": "mqtt",
      "description": "User Name Flag"
    },
    {
      "field": "mqtt.conflag.passwd",
      "protocol_dependency": "mqtt",
      "description": "Password Flag"
    },
    {
      "field": "mqtt.conflag.retain",
      "protocol_dependency": "mqtt",
      "description": "Will Retain"
    },
    {
      "field": "mqtt.conflag.qos",
      "protocol_dependency": "mqtt",
      "description": "QoS Level"
    },
    {
      "field": "mqtt.conflag.willflag",
      "protocol_dependency": "mqtt",
      "description": "Will Flag"
    },
    {
      "field": "mqtt.conflag.cleansess",
      "protocol_dependency": "mqtt",
      "description": "Clean Session Flag"
    },
    {
      "field": "mqtt.conflag.reserved",
      "protocol_dependency": "mqtt",
      "description": "(Reserved)"
    },
    {
      "field": "mqtt.kalive",
      "protocol_dependency": "mqtt",
      "description": "Keep Alive"
    },
    {
      "field": "mqtt.subscription_options",
      "protocol_dependency": "mqtt",
      "description": "Subscription Options"
    },
    {
      "field": "mqtt.subscription_options_qos",
      "protocol_dependency": "mqtt",
      "description": "QoS"
    },
    {
      "field": "mqtt.subscription_options_nl",
      "protocol_dependency": "mqtt",
      "description": "No Local"
    },
    {
      "field": "mqtt.subscription_options_rap",
      "protocol_dependency": "mqtt",
      "description": "Retain As Published"
    },
    {
      "field": "mqtt.subscription_options_retain",
      "protocol_dependency": "mqtt",
      "description": "Retain Handling"
    },
    {
      "field": "mqtt.subscription_options_reserved",
      "protocol_dependency": "mqtt",
      "description": "Reserved"
    },
    {
      "field": "mqtt.connack.reason_code",
      "protocol_dependency": "mqtt",
      "description": "Reason Code"
    },
    {
      "field": "mqtt.puback.reason_code",
      "protocol_dependency": "mqtt",
      "description": "Reason Code"
    },
    {
      "field": "mqtt.pubrec.reason_code",
      "protocol_dependency": "mqtt",
      "description": "Reason Code"
    },
    {
      "field": "mqtt.pubrel.reason_code",
      "protocol_dependency": "mqtt",
      "description": "Reason Code"
    },
    {
      "field": "mqtt.pubcomp.reason_code",
      "protocol_dependency": "mqtt",
      "description": "Reason Code"
    },
    {
      "field": "mqtt.suback.reason_code",
      "protocol_dependency": "mqtt",
      "description": "Reason Code"
    },
    {
      "field": "mqtt.unsuback.reason_code",
      "protocol_dependency": "mqtt",
      "description": "Reason Code"
    },
    {
      "field": "mqtt.disconnect.reason_code",
      "protocol_dependency": "mqtt",
      "description": "Reason Code"
    },
    {
      "field": "mqtt.auth.reason_code",
      "protocol_dependency": "mqtt",
      "description": "Reason Code"
    },
    {
      "field": "mqtt.properties",
      "protocol_dependency": "mqtt",
      "description": "Properties"
    },
    {
      "field": "mqtt.will_properties",
      "protocol_dependency": "mqtt",
      "description": "Will Properties"
    },
    {
      "field": "mqtt.property_len",
      "protocol_dependency": "mqtt",
      "description": "Total Length"
    },
    {
      "field": "mqtt.property_id",
      "protocol_dependency": "mqtt",
      "description": "ID"
    },
    {
      "field": "mqtt.prop_number",
      "protocol_dependency": "mqtt",
      "description": "Value"
    },
    {
      "field": "mqtt.property.content_type",
      "protocol_dependency": "mqtt",
      "description": "Content Type"
    },
    {
      "field": "mqtt.property.max_qos",
      "protocol_dependency": "mqtt",
      "description": "QoS"
    },
    {
      "field": "mqtt.property.topic_alias",
      "protocol_dependency": "mqtt",
      "description": "Topic Alias"
    },
    {
      "field": "mqtt.prop_unknown",
      "protocol_dependency": "mqtt",
      "description": "Unknown Property"
    },
    {
      "field": "mqtt.prop_string_len",
      "protocol_dependency": "mqtt",
      "description": "Length"
    },
    {
      "field": "mqtt.prop_string",
      "protocol_dependency": "mqtt",
      "description": "Value"
    },
    {
      "field": "mqtt.prop_key_len",
      "protocol_dependency": "mqtt",
      "description": "Key Length"
    },
    {
      "field": "mqtt.prop_key",
      "protocol_dependency": "mqtt",
      "description": "Key"
    },
    {
      "field": "mqtt.prop_value_len",
      "protocol_dependency": "mqtt",
      "description": "Value Length"
    },
    {
      "field": "mqtt.prop_value",
      "protocol_dependency": "mqtt",
      "description": "Value"
    },
    {
      "field": "mqtt.illegal_topic_length",
      "protocol_dependency": "mqtt",
      "description": "Length cannot be 0"
    },
    {
      "field": "mqtt.unknown_version",
      "protocol_dependency": "mqtt",
      "description": "Unknown version (missing the CONNECT packet?)"
    },
    {
      "field": "mqtt.unknown_topic_alias",
      "protocol_dependency": "mqtt",
      "description": "Unknown topic alias"
    },
    {
      "field": "coap.length",
      "protocol_dependency": "coap",
      "description": "Length"
    },
    {
      "field": "coap.version",
      "protocol_dependency": "coap",
      "description": "Version"
    },
    {
      "field": "coap.type",
      "protocol_dependency": "coap",
      "description": "Type"
    },
    {
      "field": "coap.token_len",
      "protocol_dependency": "coap",
      "description": "Token Length"
    },
    {
      "field": "coap.token",
      "protocol_dependency": "coap",
      "description": "Token"
    },
    {
      "field": "coap.mid",
      "protocol_dependency": "coap",
      "description": "Message ID"
    },
    {
      "field": "coap.response_in",
      "protocol_dependency": "coap",
      "description": "Response In"
    },
    {
      "field": "coap.response_to",
      "protocol_dependency": "coap",
      "description": "Request In"
    },
    {
      "field": "coap.response_time",
      "protocol_dependency": "coap",
      "description": "Response Time"
    },
    {
      "field": "coap.request_first_in",
      "protocol_dependency": "coap",
      "description": "Retransmission of request in"
    },
    {
      "field": "coap.response_first_in",
      "protocol_dependency": "coap",
      "description": "Retransmission of response in"
    },
    {
      "field": "coap.oscore_kid",
      "protocol_dependency": "coap",
      "description": "OSCORE Key ID"
    },
    {
      "field": "coap.oscore_kid_context",
      "protocol_dependency": "coap",
      "description": "OSCORE Key ID Context"
    },
    {
      "field": "coap.oscore_piv",
      "protocol_dependency": "coap",
      "description": "OSCORE Partial IV"
    },
    {
      "field": "coap.block_payload",
      "protocol_dependency": "coap",
      "description": "Block Payload"
    },
    {
      "field": "coap.block_length",
      "protocol_dependency": "coap",
      "description": "Block Length"
    },
    {
      "field": "coap.blocks",
      "protocol_dependency": "coap",
      "description": "Blocks"
    },
    {
      "field": "coap.block",
      "protocol_dependency": "coap",
      "description": "Block"
    },
    {
      "field": "coap.block.overlap",
      "protocol_dependency": "coap",
      "description": "Block overlap"
    },
    {
      "field": "coap.block.overlap.conflicts",
      "protocol_dependency": "coap",
      "description": "Block overlapping with conflicting data"
    },
    {
      "field": "coap.block.multiple_tails",
      "protocol_dependency": "coap",
      "description": "Block has multiple tails"
    },
    {
      "field": "coap.block.too_long",
      "protocol_dependency": "coap",
      "description": "Block too long"
    },
    {
      "field": "coap.block.error",
      "protocol_dependency": "coap",
      "description": "Block defragmentation error"
    },
    {
      "field": "coap.block.count",
      "protocol_dependency": "coap",
      "description": "Block count"
    },
    {
      "field": "coap.block.reassembled.in",
      "protocol_dependency": "coap",
      "description": "Reassembled in"
    },
    {
      "field": "coap.block.reassembled.length",
      "protocol_dependency": "coap",
      "description": "Reassembled block length"
    },
    {
      "field": "coap.code",
      "protocol_dependency": "coap",
      "description": "Code"
    },
    {
      "field": "coap.payload",
      "protocol_dependency": "coap",
      "description": "Payload"
    },
    {
      "field": "coap.payload_desc",
      "protocol_dependency": "coap",
      "description": "Payload Desc"
    },
    {
      "field": "coap.payload_length",
      "protocol_dependency": "coap",
      "description": "Payload Length"
    },
    {
      "field": "coap.opt.name",
      "protocol_dependency": "coap",
      "description": "Opt Name"
    },
    {
      "field": "coap.opt.desc",
      "protocol_dependency": "coap",
      "description": "Opt Desc"
    },
    {
      "field": "coap.opt.delta",
      "protocol_dependency": "coap",
      "description": "Opt Delta"
    },
    {
      "field": "coap.opt.delta_ext",
      "protocol_dependency": "coap",
      "description": "Opt Delta extended"
    },
    {
      "field": "coap.opt.length",
      "protocol_dependency": "coap",
      "description": "Opt Length"
    },
    {
      "field": "coap.opt.length_ext",
      "protocol_dependency": "coap",
      "description": "Opt Length extended"
    },
    {
      "field": "coap.opt.end_marker",
      "protocol_dependency": "coap",
      "description": "End of options marker"
    },
    {
      "field": "coap.opt.ctype",
      "protocol_dependency": "coap",
      "description": "Content-type"
    },
    {
      "field": "coap.opt.max_age",
      "protocol_dependency": "coap",
      "description": "Max-age"
    },
    {
      "field": "coap.opt.proxy_uri",
      "protocol_dependency": "coap",
      "description": "Proxy-Uri"
    },
    {
      "field": "coap.opt.proxy_scheme",
      "protocol_dependency": "coap",
      "description": "Proxy-Scheme"
    },
    {
      "field": "coap.opt.size1",
      "protocol_dependency": "coap",
      "description": "Size1"
    },
    {
      "field": "coap.opt.etag",
      "protocol_dependency": "coap",
      "description": "Etag"
    },
    {
      "field": "coap.opt.uri_host",
      "protocol_dependency": "coap",
      "description": "Uri-Host"
    },
    {
      "field": "coap.opt.location_path",
      "protocol_dependency": "coap",
      "description": "Location-Path"
    },
    {
      "field": "coap.opt.uri_port",
      "protocol_dependency": "coap",
      "description": "Uri-Port"
    },
    {
      "field": "coap.opt.location_query",
      "protocol_dependency": "coap",
      "description": "Location-Query"
    },
    {
      "field": "coap.opt.object_security_reserved",
      "protocol_dependency": "coap",
      "description": "Reserved"
    },
    {
      "field": "coap.opt.object_security_kid_context_present",
      "protocol_dependency": "coap",
      "description": "Key ID Context Present"
    },
    {
      "field": "coap.opt.object_security_kid_present",
      "protocol_dependency": "coap",
      "description": "Key ID Present"
    },
    {
      "field": "coap.opt.object_security_piv_len",
      "protocol_dependency": "coap",
      "description": "Partial IV Length"
    },
    {
      "field": "coap.opt.object_security_piv",
      "protocol_dependency": "coap",
      "description": "Partial IV"
    },
    {
      "field": "coap.opt.object_security_kid_context_len",
      "protocol_dependency": "coap",
      "description": "Key ID Context Length"
    },
    {
      "field": "coap.opt.object_security_kid_context",
      "protocol_dependency": "coap",
      "description": "Key ID Context"
    },
    {
      "field": "coap.opt.object_security_kid",
      "protocol_dependency": "coap",
      "description": "Key ID"
    },
    {
      "field": "coap.opt.uri_path",
      "protocol_dependency": "coap",
      "description": "Uri-Path"
    },
    {
      "field": "coap.opt.uri_path_recon",
      "protocol_dependency": "coap",
      "description": "Uri-Path"
    },
    {
      "field": "coap.opt.observe",
      "protocol_dependency": "coap",
      "description": "Observe"
    },
    {
      "field": "coap.opt.hop_limit",
      "protocol_dependency": "coap",
      "description": "Hop Limit"
    },
    {
      "field": "coap.opt.accept",
      "protocol_dependency": "coap",
      "description": "Accept"
    },
    {
      "field": "coap.opt.if_match",
      "protocol_dependency": "coap",
      "description": "If-Match"
    },
    {
      "field": "coap.opt.block_number",
      "protocol_dependency": "coap",
      "description": "Block Number"
    },
    {
      "field": "coap.opt.block_mflag",
      "protocol_dependency": "coap",
      "description": "More Flag"
    },
    {
      "field": "coap.opt.block_size",
      "protocol_dependency": "coap",
      "description": "Encoded Block Size"
    },
    {
      "field": "coap.opt.uri_query",
      "protocol_dependency": "coap",
      "description": "Uri-Query"
    },
    {
      "field": "coap.opt.opt_echo",
      "protocol_dependency": "coap",
      "description": "Echo"
    },
    {
      "field": "coap.opt.opt_no_response",
      "protocol_dependency": "coap",
      "description": "No-Response"
    },
    {
      "field": "coap.opt.opt_request_tag",
      "protocol_dependency": "coap",
      "description": "Request-Tag"
    },
    {
      "field": "coap.opt.opt_ocf_version",
      "protocol_dependency": "coap",
      "description": "OCF-Content-Format-Version"
    },
    {
      "field": "coap.opt.opt_ocf_accept_version",
      "protocol_dependency": "coap",
      "description": "OCF-Accept-Content-Format-Version"
    },
    {
      "field": "coap.opt.unknown",
      "protocol_dependency": "coap",
      "description": "Unknown"
    },
    {
      "field": "coap.retransmitted",
      "protocol_dependency": "coap",
      "description": "Retransmitted"
    },
    {
      "field": "coap.unknown_option_number",
      "protocol_dependency": "coap",
      "description": "Unknown Option Number"
    },
    {
      "field": "coap.invalid_option_number",
      "protocol_dependency": "coap",
      "description": "Invalid Option Number"
    },
    {
      "field": "coap.invalid_option_range",
      "protocol_dependency": "coap",
      "description": "Invalid Option Range"
    },
    {
      "field": "coap.option_length_bad",
      "protocol_dependency": "coap",
      "description": "Option length bad"
    },
    {
      "field": "coap.option_oscore_bad",
      "protocol_dependency": "coap",
      "description": "Invalid OSCORE Option Format"
    },
    {
      "field": "rtcp.version",
      "protocol_dependency": "rtcp",
      "description": "Version"
    },
    {
      "field": "rtcp.padding",
      "protocol_dependency": "rtcp",
      "description": "Padding"
    },
    {
      "field": "rtcp.rc",
      "protocol_dependency": "rtcp",
      "description": "Reception report count"
    },
    {
      "field": "rtcp.sc",
      "protocol_dependency": "rtcp",
      "description": "Source count"
    },
    {
      "field": "rtcp.pt",
      "protocol_dependency": "rtcp",
      "description": "Packet type"
    },
    {
      "field": "rtcp.length",
      "protocol_dependency": "rtcp",
      "description": "Length"
    },
    {
      "field": "rtcp.senderssrc",
      "protocol_dependency": "rtcp",
      "description": "Sender SSRC"
    },
    {
      "field": "rtcp.mediassrc",
      "protocol_dependency": "rtcp",
      "description": "Media source SSRC"
    },
    {
      "field": "rtcp.timestamp.ntp.msw",
      "protocol_dependency": "rtcp",
      "description": "Timestamp, MSW"
    },
    {
      "field": "rtcp.timestamp.ntp.lsw",
      "protocol_dependency": "rtcp",
      "description": "Timestamp, LSW"
    },
    {
      "field": "rtcp.timestamp.ntp",
      "protocol_dependency": "rtcp",
      "description": "MSW and LSW as NTP timestamp"
    },
    {
      "field": "rtcp.timebase_indicator",
      "protocol_dependency": "rtcp",
      "description": "Timebase Indicator"
    },
    {
      "field": "rtcp.identity",
      "protocol_dependency": "rtcp",
      "description": "Identity"
    },
    {
      "field": "rtcp.stream_id",
      "protocol_dependency": "rtcp",
      "description": "Stream id"
    },
    {
      "field": "rtcp.timestamp.as",
      "protocol_dependency": "rtcp",
      "description": "AS timestamp"
    },
    {
      "field": "rtcp.timestamp.rtp",
      "protocol_dependency": "rtcp",
      "description": "RTP timestamp"
    },
    {
      "field": "rtcp.sender.packetcount",
      "protocol_dependency": "rtcp",
      "description": "Sender's packet count"
    },
    {
      "field": "rtcp.sender.octetcount",
      "protocol_dependency": "rtcp",
      "description": "Sender's octet count"
    },
    {
      "field": "rtcp.ssrc.identifier",
      "protocol_dependency": "rtcp",
      "description": "Identifier"
    },
    {
      "field": "rtcp.ssrc.fraction",
      "protocol_dependency": "rtcp",
      "description": "Fraction lost"
    },
    {
      "field": "rtcp.ssrc.cum_nr",
      "protocol_dependency": "rtcp",
      "description": "Cumulative number of packets lost"
    },
    {
      "field": "rtcp.ssrc.ext_high",
      "protocol_dependency": "rtcp",
      "description": "Extended highest sequence number received"
    },
    {
      "field": "rtcp.ssrc.high_seq",
      "protocol_dependency": "rtcp",
      "description": "Highest sequence number received"
    },
    {
      "field": "rtcp.ssrc.high_cycles",
      "protocol_dependency": "rtcp",
      "description": "Sequence number cycles count"
    },
    {
      "field": "rtcp.ssrc.jitter",
      "protocol_dependency": "rtcp",
      "description": "Interarrival jitter"
    },
    {
      "field": "rtcp.ssrc.lsr",
      "protocol_dependency": "rtcp",
      "description": "Last SR timestamp"
    },
    {
      "field": "rtcp.ssrc.dlsr",
      "protocol_dependency": "rtcp",
      "description": "Delay since last SR timestamp"
    },
    {
      "field": "rtcp.sdes.type",
      "protocol_dependency": "rtcp",
      "description": "Type"
    },
    {
      "field": "rtcp.sdes.length",
      "protocol_dependency": "rtcp",
      "description": "Length"
    },
    {
      "field": "rtcp.sdes.text",
      "protocol_dependency": "rtcp",
      "description": "Text"
    },
    {
      "field": "rtcp.sdes.prefix.length",
      "protocol_dependency": "rtcp",
      "description": "Prefix length"
    },
    {
      "field": "rtcp.sdes.prefix.string",
      "protocol_dependency": "rtcp",
      "description": "Prefix string"
    },
    {
      "field": "rtcp.app.subtype",
      "protocol_dependency": "rtcp",
      "description": "Subtype"
    },
    {
      "field": "rtcp.app.name",
      "protocol_dependency": "rtcp",
      "description": "Name (ASCII)"
    },
    {
      "field": "rtcp.app.data",
      "protocol_dependency": "rtcp",
      "description": "Application specific data"
    },
    {
      "field": "rtcp.app.data_str",
      "protocol_dependency": "rtcp",
      "description": "Application specific data"
    },
    {
      "field": "rtcp.app.poc1",
      "protocol_dependency": "rtcp",
      "description": "PoC1 Application specific data"
    },
    {
      "field": "rtcp.app.poc1.sip.uri",
      "protocol_dependency": "rtcp",
      "description": "SIP URI"
    },
    {
      "field": "rtcp.app.poc1.disp.name",
      "protocol_dependency": "rtcp",
      "description": "Display Name"
    },
    {
      "field": "rtcp.app.poc1.priority",
      "protocol_dependency": "rtcp",
      "description": "Priority"
    },
    {
      "field": "rtcp.app.poc1.request.ts",
      "protocol_dependency": "rtcp",
      "description": "Talk Burst Request Timestamp"
    },
    {
      "field": "rtcp.app.poc1.stt",
      "protocol_dependency": "rtcp",
      "description": "Stop talking timer"
    },
    {
      "field": "rtcp.app.poc1.participants",
      "protocol_dependency": "rtcp",
      "description": "Number of participants"
    },
    {
      "field": "rtcp.app.poc1.ssrc.granted",
      "protocol_dependency": "rtcp",
      "description": "SSRC of client granted permission to talk"
    },
    {
      "field": "rtcp.app.poc1.last.pkt.seq.no",
      "protocol_dependency": "rtcp",
      "description": "Sequence number of last RTP packet"
    },
    {
      "field": "rtcp.app.poc1.ignore.seq.no",
      "protocol_dependency": "rtcp",
      "description": "Ignore sequence number field"
    },
    {
      "field": "rtcp.app.poc1.reason.code",
      "protocol_dependency": "rtcp",
      "description": "Reason code"
    },
    {
      "field": "rtcp.app.poc1.reason.phrase",
      "protocol_dependency": "rtcp",
      "description": "Reason Phrase"
    },
    {
      "field": "rtcp.app.poc1.new.time.request",
      "protocol_dependency": "rtcp",
      "description": "New time client can request (seconds)"
    },
    {
      "field": "rtcp.app.poc1.ack.subtype",
      "protocol_dependency": "rtcp",
      "description": "Subtype"
    },
    {
      "field": "rtcp.app.poc1.ack.reason.code",
      "protocol_dependency": "rtcp",
      "description": "Reason code"
    },
    {
      "field": "rtcp.app.poc1.qsresp.priority",
      "protocol_dependency": "rtcp",
      "description": "Priority"
    },
    {
      "field": "rtcp.app.poc1.qsresp.position",
      "protocol_dependency": "rtcp",
      "description": "Position (number of clients ahead)"
    },
    {
      "field": "rtcp.app.poc1.conn.content.a.id",
      "protocol_dependency": "rtcp",
      "description": "Identity of inviting client"
    },
    {
      "field": "rtcp.app.poc1.conn.content.a.dn",
      "protocol_dependency": "rtcp",
      "description": "Nick name of inviting client"
    },
    {
      "field": "rtcp.app.poc1.conn.content.sess.id",
      "protocol_dependency": "rtcp",
      "description": "Session identity"
    },
    {
      "field": "rtcp.app.poc1.conn.content.grp.dn",
      "protocol_dependency": "rtcp",
      "description": "Group name"
    },
    {
      "field": "rtcp.app.poc1.conn.content.grp.id",
      "protocol_dependency": "rtcp",
      "description": "Group identity"
    },
    {
      "field": "rtcp.app.poc1.conn.session.type",
      "protocol_dependency": "rtcp",
      "description": "Session type"
    },
    {
      "field": "rtcp.app.poc1.conn.add.ind.mao",
      "protocol_dependency": "rtcp",
      "description": "Manual answer override"
    },
    {
      "field": "rtcp.app.poc1.conn.sdes.a.id",
      "protocol_dependency": "rtcp",
      "description": "Identity of inviting client"
    },
    {
      "field": "rtcp.app.poc1.conn.sdes.a.dn",
      "protocol_dependency": "rtcp",
      "description": "Nick name of inviting client"
    },
    {
      "field": "rtcp.app.poc1.conn.sdes.sess.id",
      "protocol_dependency": "rtcp",
      "description": "Session identity"
    },
    {
      "field": "rtcp.app.poc1.conn.sdes.grp.dn",
      "protocol_dependency": "rtcp",
      "description": "Group Name"
    },
    {
      "field": "rtcp.app.poc1.conn.sdes.grp.id",
      "protocol_dependency": "rtcp",
      "description": "Group identity"
    },
    {
      "field": "rtcp.app.mux",
      "protocol_dependency": "rtcp",
      "description": "RtpMux Application specific data"
    },
    {
      "field": "rtcp.app.mux.mux",
      "protocol_dependency": "rtcp",
      "description": "Multiplexing supported"
    },
    {
      "field": "rtcp.app.mux.cp",
      "protocol_dependency": "rtcp",
      "description": "Header compression supported"
    },
    {
      "field": "rtcp.app.mux.selection",
      "protocol_dependency": "rtcp",
      "description": "Multiplexing selection"
    },
    {
      "field": "rtcp.app.mux.muxport",
      "protocol_dependency": "rtcp",
      "description": "Local Mux Port"
    },
    {
      "field": "rtcp.nack.fsn",
      "protocol_dependency": "rtcp",
      "description": "First sequence number"
    },
    {
      "field": "rtcp.nack.blp",
      "protocol_dependency": "rtcp",
      "description": "Bitmask of following lost packets"
    },
    {
      "field": "rtcp.padding.count",
      "protocol_dependency": "rtcp",
      "description": "Padding count"
    },
    {
      "field": "rtcp.padding.data",
      "protocol_dependency": "rtcp",
      "description": "Padding data"
    },
    {
      "field": "rtcp.profile-specific-extension.type",
      "protocol_dependency": "rtcp",
      "description": "Extension Type"
    },
    {
      "field": "rtcp.profile-specific-extension.length",
      "protocol_dependency": "rtcp",
      "description": "Extension Length"
    },
    {
      "field": "rtcp.profile-specific-extension",
      "protocol_dependency": "rtcp",
      "description": "Profile-specific extension"
    },
    {
      "field": "rtcp.setup",
      "protocol_dependency": "rtcp",
      "description": "Stream setup"
    },
    {
      "field": "rtcp.setup-frame",
      "protocol_dependency": "rtcp",
      "description": "Setup frame"
    },
    {
      "field": "rtcp.setup-method",
      "protocol_dependency": "rtcp",
      "description": "Setup Method"
    },
    {
      "field": "rtcp.lsr-frame",
      "protocol_dependency": "rtcp",
      "description": "Frame matching Last SR timestamp"
    },
    {
      "field": "rtcp.lsr-frame-captured",
      "protocol_dependency": "rtcp",
      "description": "Time since Last SR captured"
    },
    {
      "field": "rtcp.roundtrip-delay",
      "protocol_dependency": "rtcp",
      "description": "Roundtrip Delay(ms)"
    },
    {
      "field": "rtcp.xr.bt",
      "protocol_dependency": "rtcp",
      "description": "Type"
    },
    {
      "field": "rtcp.xr.bs",
      "protocol_dependency": "rtcp",
      "description": "Type Specific"
    },
    {
      "field": "rtcp.xr.bl",
      "protocol_dependency": "rtcp",
      "description": "Length"
    },
    {
      "field": "rtcp.ssrc.discarded",
      "protocol_dependency": "rtcp",
      "description": "Fraction discarded"
    },
    {
      "field": "rtcp.xr.voipmetrics.burstdensity",
      "protocol_dependency": "rtcp",
      "description": "Burst Density"
    },
    {
      "field": "rtcp.xr.voipmetrics.gapdensity",
      "protocol_dependency": "rtcp",
      "description": "Gap Density"
    },
    {
      "field": "rtcp.xr.voipmetrics.burstduration",
      "protocol_dependency": "rtcp",
      "description": "Burst Duration(ms)"
    },
    {
      "field": "rtcp.xr.voipmetrics.gapduration",
      "protocol_dependency": "rtcp",
      "description": "Gap Duration(ms)"
    },
    {
      "field": "rtcp.xr.voipmetrics.rtdelay",
      "protocol_dependency": "rtcp",
      "description": "Round Trip Delay(ms)"
    },
    {
      "field": "rtcp.xr.voipmetrics.esdelay",
      "protocol_dependency": "rtcp",
      "description": "End System Delay(ms)"
    },
    {
      "field": "rtcp.xr.voipmetrics.signallevel",
      "protocol_dependency": "rtcp",
      "description": "Signal Level"
    },
    {
      "field": "rtcp.xr.voipmetrics.noiselevel",
      "protocol_dependency": "rtcp",
      "description": "Noise Level"
    },
    {
      "field": "rtcp.xr.voipmetrics.rerl",
      "protocol_dependency": "rtcp",
      "description": "Residual Echo Return Loss"
    },
    {
      "field": "rtcp.xr.voipmetrics.gmin",
      "protocol_dependency": "rtcp",
      "description": "Gmin"
    },
    {
      "field": "rtcp.xr.voipmetrics.rfactor",
      "protocol_dependency": "rtcp",
      "description": "R Factor"
    },
    {
      "field": "rtcp.xr.voipmetrics.extrfactor",
      "protocol_dependency": "rtcp",
      "description": "External R Factor"
    },
    {
      "field": "rtcp.xr.voipmetrics.moslq",
      "protocol_dependency": "rtcp",
      "description": "MOS - Listening Quality"
    },
    {
      "field": "rtcp.xr.voipmetrics.moscq",
      "protocol_dependency": "rtcp",
      "description": "MOS - Conversational Quality"
    },
    {
      "field": "rtcp.xr.voipmetrics.plc",
      "protocol_dependency": "rtcp",
      "description": "Packet Loss Concealment Algorithm"
    },
    {
      "field": "rtcp.xr.voipmetrics.jba",
      "protocol_dependency": "rtcp",
      "description": "Adaptive Jitter Buffer Algorithm"
    },
    {
      "field": "rtcp.xr.voipmetrics.jbrate",
      "protocol_dependency": "rtcp",
      "description": "Jitter Buffer Rate"
    },
    {
      "field": "rtcp.xr.voipmetrics.jbnominal",
      "protocol_dependency": "rtcp",
      "description": "Nominal Jitter Buffer Size"
    },
    {
      "field": "rtcp.xr.voipmetrics.jbmax",
      "protocol_dependency": "rtcp",
      "description": "Maximum Jitter Buffer Size"
    },
    {
      "field": "rtcp.xr.voipmetrics.jbabsmax",
      "protocol_dependency": "rtcp",
      "description": "Absolute Maximum Jitter Buffer Size"
    },
    {
      "field": "rtcp.xr.tf",
      "protocol_dependency": "rtcp",
      "description": "Thinning factor"
    },
    {
      "field": "rtcp.xr.stats.lrflag",
      "protocol_dependency": "rtcp",
      "description": "Loss Report Flag"
    },
    {
      "field": "rtcp.xr.stats.dupflag",
      "protocol_dependency": "rtcp",
      "description": "Duplicates Report Flag"
    },
    {
      "field": "rtcp.xr.stats.jitterflag",
      "protocol_dependency": "rtcp",
      "description": "Jitter Report Flag"
    },
    {
      "field": "rtcp.xr.stats.ttl",
      "protocol_dependency": "rtcp",
      "description": "TTL or Hop Limit Flag"
    },
    {
      "field": "rtcp.xr.endseq",
      "protocol_dependency": "rtcp",
      "description": "End Sequence Number"
    },
    {
      "field": "rtcp.xr.chunk.null_terminator",
      "protocol_dependency": "rtcp",
      "description": "Null Terminator"
    },
    {
      "field": "rtcp.xr.chunk.length",
      "protocol_dependency": "rtcp",
      "description": "Check length"
    },
    {
      "field": "rtcp.xr.chunk.bit_vector",
      "protocol_dependency": "rtcp",
      "description": "Bit Vector"
    },
    {
      "field": "rtcp.xr.beginseq",
      "protocol_dependency": "rtcp",
      "description": "Begin Sequence Number"
    },
    {
      "field": "rtcp.xr.receipt_time_seq",
      "protocol_dependency": "rtcp",
      "description": "Receipt Time"
    },
    {
      "field": "rtcp.xr.stats.lost",
      "protocol_dependency": "rtcp",
      "description": "Lost Packets"
    },
    {
      "field": "rtcp.xr.stats.dups",
      "protocol_dependency": "rtcp",
      "description": "Duplicate Packets"
    },
    {
      "field": "rtcp.xr.stats.minjitter",
      "protocol_dependency": "rtcp",
      "description": "Minimum Jitter"
    },
    {
      "field": "rtcp.xr.stats.maxjitter",
      "protocol_dependency": "rtcp",
      "description": "Maximum Jitter"
    },
    {
      "field": "rtcp.xr.stats.meanjitter",
      "protocol_dependency": "rtcp",
      "description": "Mean Jitter"
    },
    {
      "field": "rtcp.xr.stats.devjitter",
      "protocol_dependency": "rtcp",
      "description": "Standard Deviation of Jitter"
    },
    {
      "field": "rtcp.xr.stats.minttl",
      "protocol_dependency": "rtcp",
      "description": "Minimum TTL or Hop Limit"
    },
    {
      "field": "rtcp.xr.stats.maxttl",
      "protocol_dependency": "rtcp",
      "description": "Maximum TTL or Hop Limit"
    },
    {
      "field": "rtcp.xr.stats.meanttl",
      "protocol_dependency": "rtcp",
      "description": "Mean TTL or Hop Limit"
    },
    {
      "field": "rtcp.xr.stats.devttl",
      "protocol_dependency": "rtcp",
      "description": "Standard Deviation of TTL"
    },
    {
      "field": "rtcp.xr.timestamp",
      "protocol_dependency": "rtcp",
      "description": "Timestamp"
    },
    {
      "field": "rtcp.xr.lrr",
      "protocol_dependency": "rtcp",
      "description": "Last RR timestamp"
    },
    {
      "field": "rtcp.xr.dlrr",
      "protocol_dependency": "rtcp",
      "description": "Delay since last RR timestamp"
    },
    {
      "field": "rtcp.length_check",
      "protocol_dependency": "rtcp",
      "description": "RTCP frame length check"
    },
    {
      "field": "rtcp.rtpfb.fmt",
      "protocol_dependency": "rtcp",
      "description": "RTCP Feedback message type (FMT)"
    },
    {
      "field": "rtcp.psfb.fmt",
      "protocol_dependency": "rtcp",
      "description": "RTCP Feedback message type (FMT)"
    },
    {
      "field": "rtcp.rtpfb.nack_pid",
      "protocol_dependency": "rtcp",
      "description": "RTCP Transport Feedback NACK PID"
    },
    {
      "field": "rtcp.rtpfb.nack_blp",
      "protocol_dependency": "rtcp",
      "description": "RTCP Transport Feedback NACK BLP"
    },
    {
      "field": "rtcp.fci",
      "protocol_dependency": "rtcp",
      "description": "Feedback Control Information (FCI)"
    },
    {
      "field": "rtcp.xr.idms.spst",
      "protocol_dependency": "rtcp",
      "description": "Synchronization Packet Sender Type"
    },
    {
      "field": "rtcp.xr.idms.pt",
      "protocol_dependency": "rtcp",
      "description": "Payload Type"
    },
    {
      "field": "rtcp.xr.idms.msci",
      "protocol_dependency": "rtcp",
      "description": "Media Stream Correlation Identifier"
    },
    {
      "field": "rtcp.xr.idms.source_ssrc",
      "protocol_dependency": "rtcp",
      "description": "Source SSRC"
    },
    {
      "field": "rtcp.xr.idms.ntp_rcv_ts",
      "protocol_dependency": "rtcp",
      "description": "NTP Timestamp of packet reception"
    },
    {
      "field": "rtcp.xr.idms.rtp_ts",
      "protocol_dependency": "rtcp",
      "description": "RTP Timestamp of packet"
    },
    {
      "field": "rtcp.xr.idms.ntp_pres_ts",
      "protocol_dependency": "rtcp",
      "description": "NTP Timestamp of presentation"
    },
    {
      "field": "rtcp.psfb.fir.fci.ssrc",
      "protocol_dependency": "rtcp",
      "description": "SSRC"
    },
    {
      "field": "rtcp.psfb.fir.fci.csn",
      "protocol_dependency": "rtcp",
      "description": "Command Sequence Number"
    },
    {
      "field": "rtcp.psfb.fir.fci.reserved",
      "protocol_dependency": "rtcp",
      "description": "Reserved"
    },
    {
      "field": "rtcp.psfb.fir.sli.first",
      "protocol_dependency": "rtcp",
      "description": "First MB"
    },
    {
      "field": "rtcp.psfb.fir.sli.number",
      "protocol_dependency": "rtcp",
      "description": "Number of MBs"
    },
    {
      "field": "rtcp.psfb.fir.sli.picture_id",
      "protocol_dependency": "rtcp",
      "description": "Picture ID"
    },
    {
      "field": "rtcp.psfb.remb.identifier",
      "protocol_dependency": "rtcp",
      "description": "Unique Identifier"
    },
    {
      "field": "rtcp.psfb.remb.fci.ssrc",
      "protocol_dependency": "rtcp",
      "description": "SSRC"
    },
    {
      "field": "rtcp.psfb.remb.fci.number_ssrcs",
      "protocol_dependency": "rtcp",
      "description": "Number of Ssrcs"
    },
    {
      "field": "rtcp.psfb.remb.fci.br_exp",
      "protocol_dependency": "rtcp",
      "description": "BR Exp"
    },
    {
      "field": "rtcp.psfb.remb.fci.br_mantissa",
      "protocol_dependency": "rtcp",
      "description": "Br Mantissa"
    },
    {
      "field": "rtcp.psfb.remb.fci.bitrate",
      "protocol_dependency": "rtcp",
      "description": "Maximum bit rate"
    },
    {
      "field": "rtcp.rtpfb.tmmbr.fci.ssrc",
      "protocol_dependency": "rtcp",
      "description": "SSRC"
    },
    {
      "field": "rtcp.rtpfb.tmmbr.fci.exp",
      "protocol_dependency": "rtcp",
      "description": "MxTBR Exp"
    },
    {
      "field": "rtcp.rtpfb.tmmbr.fci.mantissa",
      "protocol_dependency": "rtcp",
      "description": "MxTBR Mantissa"
    },
    {
      "field": "rtcp.rtpfb.tmmbr.fci.bitrate",
      "protocol_dependency": "rtcp",
      "description": "Maximum total media bit rate"
    },
    {
      "field": "rtcp.rtpfb.tmmbr.fci.measuredoverhead",
      "protocol_dependency": "rtcp",
      "description": "Measured Overhead"
    },
    {
      "field": "rtcp.rtpfb.transportcc.baseseq",
      "protocol_dependency": "rtcp",
      "description": "Base Sequence Number"
    },
    {
      "field": "rtcp.rtpfb.transportcc.statuscount",
      "protocol_dependency": "rtcp",
      "description": "Packet Status Count"
    },
    {
      "field": "rtcp.rtpfb.transportcc.reftime",
      "protocol_dependency": "rtcp",
      "description": "Reference Time"
    },
    {
      "field": "rtcp.rtpfb.transportcc.pktcount",
      "protocol_dependency": "rtcp",
      "description": "Feedback Packets Count"
    },
    {
      "field": "rtcp.rtpfb.transportcc.pktchunk",
      "protocol_dependency": "rtcp",
      "description": "Packet Chunk"
    },
    {
      "field": "rtcp.rtpfb.transportcc.recv_delta",
      "protocol_dependency": "rtcp",
      "description": "Recv Delta"
    },
    {
      "field": "rtcp.rtpfb.transportcc.recv_delta.padding",
      "protocol_dependency": "rtcp",
      "description": "Recv Delta Padding"
    },
    {
      "field": "rtcp.xr.btxnq.begseq",
      "protocol_dependency": "rtcp",
      "description": "Starting sequence number"
    },
    {
      "field": "rtcp.xr.btxnq.endseq",
      "protocol_dependency": "rtcp",
      "description": "Last sequence number"
    },
    {
      "field": "rtcp.xr.btxnq.vmaxdiff",
      "protocol_dependency": "rtcp",
      "description": "Maximum IPDV difference in 1 cycle"
    },
    {
      "field": "rtcp.xr.btxnq.vrange",
      "protocol_dependency": "rtcp",
      "description": "Maximum IPDV difference seen to date"
    },
    {
      "field": "rtcp.xr.btxnq.vsum",
      "protocol_dependency": "rtcp",
      "description": "Sum of peak IPDV differences to date"
    },
    {
      "field": "rtcp.xr.btxnq.cycles",
      "protocol_dependency": "rtcp",
      "description": "Number of cycles in calculation"
    },
    {
      "field": "rtcp.xr.btxnq.jbevents",
      "protocol_dependency": "rtcp",
      "description": "Number of jitter buffer adaptations to date"
    },
    {
      "field": "rtcp.xr.btxnq.spare",
      "protocol_dependency": "rtcp",
      "description": "Spare/reserved bits"
    },
    {
      "field": "rtcp.xr.btxnq.tdegnet",
      "protocol_dependency": "rtcp",
      "description": "Time degraded by packet loss or late delivery"
    },
    {
      "field": "rtcp.xr.btxnq.tdegjit",
      "protocol_dependency": "rtcp",
      "description": "Time degraded by jitter buffer adaptation events"
    },
    {
      "field": "rtcp.xr.btxnq.es",
      "protocol_dependency": "rtcp",
      "description": "ES due to unavailable packet events"
    },
    {
      "field": "rtcp.xr.btxnq.ses",
      "protocol_dependency": "rtcp",
      "description": "SES due to unavailable packet events"
    },
    {
      "field": "rtcp.ms_pse.bandwidth",
      "protocol_dependency": "rtcp",
      "description": "Bandwidth"
    },
    {
      "field": "rtcp.ms_pse.confidence_level",
      "protocol_dependency": "rtcp",
      "description": "Confidence Level"
    },
    {
      "field": "rtcp.ms_pse.seq_num",
      "protocol_dependency": "rtcp",
      "description": "Sequence Number"
    },
    {
      "field": "rtcp.ms_pse.frame_res_width",
      "protocol_dependency": "rtcp",
      "description": "Frame Resolution Width"
    },
    {
      "field": "rtcp.ms_pse.frame_res_height",
      "protocol_dependency": "rtcp",
      "description": "Frame Resolution Height"
    },
    {
      "field": "rtcp.ms_pse.bitrate",
      "protocol_dependency": "rtcp",
      "description": "Bitrate"
    },
    {
      "field": "rtcp.ms_pse.frame_rate",
      "protocol_dependency": "rtcp",
      "description": "Frame Rate"
    },
    {
      "field": "rtcp.ms_pse.concealed_frames",
      "protocol_dependency": "rtcp",
      "description": "Concealed Frames"
    },
    {
      "field": "rtcp.ms_pse.stretched_frames",
      "protocol_dependency": "rtcp",
      "description": "Stretched Frames"
    },
    {
      "field": "rtcp.ms_pse.compressed_frames",
      "protocol_dependency": "rtcp",
      "description": "Compressed Frames"
    },
    {
      "field": "rtcp.ms_pse.total_frames",
      "protocol_dependency": "rtcp",
      "description": "Total Frames"
    },
    {
      "field": "rtcp.ms_pse.receive_quality_state",
      "protocol_dependency": "rtcp",
      "description": "Received Quality State"
    },
    {
      "field": "rtcp.ms_pse.fec_distance_request",
      "protocol_dependency": "rtcp",
      "description": "FEC Distance Request"
    },
    {
      "field": "rtcp.ms_pse.last_packet_train",
      "protocol_dependency": "rtcp",
      "description": "Last Packet Train Flag"
    },
    {
      "field": "rtcp.ms_pse.packet_index",
      "protocol_dependency": "rtcp",
      "description": "Packet Index"
    },
    {
      "field": "rtcp.ms_pse.packet_count",
      "protocol_dependency": "rtcp",
      "description": "Packet Count"
    },
    {
      "field": "rtcp.ms_pse.packet_train_byte_count",
      "protocol_dependency": "rtcp",
      "description": "Packet Train Byte Count"
    },
    {
      "field": "rtcp.ms_pse.inbound_bandwidth",
      "protocol_dependency": "rtcp",
      "description": "Inbound Link Bandwidth"
    },
    {
      "field": "rtcp.ms_pse.outbound_bandwidth",
      "protocol_dependency": "rtcp",
      "description": "Outbound Link Bandwidth"
    },
    {
      "field": "rtcp.ms_pse.no_cache",
      "protocol_dependency": "rtcp",
      "description": "No Cache Flag"
    },
    {
      "field": "rtcp.ms_pse.congestion_info",
      "protocol_dependency": "rtcp",
      "description": "Congestion Information"
    },
    {
      "field": "rtcp.ms_pse.modality",
      "protocol_dependency": "rtcp",
      "description": "Modality"
    },
    {
      "field": "rtcp.psfb.ms.pli.request_id",
      "protocol_dependency": "rtcp",
      "description": "Request ID"
    },
    {
      "field": "rtcp.psfb.ms.pli.sync_frame_request",
      "protocol_dependency": "rtcp",
      "description": "Sync Frame Request"
    },
    {
      "field": "rtcp.psfb.ms.afb_type",
      "protocol_dependency": "rtcp",
      "description": "Application Layer Feedback Type"
    },
    {
      "field": "rtcp.psfb.ms.length",
      "protocol_dependency": "rtcp",
      "description": "Length"
    },
    {
      "field": "rtcp.psfb.ms.msi",
      "protocol_dependency": "rtcp",
      "description": "Requested Media Source ID (MSI)"
    },
    {
      "field": "rtcp.psfb.ms.vsr.request_id",
      "protocol_dependency": "rtcp",
      "description": "Request Id"
    },
    {
      "field": "rtcp.psfb.ms.vsr.version",
      "protocol_dependency": "rtcp",
      "description": "Version"
    },
    {
      "field": "rtcp.psfb.ms.vsr.key_frame_request",
      "protocol_dependency": "rtcp",
      "description": "Key Frame Request"
    },
    {
      "field": "rtcp.psfb.ms.vsr.num_entries",
      "protocol_dependency": "rtcp",
      "description": "Number of Entries"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry_length",
      "protocol_dependency": "rtcp",
      "description": "Entry Length"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.payload_type",
      "protocol_dependency": "rtcp",
      "description": "Payload Type"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.ucconfig_mode",
      "protocol_dependency": "rtcp",
      "description": "UCConfig Mode"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.no_sp_frames",
      "protocol_dependency": "rtcp",
      "description": "No support for SP Frames (RT only)"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.no_sp_baseline",
      "protocol_dependency": "rtcp",
      "description": "Only Supports Constrained Baseline (H.264 only)"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.cgs",
      "protocol_dependency": "rtcp",
      "description": "Supports CGS rewrite (H.264 only)"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.aspect_ratio",
      "protocol_dependency": "rtcp",
      "description": "Aspect Ratio Bitmask"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.aspect_ratio_4by3",
      "protocol_dependency": "rtcp",
      "description": "Aspect Ratio 4 by 3"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.aspect_ratio_16by9",
      "protocol_dependency": "rtcp",
      "description": "Aspect Ratio 16 by 9"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.aspect_ratio_1by1",
      "protocol_dependency": "rtcp",
      "description": "Aspect Ratio 1 by 1"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.aspect_ratio_3by4",
      "protocol_dependency": "rtcp",
      "description": "Aspect Ratio 3 by 4"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.aspect_ratio_9by16",
      "protocol_dependency": "rtcp",
      "description": "Aspect Ratio 9 by 16"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.aspect_ratio_20by3",
      "protocol_dependency": "rtcp",
      "description": "Aspect Ratio 20 by 3"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.max_width",
      "protocol_dependency": "rtcp",
      "description": "Max Width"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.max_height",
      "protocol_dependency": "rtcp",
      "description": "Max Height"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.min_bitrate",
      "protocol_dependency": "rtcp",
      "description": "Min bit rate"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.bitrate_per_level",
      "protocol_dependency": "rtcp",
      "description": "Bit rate per level"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.bitrate_histogram",
      "protocol_dependency": "rtcp",
      "description": "Receiver Count"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.frame_rate_mask",
      "protocol_dependency": "rtcp",
      "description": "Frame rate mask"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.frame_rate_7_5",
      "protocol_dependency": "rtcp",
      "description": "7.5 fps"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.frame_rate_12_5",
      "protocol_dependency": "rtcp",
      "description": "12.5 fps"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.frame_rate_15",
      "protocol_dependency": "rtcp",
      "description": "15 fps"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.frame_rate_25",
      "protocol_dependency": "rtcp",
      "description": "25 fps"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.frame_rate_30",
      "protocol_dependency": "rtcp",
      "description": "30 fps"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.frame_rate_50",
      "protocol_dependency": "rtcp",
      "description": "50 fps"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.frame_rate_60",
      "protocol_dependency": "rtcp",
      "description": "60 fps"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.musts",
      "protocol_dependency": "rtcp",
      "description": "Number of MUST instances"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.mays",
      "protocol_dependency": "rtcp",
      "description": "Number of MAY instances"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.quality_histogram",
      "protocol_dependency": "rtcp",
      "description": "Receiver Count"
    },
    {
      "field": "rtcp.psfb.ms.vsr.entry.max_pixels",
      "protocol_dependency": "rtcp",
      "description": "Max Pixels per Frame"
    },
    {
      "field": "rtcp.mcptt.fld_id",
      "protocol_dependency": "rtcp",
      "description": "Field Id"
    },
    {
      "field": "rtcp.mcptt.fld_len",
      "protocol_dependency": "rtcp",
      "description": "Length"
    },
    {
      "field": "rtcp.mcptt.fld_val",
      "protocol_dependency": "rtcp",
      "description": "Field value"
    },
    {
      "field": "rtcp.mcptt.granted_partys_id",
      "protocol_dependency": "rtcp",
      "description": "Granted Party's Identity"
    },
    {
      "field": "rtcp.app_data.padding",
      "protocol_dependency": "rtcp",
      "description": "Padding"
    },
    {
      "field": "rtcp.app_data.mcptt.priority",
      "protocol_dependency": "rtcp",
      "description": "Floor Priority"
    },
    {
      "field": "rtcp.app_data.mcptt.user_id",
      "protocol_dependency": "rtcp",
      "description": "User ID"
    },
    {
      "field": "rtcp.app_data.mcptt.duration",
      "protocol_dependency": "rtcp",
      "description": "Duration"
    },
    {
      "field": "rtcp.app_data.mcptt.floor_ind",
      "protocol_dependency": "rtcp",
      "description": "Floor Indicator"
    },
    {
      "field": "rtcp.app_data.mcptt.rej_cause",
      "protocol_dependency": "rtcp",
      "description": "Reject Cause"
    },
    {
      "field": "rtcp.app_data.mcptt.rej_cause.floor_deny",
      "protocol_dependency": "rtcp",
      "description": "Reject Cause"
    },
    {
      "field": "rtcp.app_data.mcptt.rej_cause.floor_revoke",
      "protocol_dependency": "rtcp",
      "description": "Reject Cause"
    },
    {
      "field": "rtcp.mcptt.rej_phrase",
      "protocol_dependency": "rtcp",
      "description": "Reject Phrase"
    },
    {
      "field": "rtcp.app_data.mcptt.queue_pos_inf",
      "protocol_dependency": "rtcp",
      "description": "Queue Position Info"
    },
    {
      "field": "rtcp.app_data.mcptt.queue_pri_lev",
      "protocol_dependency": "rtcp",
      "description": "Queue Priority Level"
    },
    {
      "field": "rtcp.app_data.mcptt.perm_to_req_floor",
      "protocol_dependency": "rtcp",
      "description": "Permission to Request the Floor"
    },
    {
      "field": "rtcp.app_data.mcptt.queue_size",
      "protocol_dependency": "rtcp",
      "description": "Queue Size"
    },
    {
      "field": "rtcp.app_data.mcptt.msg_seq_num",
      "protocol_dependency": "rtcp",
      "description": "Message Sequence Number"
    },
    {
      "field": "rtcp.mcptt.queued_user_id",
      "protocol_dependency": "rtcp",
      "description": "Queued User ID"
    },
    {
      "field": "rtcp.app_data.mcptt.source",
      "protocol_dependency": "rtcp",
      "description": "Source"
    },
    {
      "field": "rtcp.app_data.mcptt.queueing_cap",
      "protocol_dependency": "rtcp",
      "description": "Queueing Capability"
    },
    {
      "field": "rtcp.app_data.mcptt.part_type_len",
      "protocol_dependency": "rtcp",
      "description": "Participant Type Length"
    },
    {
      "field": "rtcp.mcptt.participant_type",
      "protocol_dependency": "rtcp",
      "description": "Participant Type"
    },
    {
      "field": "rtcp.app_data.mcptt.floor_participant_ref",
      "protocol_dependency": "rtcp",
      "description": "Floor Participant Reference"
    },
    {
      "field": "rtcp.app_data.mcptt.rtcp",
      "protocol_dependency": "rtcp",
      "description": "SSRC"
    },
    {
      "field": "rtcp.app_data.mcptt.num_users",
      "protocol_dependency": "rtcp",
      "description": "Number of users"
    },
    {
      "field": "rtcp.app_data.mcptt.user_id_len",
      "protocol_dependency": "rtcp",
      "description": "User ID length"
    },
    {
      "field": "rtcp.spare16",
      "protocol_dependency": "rtcp",
      "description": "Spare"
    },
    {
      "field": "rtcp.app_data.mcptt.num_ssrc",
      "protocol_dependency": "rtcp",
      "description": "Number of SSRC"
    },
    {
      "field": "rtcp.mcptt.func_alias",
      "protocol_dependency": "rtcp",
      "description": "Functional Alias"
    },
    {
      "field": "rtcp.app_data.mcptt.fa_len",
      "protocol_dependency": "rtcp",
      "description": "Functional Alias length"
    },
    {
      "field": "rtcp.app_data.mcptt.num_fa",
      "protocol_dependency": "rtcp",
      "description": "Number of Functional Alias"
    },
    {
      "field": "rtcp.app_data.mcptt.loc_type",
      "protocol_dependency": "rtcp",
      "description": "Location Type"
    },
    {
      "field": "rtcp.app_data.mcptt.cellid",
      "protocol_dependency": "rtcp",
      "description": "CellId"
    },
    {
      "field": "rtcp.app_data.mcptt.enodebid",
      "protocol_dependency": "rtcp",
      "description": "eNodeB Id"
    },
    {
      "field": "rtcp.app_data.mcptt.ecgi_eci",
      "protocol_dependency": "rtcp",
      "description": "ECI (E-UTRAN Cell Identifier)"
    },
    {
      "field": "rtcp.app_data.mcptt.tac",
      "protocol_dependency": "rtcp",
      "description": "Tracking Area Code"
    },
    {
      "field": "rtcp.app_data.mcptt.mbms_serv_area",
      "protocol_dependency": "rtcp",
      "description": "MBMS Service Area"
    },
    {
      "field": "rtcp.app_data.mcptt.mbsfn_area_id",
      "protocol_dependency": "rtcp",
      "description": "MBSFN Area ID"
    },
    {
      "field": "rtcp.app_data.mcptt.lat",
      "protocol_dependency": "rtcp",
      "description": "Latitude value"
    },
    {
      "field": "rtcp.app_data.mcptt.long",
      "protocol_dependency": "rtcp",
      "description": "Longitude value"
    },
    {
      "field": "rtcp.app_data.mcptt.msg_type",
      "protocol_dependency": "rtcp",
      "description": "Message Type"
    },
    {
      "field": "rtcp.app_data.mcptt.num_loc",
      "protocol_dependency": "rtcp",
      "description": "Number of Locations"
    },
    {
      "field": "rtcp.app_data.mcptt.str",
      "protocol_dependency": "rtcp",
      "description": "String"
    },
    {
      "field": "rtcp.app_data.mccp.len",
      "protocol_dependency": "rtcp",
      "description": "Length"
    },
    {
      "field": "rtcp.app_data.mccp.field_id",
      "protocol_dependency": "rtcp",
      "description": "Field id"
    },
    {
      "field": "rtcp.app_data.mccp.mcptt_grp_id",
      "protocol_dependency": "rtcp",
      "description": "MCPTT Group Identity"
    },
    {
      "field": "rtcp.app_data.mccp.audio_m_line_no",
      "protocol_dependency": "rtcp",
      "description": "Audio m-line Number"
    },
    {
      "field": "rtcp.app_data.mccp.floor_m_line_no",
      "protocol_dependency": "rtcp",
      "description": "Floor m-line Number"
    },
    {
      "field": "rtcp.app_data.mccp.ip_version",
      "protocol_dependency": "rtcp",
      "description": "IP version"
    },
    {
      "field": "rtcp.app_data.mccp.floor_port_no",
      "protocol_dependency": "rtcp",
      "description": "Floor Port Number"
    },
    {
      "field": "rtcp.app_data.mccp.media_port_no",
      "protocol_dependency": "rtcp",
      "description": "Media Port Number"
    },
    {
      "field": "rtcp.app_data.mccp.ipv4",
      "protocol_dependency": "rtcp",
      "description": "IP Address"
    },
    {
      "field": "rtcp.app_data.mccp.ipv6",
      "protocol_dependency": "rtcp",
      "description": "IP Address"
    },
    {
      "field": "rtcp.app_data.mccp.tmgi",
      "protocol_dependency": "rtcp",
      "description": "TMGI"
    },
    {
      "field": "rtcp.encrypted",
      "protocol_dependency": "rtcp",
      "description": "Encrypted data"
    },
    {
      "field": "rtcp.not_final_padding",
      "protocol_dependency": "rtcp",
      "description": "Padding flag set on not final packet (see RFC3550, section 6.4.1)"
    },
    {
      "field": "rtcp.bye_reason_not_padded",
      "protocol_dependency": "rtcp",
      "description": "Reason string is not NULL padded (see RFC3550, section 6.6)"
    },
    {
      "field": "rtcp.invalid_block_length",
      "protocol_dependency": "rtcp",
      "description": "Invalid block length, should be 2"
    },
    {
      "field": "rtcp.roundtrip-delay.expert",
      "protocol_dependency": "rtcp",
      "description": "RTCP round-trip delay detected (%d ms)"
    },
    {
      "field": "rtcp.roundtrip-delay.negative",
      "protocol_dependency": "rtcp",
      "description": "Negative RTCP round-trip delay detected (%d ms)"
    },
    {
      "field": "rtcp.length_check.bad",
      "protocol_dependency": "rtcp",
      "description": "Incorrect RTCP packet length information (expected %u bytes, found %d)"
    },
    {
      "field": "rtcp.psfb.ms.afb_type.unknown",
      "protocol_dependency": "rtcp",
      "description": "Unknown Application Layer Feedback Type"
    },
    {
      "field": "rtcp.missing_sender_ssrc",
      "protocol_dependency": "rtcp",
      "description": "Missing Sender SSRC"
    },
    {
      "field": "rtcp.missing_block_header",
      "protocol_dependency": "rtcp",
      "description": "Missing Required Block Headers"
    },
    {
      "field": "rtcp.block_length.invalid",
      "protocol_dependency": "rtcp",
      "description": "Block length is greater than packet length"
    },
    {
      "field": "rtcp.rtpfb.transportcc_bad",
      "protocol_dependency": "rtcp",
      "description": "Too many packet chunks (more than packet status count)"
    },
    {
      "field": "rtcp.mcptt.unknown_fld",
      "protocol_dependency": "rtcp",
      "description": "Unknown field"
    },
    {
      "field": "rtcp.mcptt.location_type_uk",
      "protocol_dependency": "rtcp",
      "description": "Unknown location type"
    },
    {
      "field": "rtcp.appl.extra_bytes",
      "protocol_dependency": "rtcp",
      "description": "Extra bytes detected"
    },
    {
      "field": "rtcp.appl.not_ascii",
      "protocol_dependency": "rtcp",
      "description": "Application name is not a string"
    },
    {
      "field": "rtcp.appl.non_conformant",
      "protocol_dependency": "rtcp",
      "description": "Data not according to standards"
    },
    {
      "field": "rtcp.appl.non_zero_pad",
      "protocol_dependency": "rtcp",
      "description": "Non zero padding detected, faulty encoding?"
    }
  ]
}